[{"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx":"1","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js":"2","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js":"3","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js":"5","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js":"6","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js":"8","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js":"9","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js":"10","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js":"11","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js":"12","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js":"13","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js":"14","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js":"15","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js":"16","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js":"17","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js":"18","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js":"19","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js":"20","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Experience.js":"21","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js":"22","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js":"23","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js":"24","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js":"25","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js":"26","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js":"27","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Education.js":"28","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js":"29","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js":"30","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\post.js":"31","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\post.js":"32","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js":"33","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js":"34","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\Post.js":"35","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js":"36","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js":"37","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js":"38","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileTop.js":"39","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js":"40","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js":"41"},{"size":197,"mtime":1610277814710,"results":"42","hashOfConfig":"43"},{"size":2558,"mtime":1615143488057,"results":"44","hashOfConfig":"43"},{"size":407,"mtime":1610549767196,"results":"45","hashOfConfig":"43"},{"size":272,"mtime":1610634656327,"results":"46","hashOfConfig":"43"},{"size":568,"mtime":1610623957660,"results":"47","hashOfConfig":"43"},{"size":588,"mtime":1610737711861,"results":"48","hashOfConfig":"43"},{"size":4083,"mtime":1615192758680,"results":"49","hashOfConfig":"43"},{"size":2302,"mtime":1610890205249,"results":"50","hashOfConfig":"43"},{"size":3525,"mtime":1614234927962,"results":"51","hashOfConfig":"43"},{"size":3349,"mtime":1610898808837,"results":"52","hashOfConfig":"43"},{"size":3464,"mtime":1615057720602,"results":"53","hashOfConfig":"43"},{"size":958,"mtime":1615143419325,"results":"54","hashOfConfig":"43"},{"size":1840,"mtime":1615139619934,"results":"55","hashOfConfig":"43"},{"size":1837,"mtime":1614512652132,"results":"56","hashOfConfig":"43"},{"size":2625,"mtime":1614261185022,"results":"57","hashOfConfig":"43"},{"size":8753,"mtime":1615036052735,"results":"58","hashOfConfig":"43"},{"size":1042,"mtime":1614404333724,"results":"59","hashOfConfig":"43"},{"size":407,"mtime":1610624248987,"results":"60","hashOfConfig":"43"},{"size":300,"mtime":1610744998412,"results":"61","hashOfConfig":"43"},{"size":364,"mtime":1615037798949,"results":"62","hashOfConfig":"43"},{"size":1497,"mtime":1614257568733,"results":"63","hashOfConfig":"43"},{"size":5305,"mtime":1615037150672,"results":"64","hashOfConfig":"43"},{"size":7049,"mtime":1610890800194,"results":"65","hashOfConfig":"43"},{"size":280,"mtime":1614352620702,"results":"66","hashOfConfig":"43"},{"size":530,"mtime":1610623856294,"results":"67","hashOfConfig":"43"},{"size":1223,"mtime":1614354815631,"results":"68","hashOfConfig":"43"},{"size":1129,"mtime":1614260501605,"results":"69","hashOfConfig":"43"},{"size":1488,"mtime":1614257776610,"results":"70","hashOfConfig":"43"},{"size":1261,"mtime":1614502435140,"results":"71","hashOfConfig":"43"},{"size":1193,"mtime":1615139899600,"results":"72","hashOfConfig":"43"},{"size":3859,"mtime":1615140243573,"results":"73","hashOfConfig":"43"},{"size":1838,"mtime":1614404899736,"results":"74","hashOfConfig":"43"},{"size":2382,"mtime":1614403699142,"results":"75","hashOfConfig":"43"},{"size":1132,"mtime":1614366195157,"results":"76","hashOfConfig":"43"},{"size":1234,"mtime":1614406975881,"results":"77","hashOfConfig":"43"},{"size":1160,"mtime":1614405455733,"results":"78","hashOfConfig":"43"},{"size":1791,"mtime":1614407914751,"results":"79","hashOfConfig":"43"},{"size":1013,"mtime":1614502283909,"results":"80","hashOfConfig":"43"},{"size":2810,"mtime":1614505532247,"results":"81","hashOfConfig":"43"},{"size":980,"mtime":1614506627617,"results":"82","hashOfConfig":"43"},{"size":1844,"mtime":1614510621941,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"17byksv",{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"86"},"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx",[],["188","189"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js",["190","191","192"],"import './App.css';\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport CreateProfile from './components/profile-forms/EditProfile';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\n\r\n//Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './storee';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, [loadUser]);\r\n    return (\r\n        <Provider store={store}>\r\n            <Router >\r\n                <Fragment >\r\n                    <Navbar />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n\r\n                    <section className=\"container\">\r\n\r\n                        <Alert />\r\n                        <Switch>\r\n                            <Route exact path=\"/register\" component={Register} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Route exact path=\"/profiles\" component={Profiles} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n                            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n                            <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n                            <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n\r\n\r\n                        </Switch>\r\n                    </section>\r\n                </Fragment > </Router></Provider>\r\n    )\r\n};\r\nexport default App;","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js",["193","194","195","196","197","198"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js",["199","200"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school,\r\n        degree,\r\n        fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Add Your Education\r\n      </h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add anyworkshop or school you attended\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form class=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                        setFormData({ ...formData });\r\n                        toggleDisabled(!toDateDisabled);\r\n                    }} /> {\"  \"}Current Job</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\" Description\"\r\n                        value={description} onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(addEducation);\r\n",["201","202"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js",["203","204","205"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport Navbar from '../layout/Navbar';\r\n\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n\r\n                <h1 className=\"large text-primary\">Sign Up</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Name\" name=\"name\" value='name' value={name} onChange={e => onChange(e)} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n                        <small className=\"form-text\"\r\n                        >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            minLength=\"6\"\r\n                            value={password2} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account? <Link to=\"/login\">Sign In</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoprops = state => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(\r\n    mapStatetoprops, { setAlert, register }\r\n)(Register);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js",["206","207"],"import React, { Fragment } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport '../../landing.css'\r\n\r\nimport { Grid } from '@material-ui/core'\r\nimport Container from '@material-ui/core/Container'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\n\r\n\r\nexport const Landing = ({ isAuthenticated }) => {\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth='sm'>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Paper />\r\n        </Grid>\r\n\r\n      </Container>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js",["208"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n\r\n  const authLinks = (\r\n    <ul>\r\n\r\n      <li><a onClick={logout} href=\"http://localhost:3000\">\r\n        <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n        <span className=\"hide-sm\">Logout</span></a></li>\r\n\r\n      <li><Link to=\"/profiles\"><i className=\"mdi mdi-account-check\r\n\"></i><span className=\"hide-sm\">Developers</span></Link></li>\r\n      <li><Link to=\"/posts\"><i className=\"fas fa-user\"></i><span className=\"hide-sm\">Posts</span></Link></li>\r\n      <li><Link to=\"/dashboard\"><i className=\"fas fa-user\"></i><span className=\"hide-sm\">Dashboard</span></Link></li>\r\n\r\n      <li><a onClick={logout} href=\"http://localhost:3000\">\r\n        <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n        <span className=\"hide-sm\">Logout</span></a></li>\r\n\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li><Link to=\"/profiles\">Developers</Link></li>\r\n      <li><Link to=\"/register\">Register</Link></li>\r\n      <li><Link to=\"/login\">Login</Link></li>\r\n    </ul>\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {!loading && isAuthenticated &&\r\n        <nav className=\"navbar bg-dark\">\r\n          <h1>\r\n            <Link to=\"/\"><i className=\"fas fa-code\"></i> Apsit-Hub</Link>\r\n          </h1>\r\n          {!loading && (<Fragment>{isAuthenticated && authLinks}</Fragment>)}\r\n        </nav>\r\n      }\r\n    </Fragment>\r\n\r\n  )\r\n};\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStatetoprops = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStatetoprops, { logout })(Navbar);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js",["209"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileGithub from './ProfileGithub';\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nfunction Profile({ match, getProfileById, auth, profile: { profile, loading } }) {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfileById(match.params.id)\r\n\t}, [getProfileById])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Fragment>\r\n\t\t\t\t{profile === null || loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{/* <h1 className=\"large text-primary\"> Dashboard </h1>\r\n\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-user\"></i> Welcome {auth.user && auth.user.name}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/edit-profile\">\r\n\t\t\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/profiles\" className=\"btn btn-light\">Back To Profiles</Link>\r\n\t\t\t\t\t\t\t{auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\r\n\t\t\t\t\t\t\t\t<Link to=\"/edit-profile\" className=\"btn btn-light\">Edit Profile</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"profile-grid my-1\">\r\n\t\t\t\t\t\t\t\t<ProfileTop profile={profile} />\r\n\t\t\t\t\t\t\t\t<ProfileAbout profile={profile} />\r\n\t\t\t\t\t\t\t\t{profile.githubusername && (<ProfileGithub username={profile.githubusername} />)}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js",["210","211","212","213"],"import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile, deleteAccount, createProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Education from './Education';\r\nimport CreateProfile from '../profile-forms/CreateProfile'\r\n\r\n\r\nconst Dashboard = ({ deleteAccount, getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n\r\n\r\n\r\n\r\n    // return loading && profile === null ? <Spinner /> : <Fragment>\r\n\r\n    //     {profile !== null ? (\r\n    //         <Fragment>\r\n    //             <Redirect to={`/profile/${user._id}`} />\r\n    //         </Fragment>) :\r\n    //         (<Fragment>\r\n    //             <CreateProfile />\r\n    //         </Fragment>)}\r\n    // </Fragment>;\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />) : (\r\n            <Fragment>\r\n                <h1 className='large text-primary'>Dashboard</h1>\r\n                <p className='lead' >\r\n                    <i className='fas fa-user' />Welcome {user && user.name}\r\n                </p>\r\n                {profile !== null ? (\r\n                    <Fragment>\r\n                        <DashboardActions />\r\n                        {/* <Education education={profile.education} /> */}\r\n                        <div className='my-2'></div>\r\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>                    </Fragment>\r\n                ) : (\r\n                        <Fragment>\r\n                            {/* <p>You have not setup your profile yet, please add some info</p>\r\n                            <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link> */}\r\n                            <CreateProfile />\r\n                        </Fragment>\r\n                    )}\r\n            </Fragment>\r\n        );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js",["214"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAccount } from '../../actions/profile';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, deleteAccount, createProfile, getCurrentProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            company: 'yay',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        console.log(profile)\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Edit Your Profile\r\n      </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} />\r\n\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n            username</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button type=\"button\" onClick={() => toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n          </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && <Fragment>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                </Fragment>}\r\n\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n\r\n                <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                    <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { deleteAccount, createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js",["215"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Experience.js",["216","217"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js",["218"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js",["219"],"import { CLEAR_PROFILE, GET_PROFILES, GET_PROFILE, UPDATE_PROFILE, GET_REPOS, PROFILE_ERROR, } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js",["220"],"import {\r\n    REGISTER_SUCCESS, ACCOUNT_DELETED,\r\n    REGISTER_FAIL, LOGOUT, LOGIN_FAIL, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n\r\n            localStorage.setItem('token', payload.token);\r\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n\r\n            localStorage.removeItem('token')\r\n            return { ...state, token: null, isAuthenticated: false, loading: false };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Education.js",["221","222"],"import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Education = ({ education }) => {\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment>- {' '}\r\n                {\r\n                    edu.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                            <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n\r\n                        )\r\n                }\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thread>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thread>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Education;\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js",["223"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport Navbar from '../layout/Navbar';\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n\r\n    return (\r\n\r\n        loading ? <Spinner /> : (\r\n            <Fragment>\r\n                <h1 class=\"large text-primary\">Posts</h1>\r\n                <p className=\"lead\">\r\n                    <i class=\"fas fa-user\"></i>Welcome to the community</p>\r\n                <PostForm />\r\n                <div className=\"posts\">\r\n                    {posts.map(post => (<PostItem key={post._id} post={post} />\r\n                    ))}\r\n\r\n                </div>\r\n            </Fragment>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ post: state.post });\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\post.js",["224","225"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { ADD_COMMENT, REMOVE_COMMENT, GET_POST, GET_POSTS, ADD_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST } from './types';\r\n\r\n//Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({ type: GET_POSTS, payload: res.data });\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: DELETE_POST, payload: id });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//add post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n        dispatch({ type: ADD_POST, payload: res.data });\r\n\r\n        dispatch(setAlert('Post created', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Get Post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: GET_POST, payload: res.data });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({ type: ADD_COMMENT, payload: res.data });\r\n\r\n        dispatch(setAlert('comment added', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n\r\n    try {\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n\r\n        dispatch(setAlert('comment removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\post.js",["226"],"import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST: return {\r\n            ...state,\r\n            post: payload,\r\n            loading: false\r\n        }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post), loading: false\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload), loading: false\r\n            }\r\n\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: payload },\r\n            loading: false\r\n        };\r\n\r\n        case REMOVE_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\Post.js",["227","228"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPost } from '../../actions/post';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        {/* <Link to='/posts' className='btn'>Back to Posts</Link> */}\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n            {post.comments.map(comment => (\r\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n            ))}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js",["229"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\n\r\nconst CommentItem = ({ postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\r\n    return (\r\n        <div class=\"comments\">\r\n            <div class=\"post bg-white p-1 my-1\">\r\n                <div>\r\n                    <Link to={`/profile/${user}`}>\r\n                        <img\r\n                            class=\"round-img\"\r\n                            src={avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p class=\"my-1\">\r\n                        {text}\r\n                    </p>\r\n                    <p class=\"post-date\">\r\n                        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                    </p>\r\n                    {!auth.loading && user === auth.user._id && (\r\n                        <button onClick={e => deleteComment(postId, _id)} type='button' className=\"btn btn-danger\">\r\n                            <i class=\"fas fa-times\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js",["230"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profileitem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n}) => {\r\n    return <div className=\"profile bg-light\" >\r\n        <img src={avatar} alt=\" \" className=\"round-img\" />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{status} {company && <span> at {company}</span>}</p>\r\n            <p className=\"my-1\" >{location && <span> at {location}</span>}</p>\r\n            <Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\r\n\r\n\r\n        </div>\r\n        <ul>\r\n            {skills.slice(0, 4).map((skill, index) => (\r\n                <li key={index} className='text-primary'>\r\n                    <i className=\"fas fa-check\"></i>{skill}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n\r\n    </div >\r\n};\r\n\r\nProfileitem.propTypes = {\r\n\r\n}\r\n\r\nexport default Profileitem\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js",["231"],"import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    },\r\n        [getGithubRepos]\r\n\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\"> Github Repos</h2>\r\n            {\r\n                repos === null ? <Spinner /> : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                            <div>\r\n                                <h4><a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a></h4>\r\n                                <p>{repo.description}</p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ul>\r\n                                    <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                                    <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                                    <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                        </div>)\r\n                    )\r\n\r\n                )}\r\n        </div >\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({ repos: state.profile.repos });\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n",{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":13,"column":8,"nodeType":"238","messageId":"239","endLine":13,"endColumn":21},{"ruleId":"236","severity":1,"message":"240","line":23,"column":8,"nodeType":"238","messageId":"239","endLine":23,"endColumn":20},{"ruleId":"241","severity":1,"message":"242","line":27,"column":8,"nodeType":"243","endLine":27,"endColumn":18,"suggestions":"244"},{"ruleId":"236","severity":1,"message":"245","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":17},{"ruleId":"236","severity":1,"message":"246","line":5,"column":10,"nodeType":"238","messageId":"239","endLine":5,"endColumn":17},{"ruleId":"236","severity":1,"message":"247","line":8,"column":10,"nodeType":"238","messageId":"239","endLine":8,"endColumn":16},{"ruleId":"236","severity":1,"message":"248","line":17,"column":8,"nodeType":"238","messageId":"239","endLine":17,"endColumn":13},{"ruleId":"236","severity":1,"message":"249","line":22,"column":8,"nodeType":"238","messageId":"239","endLine":22,"endColumn":14},{"ruleId":"250","severity":1,"message":"251","line":45,"column":9,"nodeType":"252","messageId":"253","endLine":48,"endColumn":10,"fix":"254"},{"ruleId":"236","severity":1,"message":"255","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"256","line":2,"column":16,"nodeType":"238","messageId":"239","endLine":2,"endColumn":26},{"ruleId":"232","replacedBy":"257"},{"ruleId":"234","replacedBy":"258"},{"ruleId":"236","severity":1,"message":"248","line":2,"column":8,"nodeType":"238","messageId":"239","endLine":2,"endColumn":13},{"ruleId":"236","severity":1,"message":"249","line":7,"column":8,"nodeType":"238","messageId":"239","endLine":7,"endColumn":14},{"ruleId":"259","severity":1,"message":"260","line":45,"column":88,"nodeType":"261","endLine":45,"endColumn":100},{"ruleId":"236","severity":1,"message":"262","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"255","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"263","line":27,"column":9,"nodeType":"238","messageId":"239","endLine":27,"endColumn":19},{"ruleId":"241","severity":1,"message":"264","line":15,"column":5,"nodeType":"243","endLine":15,"endColumn":21,"suggestions":"265"},{"ruleId":"236","severity":1,"message":"255","line":3,"column":10,"nodeType":"238","messageId":"239","endLine":3,"endColumn":14},{"ruleId":"236","severity":1,"message":"266","line":3,"column":16,"nodeType":"238","messageId":"239","endLine":3,"endColumn":24},{"ruleId":"236","severity":1,"message":"267","line":5,"column":44,"nodeType":"238","messageId":"239","endLine":5,"endColumn":57},{"ruleId":"236","severity":1,"message":"268","line":8,"column":8,"nodeType":"238","messageId":"239","endLine":8,"endColumn":17},{"ruleId":"241","severity":1,"message":"269","line":44,"column":8,"nodeType":"243","endLine":44,"endColumn":36,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":5,"column":1,"nodeType":"273","endLine":13,"endColumn":3},{"ruleId":"236","severity":1,"message":"274","line":1,"column":27,"nodeType":"238","messageId":"239","endLine":1,"endColumn":35},{"ruleId":"236","severity":1,"message":"275","line":5,"column":10,"nodeType":"238","messageId":"239","endLine":5,"endColumn":17},{"ruleId":"271","severity":1,"message":"276","line":5,"column":1,"nodeType":"273","endLine":18,"endColumn":2},{"ruleId":"271","severity":1,"message":"276","line":12,"column":1,"nodeType":"273","endLine":50,"endColumn":2},{"ruleId":"271","severity":1,"message":"276","line":14,"column":1,"nodeType":"273","endLine":40,"endColumn":2},{"ruleId":"236","severity":1,"message":"274","line":1,"column":27,"nodeType":"238","messageId":"239","endLine":1,"endColumn":35},{"ruleId":"236","severity":1,"message":"275","line":5,"column":10,"nodeType":"238","messageId":"239","endLine":5,"endColumn":17},{"ruleId":"236","severity":1,"message":"249","line":8,"column":8,"nodeType":"238","messageId":"239","endLine":8,"endColumn":14},{"ruleId":"236","severity":1,"message":"277","line":58,"column":15,"nodeType":"238","messageId":"239","endLine":58,"endColumn":18},{"ruleId":"236","severity":1,"message":"277","line":143,"column":15,"nodeType":"238","messageId":"239","endLine":143,"endColumn":18},{"ruleId":"271","severity":1,"message":"276","line":19,"column":1,"nodeType":"273","endLine":71,"endColumn":2},{"ruleId":"236","severity":1,"message":"255","line":7,"column":10,"nodeType":"238","messageId":"239","endLine":7,"endColumn":14},{"ruleId":"241","severity":1,"message":"264","line":14,"column":8,"nodeType":"243","endLine":14,"endColumn":17,"suggestions":"278"},{"ruleId":"236","severity":1,"message":"262","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"279","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":17},{"ruleId":"241","severity":1,"message":"280","line":12,"column":9,"nodeType":"243","endLine":12,"endColumn":25,"suggestions":"281"},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'AddExperience' is defined but never used.","Identifier","unusedVar","'setAuthToken' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'loadUser'. Either exclude it or remove the dependency array. Outer scope values like 'loadUser' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["284"],"'Container' is defined but never used.","'palette' is defined but never used.","'sizing' is defined but never used.","'axios' is defined but never used.","'Navbar' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:600px)'] found.","Property","unnecessarilyComputedProperty",{"range":"285","text":"286"},"'Link' is defined but never used.","'withRouter' is defined but never used.",["282"],["283"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Fragment' is defined but never used.","'guestLinks' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["287"],"'Redirect' is defined but never used.","'createProfile' is defined but never used.","'Education' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["288"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'connect' is defined but never used.","Unexpected default export of anonymous function","'res' is assigned a value but never used.",["289"],"'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["290"],"no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},[1187,1215],"'@media (max-width:600px)'",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: []",{"range":"301","text":"302"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"303","text":"304"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"305","text":"306"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"307","text":"308"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"309","text":"310"},[1192,1202],"[]",[548,564],"[getProfileById, match.params.id]",[1970,1998],"[loading, getCurrentProfile, profile]",[531,540],"[getPost, match.params.id]",[361,377],"[getGithubRepos, username]"]