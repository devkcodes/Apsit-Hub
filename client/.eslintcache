[{"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx":"1","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js":"2","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js":"3","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js":"5","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js":"6","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js":"8","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js":"9","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js":"10","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js":"11","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js":"12","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js":"13","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js":"14","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js":"15","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js":"16","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js":"17","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js":"18","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js":"19","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js":"20","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Experience.js":"21","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js":"22","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js":"23","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js":"24","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js":"25","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js":"26","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js":"27","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Education.js":"28","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js":"29","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js":"30","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\post.js":"31","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\post.js":"32","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js":"33","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js":"34","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\Post.js":"35","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js":"36","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js":"37","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js":"38","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileTop.js":"39","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js":"40","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js":"41"},{"size":197,"mtime":1610277814710,"results":"42","hashOfConfig":"43"},{"size":2600,"mtime":1615046012288,"results":"44","hashOfConfig":"43"},{"size":407,"mtime":1610549767196,"results":"45","hashOfConfig":"43"},{"size":272,"mtime":1610634656327,"results":"46","hashOfConfig":"43"},{"size":568,"mtime":1610623957660,"results":"47","hashOfConfig":"43"},{"size":588,"mtime":1610737711861,"results":"48","hashOfConfig":"43"},{"size":2232,"mtime":1615035400859,"results":"49","hashOfConfig":"43"},{"size":2302,"mtime":1610890205249,"results":"50","hashOfConfig":"43"},{"size":3525,"mtime":1614234927962,"results":"51","hashOfConfig":"43"},{"size":3349,"mtime":1610898808837,"results":"52","hashOfConfig":"43"},{"size":3420,"mtime":1610735138722,"results":"53","hashOfConfig":"43"},{"size":1088,"mtime":1614255059116,"results":"54","hashOfConfig":"43"},{"size":1563,"mtime":1615038138463,"results":"55","hashOfConfig":"43"},{"size":1837,"mtime":1614512652132,"results":"56","hashOfConfig":"43"},{"size":2625,"mtime":1614261185022,"results":"57","hashOfConfig":"43"},{"size":8753,"mtime":1615036052735,"results":"58","hashOfConfig":"43"},{"size":1042,"mtime":1614404333724,"results":"59","hashOfConfig":"43"},{"size":407,"mtime":1610624248987,"results":"60","hashOfConfig":"43"},{"size":300,"mtime":1610744998412,"results":"61","hashOfConfig":"43"},{"size":364,"mtime":1615037798949,"results":"62","hashOfConfig":"43"},{"size":1497,"mtime":1614257568733,"results":"63","hashOfConfig":"43"},{"size":5305,"mtime":1615037150672,"results":"64","hashOfConfig":"43"},{"size":7049,"mtime":1610890800194,"results":"65","hashOfConfig":"43"},{"size":280,"mtime":1614352620702,"results":"66","hashOfConfig":"43"},{"size":530,"mtime":1610623856294,"results":"67","hashOfConfig":"43"},{"size":1223,"mtime":1614354815631,"results":"68","hashOfConfig":"43"},{"size":1129,"mtime":1614260501605,"results":"69","hashOfConfig":"43"},{"size":1488,"mtime":1614257776610,"results":"70","hashOfConfig":"43"},{"size":1261,"mtime":1614502435140,"results":"71","hashOfConfig":"43"},{"size":1087,"mtime":1614365577970,"results":"72","hashOfConfig":"43"},{"size":3833,"mtime":1614404633117,"results":"73","hashOfConfig":"43"},{"size":1838,"mtime":1614404899736,"results":"74","hashOfConfig":"43"},{"size":2382,"mtime":1614403699142,"results":"75","hashOfConfig":"43"},{"size":1132,"mtime":1614366195157,"results":"76","hashOfConfig":"43"},{"size":1234,"mtime":1614406975881,"results":"77","hashOfConfig":"43"},{"size":1160,"mtime":1614405455733,"results":"78","hashOfConfig":"43"},{"size":1791,"mtime":1614407914751,"results":"79","hashOfConfig":"43"},{"size":1013,"mtime":1614502283909,"results":"80","hashOfConfig":"43"},{"size":2810,"mtime":1614505532247,"results":"81","hashOfConfig":"43"},{"size":980,"mtime":1614506627617,"results":"82","hashOfConfig":"43"},{"size":1844,"mtime":1614510621941,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"17byksv",{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"86"},"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx",[],["184","185"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js",["186","187"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js",["188"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n\r\n        email: '',\r\n        password: '',\r\n\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/posts\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign In</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into your account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoProps = state => ({ isAuthenticated: state.auth.isAuthenticated })\r\n\r\n\r\nexport default connect(mapStatetoProps, { login })(Login);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js",["189","190"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school,\r\n        degree,\r\n        fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Add Your Education\r\n      </h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add anyworkshop or school you attended\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form class=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                        setFormData({ ...formData });\r\n                        toggleDisabled(!toDateDisabled);\r\n                    }} /> {\"  \"}Current Job</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\" Description\"\r\n                        value={description} onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(addEducation);\r\n",["191","192"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js",["193","194"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign Up</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Name\" name=\"name\" value='name' value={name} onChange={e => onChange(e)} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n                        <small className=\"form-text\"\r\n                        >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            minLength=\"6\"\r\n                            value={password2} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account? <Link to=\"/login\">Sign In</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoprops = state => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(\r\n    mapStatetoprops, { setAlert, register }\r\n)(Register);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js",["195"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileGithub from './ProfileGithub';\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nfunction Profile({ match, getProfileById, auth, profile: { profile, loading } }) {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfileById(match.params.id)\r\n\t}, [getProfileById])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Fragment>\r\n\t\t\t\t{profile === null || loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{/* <h1 className=\"large text-primary\"> Dashboard </h1>\r\n\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-user\"></i> Welcome {auth.user && auth.user.name}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/edit-profile\">\r\n\t\t\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/profiles\" className=\"btn btn-light\">Back To Profiles</Link>\r\n\t\t\t\t\t\t\t{auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\r\n\t\t\t\t\t\t\t\t<Link to=\"/edit-profile\" className=\"btn btn-light\">Edit Profile</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"profile-grid my-1\">\r\n\t\t\t\t\t\t\t\t<ProfileTop profile={profile} />\r\n\t\t\t\t\t\t\t\t<ProfileAbout profile={profile} />\r\n\t\t\t\t\t\t\t\t{profile.githubusername && (<ProfileGithub username={profile.githubusername} />)}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js",["196","197","198","199"],"import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile, deleteAccount, createProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Education from './Education';\r\nimport CreateProfile from '../profile-forms/CreateProfile'\r\n\r\n\r\nconst Dashboard = ({ deleteAccount, getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n\r\n\r\n\r\n\r\n    // return loading && profile === null ? <Spinner /> : <Fragment>\r\n\r\n    //     {profile !== null ? (\r\n    //         <Fragment>\r\n    //             <Redirect to={`/profile/${user._id}`} />\r\n    //         </Fragment>) :\r\n    //         (<Fragment>\r\n    //             <CreateProfile />\r\n    //         </Fragment>)}\r\n    // </Fragment>;\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />) : (\r\n            <Fragment>\r\n                <h1 className='large text-primary'>Dashboard</h1>\r\n                <p className='lead' >\r\n                    <i className='fas fa-user' />Welcome {user && user.name}\r\n                </p>\r\n                {profile !== null ? (\r\n                    <Fragment>\r\n                        <DashboardActions />\r\n                        {/* <Education education={profile.education} /> */}\r\n                        <div className='my-2'></div>\r\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>                    </Fragment>\r\n                ) : (\r\n                        <Fragment>\r\n                            {/* <p>You have not setup your profile yet, please add some info</p>\r\n                            <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link> */}\r\n                            <CreateProfile />\r\n                        </Fragment>\r\n                    )}\r\n            </Fragment>\r\n        );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js",["200"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js",["201"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Experience.js",["202","203"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js",["204"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js",["205"],"import { CLEAR_PROFILE, GET_PROFILES, GET_PROFILE, UPDATE_PROFILE, GET_REPOS, PROFILE_ERROR, } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js",["206"],"import {\r\n    REGISTER_SUCCESS, ACCOUNT_DELETED,\r\n    REGISTER_FAIL, LOGOUT, LOGIN_FAIL, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n\r\n            localStorage.setItem('token', payload.token);\r\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n\r\n            localStorage.removeItem('token')\r\n            return { ...state, token: null, isAuthenticated: false, loading: false };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Education.js",["207","208"],"import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Education = ({ education }) => {\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment>- {' '}\r\n                {\r\n                    edu.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                            <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n\r\n                        )\r\n                }\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thread>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thread>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Education;\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\post.js",["209","210"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { ADD_COMMENT, REMOVE_COMMENT, GET_POST, GET_POSTS, ADD_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST } from './types';\r\n\r\n//Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({ type: GET_POSTS, payload: res.data });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: DELETE_POST, payload: id });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//add post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n        dispatch({ type: ADD_POST, payload: res.data });\r\n\r\n        dispatch(setAlert('Post created', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Get Post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: GET_POST, payload: res.data });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({ type: ADD_COMMENT, payload: res.data });\r\n\r\n        dispatch(setAlert('comment added', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n\r\n    try {\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n\r\n        dispatch(setAlert('comment removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\post.js",["211"],"import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST: return {\r\n            ...state,\r\n            post: payload,\r\n            loading: false\r\n        }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post), loading: false\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload), loading: false\r\n            }\r\n\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: payload },\r\n            loading: false\r\n        };\r\n\r\n        case REMOVE_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\Post.js",["212","213"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPost } from '../../actions/post';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        {/* <Link to='/posts' className='btn'>Back to Posts</Link> */}\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n            {post.comments.map(comment => (\r\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n            ))}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js",["214"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\n\r\nconst CommentItem = ({ postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\r\n    return (\r\n        <div class=\"comments\">\r\n            <div class=\"post bg-white p-1 my-1\">\r\n                <div>\r\n                    <Link to={`/profile/${user}`}>\r\n                        <img\r\n                            class=\"round-img\"\r\n                            src={avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p class=\"my-1\">\r\n                        {text}\r\n                    </p>\r\n                    <p class=\"post-date\">\r\n                        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                    </p>\r\n                    {!auth.loading && user === auth.user._id && (\r\n                        <button onClick={e => deleteComment(postId, _id)} type='button' className=\"btn btn-danger\">\r\n                            <i class=\"fas fa-times\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js",["215"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profileitem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n}) => {\r\n    return <div className=\"profile bg-light\" >\r\n        <img src={avatar} alt=\" \" className=\"round-img\" />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{status} {company && <span> at {company}</span>}</p>\r\n            <p className=\"my-1\" >{location && <span> at {location}</span>}</p>\r\n            <Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\r\n\r\n\r\n        </div>\r\n        <ul>\r\n            {skills.slice(0, 4).map((skill, index) => (\r\n                <li key={index} className='text-primary'>\r\n                    <i className=\"fas fa-check\"></i>{skill}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n\r\n    </div >\r\n};\r\n\r\nProfileitem.propTypes = {\r\n\r\n}\r\n\r\nexport default Profileitem\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js",["216"],"import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    },\r\n        [getGithubRepos]\r\n\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\"> Github Repos</h2>\r\n            {\r\n                repos === null ? <Spinner /> : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                            <div>\r\n                                <h4><a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a></h4>\r\n                                <p>{repo.description}</p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ul>\r\n                                    <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                                    <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                                    <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                        </div>)\r\n                    )\r\n\r\n                )}\r\n        </div >\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({ repos: state.profile.repos });\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n",{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":14,"column":8,"nodeType":"223","messageId":"224","endLine":14,"endColumn":21},{"ruleId":"221","severity":1,"message":"225","line":24,"column":8,"nodeType":"223","messageId":"224","endLine":24,"endColumn":20},{"ruleId":"221","severity":1,"message":"226","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":13},{"ruleId":"221","severity":1,"message":"227","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"228","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":26},{"ruleId":"217","replacedBy":"229"},{"ruleId":"219","replacedBy":"230"},{"ruleId":"221","severity":1,"message":"226","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":42,"column":88,"nodeType":"233","endLine":42,"endColumn":100},{"ruleId":"234","severity":1,"message":"235","line":15,"column":5,"nodeType":"236","endLine":15,"endColumn":21,"suggestions":"237"},{"ruleId":"221","severity":1,"message":"227","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":14},{"ruleId":"221","severity":1,"message":"238","line":3,"column":16,"nodeType":"223","messageId":"224","endLine":3,"endColumn":24},{"ruleId":"221","severity":1,"message":"239","line":5,"column":44,"nodeType":"223","messageId":"224","endLine":5,"endColumn":57},{"ruleId":"221","severity":1,"message":"240","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":17},{"ruleId":"234","severity":1,"message":"241","line":44,"column":8,"nodeType":"236","endLine":44,"endColumn":36,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":5,"column":1,"nodeType":"245","endLine":13,"endColumn":3},{"ruleId":"221","severity":1,"message":"246","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"247","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":17},{"ruleId":"243","severity":1,"message":"248","line":5,"column":1,"nodeType":"245","endLine":18,"endColumn":2},{"ruleId":"243","severity":1,"message":"248","line":12,"column":1,"nodeType":"245","endLine":50,"endColumn":2},{"ruleId":"243","severity":1,"message":"248","line":14,"column":1,"nodeType":"245","endLine":40,"endColumn":2},{"ruleId":"221","severity":1,"message":"246","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"247","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":17},{"ruleId":"221","severity":1,"message":"249","line":57,"column":15,"nodeType":"223","messageId":"224","endLine":57,"endColumn":18},{"ruleId":"221","severity":1,"message":"249","line":142,"column":15,"nodeType":"223","messageId":"224","endLine":142,"endColumn":18},{"ruleId":"243","severity":1,"message":"248","line":19,"column":1,"nodeType":"245","endLine":71,"endColumn":2},{"ruleId":"221","severity":1,"message":"227","line":7,"column":10,"nodeType":"223","messageId":"224","endLine":7,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":14,"column":8,"nodeType":"236","endLine":14,"endColumn":17,"suggestions":"250"},{"ruleId":"221","severity":1,"message":"251","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"252","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":17},{"ruleId":"234","severity":1,"message":"253","line":12,"column":9,"nodeType":"236","endLine":12,"endColumn":25,"suggestions":"254"},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'AddExperience' is defined but never used.","Identifier","unusedVar","'setAuthToken' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.",["255"],["256"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["257"],"'Redirect' is defined but never used.","'createProfile' is defined but never used.","'Education' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["258"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'connect' is defined but never used.","Unexpected default export of anonymous function","'res' is assigned a value but never used.",["259"],"'Fragment' is defined but never used.","'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"269","text":"270"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"271","text":"272"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"273","text":"274"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"275","text":"276"},[548,564],"[getProfileById, match.params.id]",[1970,1998],"[loading, getCurrentProfile, profile]",[531,540],"[getPost, match.params.id]",[361,377],"[getGithubRepos, username]"]