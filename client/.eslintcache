[{"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\index.jsx":"1","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\App.js":"2","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\storee.js":"3","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\auth.js":"4","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Landing.js":"6","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Register.js":"8","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Navbar.js":"9","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\routing\\PrivateRoute.js":"10","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Alert.js":"11","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\AddExperience.js":"13","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\EditProfile.js":"14","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\AddEducation.js":"15","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\alert.js":"16","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\types.js":"17","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\profile.js":"18","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\DashboardActions.js":"19","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Experience.js":"20","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\index.js":"22","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\alert.js":"23","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\auth.js":"24","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\profile.js":"25","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\CreateProfile.js":"26","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\Profile.js":"27"},{"size":205,"mtime":1614238951608,"results":"28","hashOfConfig":"29"},{"size":2326,"mtime":1614242205509,"results":"30","hashOfConfig":"29"},{"size":407,"mtime":1614238951624,"results":"31","hashOfConfig":"29"},{"size":2302,"mtime":1614238951604,"results":"32","hashOfConfig":"29"},{"size":272,"mtime":1614238951624,"results":"33","hashOfConfig":"29"},{"size":1088,"mtime":1614242719473,"results":"34","hashOfConfig":"29"},{"size":2236,"mtime":1614238951606,"results":"35","hashOfConfig":"29"},{"size":3420,"mtime":1614238951607,"results":"36","hashOfConfig":"29"},{"size":1302,"mtime":1614242804087,"results":"37","hashOfConfig":"29"},{"size":588,"mtime":1614238951608,"results":"38","hashOfConfig":"29"},{"size":568,"mtime":1614238951608,"results":"39","hashOfConfig":"29"},{"size":1278,"mtime":1614241702458,"results":"40","hashOfConfig":"29"},{"size":3525,"mtime":1614238951608,"results":"41","hashOfConfig":"29"},{"size":8417,"mtime":1614241828881,"results":"42","hashOfConfig":"29"},{"size":3349,"mtime":1614238951608,"results":"43","hashOfConfig":"29"},{"size":407,"mtime":1614238951603,"results":"44","hashOfConfig":"29"},{"size":573,"mtime":1614238951605,"results":"45","hashOfConfig":"29"},{"size":3767,"mtime":1614242078649,"results":"46","hashOfConfig":"29"},{"size":655,"mtime":1614238951608,"results":"47","hashOfConfig":"29"},{"size":1496,"mtime":1614238951608,"results":"48","hashOfConfig":"29"},{"size":300,"mtime":1614238951608,"results":"49","hashOfConfig":"29"},{"size":241,"mtime":1614238951608,"results":"50","hashOfConfig":"29"},{"size":530,"mtime":1614238951608,"results":"51","hashOfConfig":"29"},{"size":1081,"mtime":1614238951608,"results":"52","hashOfConfig":"29"},{"size":879,"mtime":1614241519095,"results":"53","hashOfConfig":"29"},{"size":7049,"mtime":1614238951608,"results":"54","hashOfConfig":"29"},{"size":1123,"mtime":1614242381050,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"fxp381",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\index.jsx",[],["123","124"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\App.js",["125"],"import './App.css';\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport CreateProfile from './components/profile-forms/EditProfile';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport AddEducation from './components/profile-forms/AddEducation';\r\nimport Profile from './components/profile/Profile'\r\n//Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './storee';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, []);\r\n    return (\r\n        <Provider store={store}>\r\n            <Router >\r\n                <Fragment >\r\n                    <Navbar />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <Switch>\r\n                            <Route exact path=\"/register\" component={Register} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n                            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n                            <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\r\n                            <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n\r\n\r\n                        </Switch>\r\n                    </section>\r\n                </Fragment > </Router></Provider>\r\n    )\r\n};\r\nexport default App;  ","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\storee.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\auth.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Login.js",["126"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n\r\n        email: '',\r\n        password: '',\r\n\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign In</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into your account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoProps = state => ({ isAuthenticated: state.auth.isAuthenticated })\r\n\r\n\r\nexport default connect(mapStatetoProps, { login })(Login);","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Register.js",["127","128"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign Up</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Name\" name=\"name\" value='name' value={name} onChange={e => onChange(e)} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n                        <small className=\"form-text\"\r\n                        >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            minLength=\"6\"\r\n                            value={password2} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account? <Link to=\"/login\">Sign In</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoprops = state => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(\r\n    mapStatetoprops, { setAlert, register }\r\n)(Register);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Dashboard.js",["129","130","131"],"import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Experience from './Experience';\r\nimport CreateProfile from '../profile-forms/CreateProfile'\r\n\r\n\r\nconst Dashboard = ({ getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n\r\n\r\n\r\n\r\n    return loading && profile === null ? <Spinner /> : <Fragment>\r\n       \r\n        {profile !== null ? (\r\n            <Fragment>\r\n        <Redirect to={`/profile/${user._id}`}/>\r\n            </Fragment>) :\r\n            (<Fragment>\r\n                <CreateProfile/>\r\n            </Fragment>)}\r\n    </Fragment>;\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\EditProfile.js",["132"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, getCurrentProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            company: '',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        console.log(profile)\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Edit Your Profile\r\n      </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} />\r\n\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n            username</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button type=\"button\" onClick={() => toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n          </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && <Fragment>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                </Fragment>}\r\n\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\AddEducation.js",["133","134"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school,\r\n        degree,\r\n        fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Add Your Education\r\n      </h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add anyworkshop or school you attended\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form class=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                        setFormData({ ...formData });\r\n                        toggleDisabled(!toDateDisabled);\r\n                    }} /> {\"  \"}Current Job</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\" Description\"\r\n                        value={description} onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(addEducation);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\alert.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\types.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\profile.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Experience.js",["135","136","137"],"import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Experience = ({ experience }) => {\r\n    const experiences = experience.map(exp => (\r\n        <td key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className=\"hide-sm\">{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment>- {' '}\r\n                {\r\n                    exp.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                            <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n\r\n                        )\r\n                }\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </td>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n                <thread>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thread>\r\n                <tbody>{experience}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Experience;\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Spinner.js",["138"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\index.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\alert.js",["139"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\auth.js",["140"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL, LOGOUT, LOGIN_FAIL, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n\r\n            localStorage.setItem('token', payload.token);\r\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n\r\n            localStorage.removeItem('token')\r\n            return { ...state, token: null, isAuthenticated: false, loading: false };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\profile.js",["141"],"import { CLEAR_PROFILE, GET_PROFILE, UPDATE_PROFILE, PROFILE_ERROR, } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\Profile.js",["142"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nfunction Profile({ match, getProfileById, auth, profile: { profile, loading } }) {\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n\t\t\t{profile === null || loading ? (\r\n\t\t\t\t<Spinner />\r\n\t\t\t) : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t  <h1 className=\"large text-primary\"> Dashboard </h1>\r\n\r\n        <p className=\"lead\">\r\n            <i className=\"fa fa-user\"></i> Welcome {auth.user && auth.user.name}\r\n        </p>\r\n\t\t\t\t\t\t\r\n            \t<Link to=\"/edit-profile\">\r\n\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t</Link>\r\n\t\t\t\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":20,"column":8,"nodeType":"149","messageId":"150","endLine":20,"endColumn":20},{"ruleId":"147","severity":1,"message":"151","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":13},{"ruleId":"147","severity":1,"message":"151","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"153","line":42,"column":88,"nodeType":"154","endLine":42,"endColumn":100},{"ruleId":"147","severity":1,"message":"155","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"156","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":24},{"ruleId":"147","severity":1,"message":"157","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":43,"column":8,"nodeType":"160","endLine":43,"endColumn":36,"suggestions":"161"},{"ruleId":"147","severity":1,"message":"155","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"162","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":26},{"ruleId":"147","severity":1,"message":"163","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":35},{"ruleId":"147","severity":1,"message":"164","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":17},{"ruleId":"147","severity":1,"message":"165","line":9,"column":11,"nodeType":"149","messageId":"150","endLine":9,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":5,"column":1,"nodeType":"168","endLine":13,"endColumn":3},{"ruleId":"166","severity":1,"message":"169","line":5,"column":1,"nodeType":"168","endLine":18,"endColumn":2},{"ruleId":"166","severity":1,"message":"169","line":14,"column":1,"nodeType":"168","endLine":39,"endColumn":2},{"ruleId":"166","severity":1,"message":"169","line":12,"column":1,"nodeType":"168","endLine":37,"endColumn":2},{"ruleId":"147","severity":1,"message":"170","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'DashboardActions' is defined but never used.","'Experience' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'withRouter' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","'experiences' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"176","text":"177"},[1896,1924],"[loading, getCurrentProfile, profile]"]