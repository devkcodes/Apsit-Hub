[{"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx":"1","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js":"2","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js":"3","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js":"5","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js":"6","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js":"8","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js":"9","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js":"10","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js":"11","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js":"12","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js":"13","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js":"14","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js":"15","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js":"16","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js":"17","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js":"18","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js":"19","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js":"20","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js":"21","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js":"23","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js":"24","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js":"25","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js":"26","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js":"27","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js":"28","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\post.js":"29","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\post.js":"30","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js":"31","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js":"32","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\Post.js":"33","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js":"34","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js":"35","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js":"36","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileTop.js":"37","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js":"38","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js":"39"},{"size":197,"mtime":1610277814710,"results":"40","hashOfConfig":"41"},{"size":2602,"mtime":1615298751557,"results":"42","hashOfConfig":"41"},{"size":407,"mtime":1610549767196,"results":"43","hashOfConfig":"41"},{"size":272,"mtime":1610634656327,"results":"44","hashOfConfig":"41"},{"size":568,"mtime":1610623957660,"results":"45","hashOfConfig":"41"},{"size":588,"mtime":1610737711861,"results":"46","hashOfConfig":"41"},{"size":18098,"mtime":1616015278759,"results":"47","hashOfConfig":"41"},{"size":2302,"mtime":1610890205249,"results":"48","hashOfConfig":"41"},{"size":3525,"mtime":1614234927962,"results":"49","hashOfConfig":"41"},{"size":3349,"mtime":1610898808837,"results":"50","hashOfConfig":"41"},{"size":11998,"mtime":1615217587191,"results":"51","hashOfConfig":"41"},{"size":1000,"mtime":1615230694464,"results":"52","hashOfConfig":"41"},{"size":4233,"mtime":1615301992027,"results":"53","hashOfConfig":"41"},{"size":1837,"mtime":1614512652132,"results":"54","hashOfConfig":"41"},{"size":3691,"mtime":1615316635396,"results":"55","hashOfConfig":"41"},{"size":15127,"mtime":1615398003056,"results":"56","hashOfConfig":"41"},{"size":1042,"mtime":1614404333724,"results":"57","hashOfConfig":"41"},{"size":407,"mtime":1610624248987,"results":"58","hashOfConfig":"41"},{"size":300,"mtime":1610744998412,"results":"59","hashOfConfig":"41"},{"size":364,"mtime":1615037798949,"results":"60","hashOfConfig":"41"},{"size":5305,"mtime":1615037150672,"results":"61","hashOfConfig":"41"},{"size":20014,"mtime":1615399051685,"results":"62","hashOfConfig":"41"},{"size":280,"mtime":1614352620702,"results":"63","hashOfConfig":"41"},{"size":530,"mtime":1610623856294,"results":"64","hashOfConfig":"41"},{"size":1223,"mtime":1614354815631,"results":"65","hashOfConfig":"41"},{"size":1129,"mtime":1614260501605,"results":"66","hashOfConfig":"41"},{"size":3821,"mtime":1616070638133,"results":"67","hashOfConfig":"41"},{"size":2210,"mtime":1615225069415,"results":"68","hashOfConfig":"41"},{"size":3965,"mtime":1615193258213,"results":"69","hashOfConfig":"41"},{"size":1838,"mtime":1614404899736,"results":"70","hashOfConfig":"41"},{"size":3713,"mtime":1615193258220,"results":"71","hashOfConfig":"41"},{"size":1610,"mtime":1615306695684,"results":"72","hashOfConfig":"41"},{"size":1234,"mtime":1614406975881,"results":"73","hashOfConfig":"41"},{"size":1160,"mtime":1614405455733,"results":"74","hashOfConfig":"41"},{"size":1791,"mtime":1614407914751,"results":"75","hashOfConfig":"41"},{"size":5084,"mtime":1616070746994,"results":"76","hashOfConfig":"41"},{"size":2810,"mtime":1614505532247,"results":"77","hashOfConfig":"41"},{"size":980,"mtime":1614506627617,"results":"78","hashOfConfig":"41"},{"size":1844,"mtime":1614510621941,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"17byksv",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"82"},"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx",[],["181","182"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js",["183","184"],"\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport CreateProfile from './components/profile-forms/EditProfile';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\n\r\n//Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './storee';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nif (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, []);\r\n    return (\r\n        <Provider store={store}>\r\n            <Router >\r\n                <Fragment >\r\n                    <Navbar />\r\n                    <Route exact path=\"/\" component={Login} />\r\n\r\n                    <section className=\"container\">\r\n\r\n                        <Alert />\r\n                        <Switch>\r\n                            <Route exact path=\"/register\" component={Register} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Route exact path=\"/profiles\" component={Profiles} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n                            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n                            <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n                            <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n\r\n\r\n                        </Switch>\r\n                    </section>\r\n                </Fragment > </Router></Provider>\r\n    )\r\n};\r\nexport default App;","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js",["185","186","187","188"],"// //ui imports\r\n// // import Grid from '@material-ui/core/Grid';\r\n// // import Card from '@material-ui/core/Card';\r\n// // import Container from '@material-ui/core/Container';\r\n// // import { palette } from '@material-ui/system';\r\n// // import { makeStyles } from \"@material-ui/core/styles\";\r\n// // import TextField from '@material-ui/core/TextField';\r\n// // import { sizing } from '@material-ui/system';\r\n\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import Button from '@material-ui/core/Button';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// // import Paper from '@material-ui/core/Paper';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Box from '@material-ui/core/Box';\r\n// import Grid from '@material-ui/core/Grid';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n// // import Form from '@material-ui/core/Form';\r\n\r\n\r\n\r\n// //other\r\n// import React, { Fragment, useState } from 'react';\r\n// import '../../App.css';\r\n// import axios from 'axios';\r\n// import { Link, Redirect } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// import { login } from '../../actions/auth';\r\n// import PropTypes from 'prop-types';\r\n// import Navbar from '../layout/Navbar';\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         height: '100vh',\r\n//         color: 'white'\r\n//     },\r\n//     image: {\r\n//         backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1615197642/photomania-24ef4102c2f9ea86ea75f3ecfa7c11bc_sfbwij.jpg)',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         backgroundColor:\r\n//             theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n//         backgroundSize: 'cover',\r\n//         backgroundPosition: 'center',\r\n//     },\r\n//     paper: {\r\n\r\n//         padding: '5em',\r\n//         display: 'flex',\r\n//         flexDirection: 'column',\r\n//         alignItems: 'center',\r\n//         backgroundColor: '#2D3548',\r\n//         margin: '70px',\r\n//     },\r\n//     avatar: {\r\n//         margin: theme.spacing(1),\r\n//         backgroundColor: theme.palette.secondary.main,\r\n//     },\r\n//     form: {\r\n//         width: '100%', // Fix IE 11 issue.\r\n//         marginTop: theme.spacing(1),\r\n//     },\r\n//     submit: {\r\n//         margin: theme.spacing(3, 0, 2),\r\n//         backgroundColor: \"#0091BE\",\r\n//         color: \"white\"\r\n\r\n//     },\r\n//     gridRoot: {\r\n\r\n//         backgroundColor: \"#EFEAE2\",\r\n\r\n//     },\r\n//     typography: {\r\n//         allVariants: {\r\n//             color: \"white\"\r\n//         },\r\n//     },\r\n\r\n// }));\r\n\r\n\r\n// export const Login = ({ login, isAuthenticated }) => {\r\n//     const classes = useStyles();\r\n//     const [formData, setFormData] = useState({\r\n\r\n//         email: '',\r\n//         password: '',\r\n\r\n//     });\r\n\r\n//     const { email, password } = formData;\r\n\r\n//     const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//     const onClick = e => {\r\n\r\n//         login(email, password);\r\n//     }\r\n\r\n//     if (isAuthenticated) {\r\n//         return <Redirect to=\"/posts\" />\r\n//     }\r\n\r\n//     return (\r\n\r\n//         <Fragment>\r\n//             <Grid container component=\"main\" className={classes.root}>\r\n//                 <CssBaseline />\r\n//                 <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n//                 <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} className={classes.gridRoot} square>\r\n//                     <Paper elevation={3} className={classes.paper}>\r\n//                         <Avatar className={classes.avatar}>\r\n//                             <LockOutlinedIcon color='white' />\r\n//                         </Avatar>\r\n//                         <Typography component=\"h1\" variant=\"h4\" style={{ color: 'white' }}>\r\n//                             Sign in\r\n//           </Typography>\r\n//                         <form className={classes.form} noValidate>\r\n//                             <TextField\r\n//                                 style={{\r\n//                                     backgroundColor: \"#171319\",\r\n//                                     color: \"white\",\r\n//                                     // border: '5px solid black',\r\n//                                     // borderRadius: \"10px\"\r\n//                                 }}\r\n//                                 InputProps={{\r\n//                                     style: {\r\n//                                         color: \"white\"\r\n//                                     }\r\n//                                 }}\r\n//                                 InputLabelProps={{\r\n//                                     style: {\r\n//                                         textOverflow: 'ellipsis',\r\n//                                         whiteSpace: 'nowrap',\r\n//                                         overflow: 'hidden',\r\n//                                         width: '100%',\r\n//                                         color: 'white'\r\n//                                     }\r\n//                                 }}\r\n//                                 variant=\"filled\"\r\n//                                 margin=\"normal\"\r\n//                                 required\r\n//                                 fullWidth\r\n//                                 id=\"email\"\r\n//                                 label=\"Email Address\"\r\n//                                 name=\"email\"\r\n//                                 value={email}\r\n//                                 onChange={e => onChange(e)}\r\n//                                 autoComplete=\"email\"\r\n//                                 autoFocus\r\n//                             />\r\n//                             <TextField\r\n//                                 style={{\r\n//                                     backgroundColor: \"#171319\",\r\n//                                     color: \"white\",\r\n//                                     // border: '5px solid black',\r\n//                                     // borderRadius: \"10px\"\r\n//                                 }}\r\n//                                 InputProps={{\r\n//                                     style: {\r\n//                                         color: \"white\"\r\n//                                     }\r\n//                                 }}\r\n//                                 InputLabelProps={{\r\n//                                     style: {\r\n//                                         textOverflow: 'ellipsis',\r\n//                                         whiteSpace: 'nowrap',\r\n//                                         overflow: 'hidden',\r\n//                                         width: '100%',\r\n//                                         color: 'white'\r\n//                                     }\r\n//                                 }}\r\n//                                 variant=\"filled\"\r\n//                                 margin=\"normal\"\r\n//                                 required\r\n//                                 fullWidth\r\n//                                 name=\"password\"\r\n//                                 label=\"Password\"\r\n//                                 type=\"password\"\r\n//                                 id=\"password\"\r\n//                                 minLength=\"6\"\r\n//                                 value={password}\r\n//                                 onChange={e => onChange(e)}\r\n//                                 autoComplete=\"current-password\"\r\n//                             />\r\n\r\n//                             <Button\r\n//                                 onClick={e => onClick(e)}\r\n//                                 type=\"submit\"\r\n//                                 fullWidth\r\n//                                 value='login'\r\n//                                 variant=\"contained\"\r\n\r\n//                                 className={classes.submit}\r\n//                             >\r\n//                                 Sign In\r\n//             </Button>\r\n//                             <Grid container>\r\n//                                 <Grid item xs>\r\n\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                     <Link href=\"#\" variant=\"body2\" style={{ color: 'white' }}>\r\n//                                         {\"Don't have an account? Sign Up\"}\r\n//                                     </Link>\r\n//                                 </Grid>\r\n//                             </Grid>\r\n//                             <Box mt={5}>\r\n\r\n//                             </Box>\r\n//                         </form>\r\n//                     </Paper>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </Fragment>\r\n//     )\r\n// };\r\n\r\n// Login.propTypes = {\r\n//     login: PropTypes.func.isRequired,\r\n//     isAuthenticated: PropTypes.bool\r\n// }\r\n\r\n// const mapStatetoProps = state => ({ isAuthenticated: state.auth.isAuthenticated })\r\n\r\n\r\n// export default connect(mapStatetoProps, { login })(Login);\r\n\r\n//ui imports\r\n// import Grid from '@material-ui/core/Grid';\r\n// import Card from '@material-ui/core/Card';\r\n// import Container from '@material-ui/core/Container';\r\n// import { palette } from '@material-ui/system';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { sizing } from '@material-ui/system';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n// import Form from '@material-ui/core/Form';\r\n\r\n\r\n\r\n//other\r\nimport React, { Fragment, useState } from 'react';\r\nimport '../../App.css';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white'\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1615197642/photomania-24ef4102c2f9ea86ea75f3ecfa7c11bc_sfbwij.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n\r\n        padding: '5em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#151117',\r\n        margin: '70px',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n\r\n    },\r\n    gridRoot: {\r\n\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1615213580/Capture_islxj1.png)',\r\n\r\n    },\r\n    typography: {\r\n        allVariants: {\r\n            color: \"white\"\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState({\r\n\r\n        email: '',\r\n        password: '',\r\n\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onClick = async e => {\r\n        e.preventDefault()\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/posts\" />\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <Grid container component=\"main\" className={classes.root}>\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} className={classes.gridRoot} square>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon color='white' />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h4\" style={{ color: 'white' }}>\r\n                            Sign in\r\n          </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                style={{\r\n                                    backgroundColor: \"#171319\",\r\n                                    color: \"white\",\r\n                                    // border: '5px solid black',\r\n                                    // borderRadius: \"10px\"\r\n                                }}\r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: \"white\"\r\n                                    }\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    style: {\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        overflow: 'hidden',\r\n                                        width: '100%',\r\n                                        color: 'white'\r\n                                    }\r\n                                }}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={e => onChange(e)}\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                            />\r\n                            <TextField\r\n                                style={{\r\n                                    backgroundColor: \"#171319\",\r\n                                    color: \"white\",\r\n                                    // border: '5px solid black',\r\n                                    // borderRadius: \"10px\"\r\n                                }}\r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: \"white\"\r\n                                    }\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    style: {\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        overflow: 'hidden',\r\n                                        width: '100%',\r\n                                        color: 'white'\r\n                                    }\r\n                                }}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                minLength=\"6\"\r\n                                value={password}\r\n                                onChange={e => onChange(e)}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n\r\n                            <Button\r\n                                onClick={e => onClick(e)}\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                value='login'\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign In\r\n            </Button>\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\" style={{ color: '#3F51B5' }}>\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box mt={5}>\r\n\r\n                            </Box>\r\n                        </form>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoProps = state => ({ isAuthenticated: state.auth.isAuthenticated })\r\n\r\n\r\nexport default connect(mapStatetoProps, { login })(Login);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js",["189","190"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school,\r\n        degree,\r\n        fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Add Your Education\r\n      </h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add anyworkshop or school you attended\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form class=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                        setFormData({ ...formData });\r\n                        toggleDisabled(!toDateDisabled);\r\n                    }} /> {\"  \"}Current Job</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\" Description\"\r\n                        value={description} onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(addEducation);\r\n",["191","192"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js",["193","194","195","196"],"//mui imports\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n//others\r\nimport React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport Navbar from '../layout/Navbar';\r\nimport PropTypes from 'prop-types'\r\n\r\n//styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: \"5em\",\r\n        margin: '35em',\r\n        backgroundColor: '#151117'\r\n\r\n    },\r\n    container: {\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1615213211/vector-seamless-pattern-with-education-back-to-school-icons-doodle-student-dark-background-2BHRABY_dkq4s5.jpg)',\r\n        height: \"100vh\"\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    gridRoot: {\r\n        backgroundColor: \"red\",\r\n    }\r\n}));\r\n\r\n//register function\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const classes = useStyles();\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onClick = async e => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\r\n                <CssBaseline />\r\n\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\" style={{ color: 'white' }}>\r\n                        Sign up\r\n        </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={12} >\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    autoComplete=\"name\"\r\n                                    name=\"name\"\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"name\"\r\n                                    label=\"Name\"\r\n                                    value={name}\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password2\"\r\n                                    label=\"Confirm sPassword\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password2}\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            onClick={e => onClick(e)}\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            value='register'\r\n                        >\r\n                            Sign Up\r\n          </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\" style={{ color: '#3F51B5' }}>\r\n                                    Already have an account? Sign in\r\n              </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Box mt={5}>\r\n\r\n                </Box>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoprops = state => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(\r\n    mapStatetoprops, { setAlert, register }\r\n)(Register);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js",["197","198"],"import React, { Fragment } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport '../../landing.css'\r\n\r\nimport { Grid } from '@material-ui/core'\r\nimport Container from '@material-ui/core/Container'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\n\r\n\r\nexport const Landing = ({ isAuthenticated }) => {\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth='lg'>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Paper />\r\n          <Paper />\r\n          <Paper />\r\n        </Grid>\r\n\r\n      </Container>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js",["199","200","201","202","203"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\nimport { Grid, Button, AppBar, Toolbar, Typography, MenuItem, Menu, Avatar } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = ({\r\n\r\n  row: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    padding: '0px',\r\n  },\r\n  container: {\r\n    width: 1170,\r\n    margin: \"auto\"\r\n  },\r\n  buttonFontSize: {\r\n    fontSize: \"16px\",\r\n\r\n  },\r\n  links: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  AppBar: {\r\n    //height:400,\r\n    //background: `url(\"http://lorempixel.com/1920/1080/nature\") no-repeat center center`,\r\n    backgroundColor: \"#2D3548\",\r\n    backgroundSize: \"cover\",\r\n    padding: \"0px\",\r\n    marginBottom: \"5px\",\r\n    textDecoration: 'none'\r\n\r\n  },\r\n  mainLogo: {\r\n    color: \"#a1a1a1\",\r\n\r\n    '&:hover': {\r\n      background: \"transparent\"\r\n    }\r\n  },\r\n\r\n  avatar: {\r\n    height: \"100%\",\r\n    borderRadius: 0,\r\n\r\n\r\n  },\r\n\r\n  loginButton: {\r\n    background: \"#e91e63\",\r\n    color: \"#fff\",\r\n    borderRadius: \"25px\",\r\n    padding: \"0px 25px\",\r\n\r\n    '&:hover': {\r\n      background: 'blue',\r\n      boxShadow: \"0px 2px 10px #888888\"\r\n    }\r\n  }\r\n\r\n});\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport const NavbarComponent = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const classes = useStyles();\r\n  // const authLinks = (\r\n  //     <ul>\r\n\r\n\r\n\r\n  //       <li><Link to=\"/profiles\"><i className=\"mdi mdi-account-check\r\n  // \"></i><span className=\"hide-sm\">Developers</span></Link></li>\r\n  //       <li><Link to=\"/posts\"><i className=\"fas fa-user\"></i><span className=\"hide-sm\">Posts</span></Link></li>\r\n  //       <li><Link to=\"/dashboard\"><i className=\"fas fa-user\"></i><span className=\"hide-sm\">Dashboard</span></Link></li>\r\n\r\n  //       <li><a onClick={logout} href=\"http://localhost:3000\">\r\n  //         <i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n  //         <span className=\"hide-sm\">Logout</span></a></li>\r\n\r\n  //     </ul>\r\n  // );\r\n\r\n  const guestLinks = (<Fragment>\r\n    {/* <ul>\r\n      <li><Link to=\"/profiles\">Developers</Link></li>\r\n      <li><Link to=\"/register\">Register</Link></li>\r\n      <li><Link to=\"/login\">Login</Link></li>\r\n    </ul> */}\r\n    <Button color=\"inherit\" className={classes.buttonFontSize}><li><Link to=\"/profiles\" >Developers</Link></li></Button>\r\n    <Button color=\"inherit\" className={classes.buttonFontSize}> <Link className={classes.links} to=\"/register\">Register</Link>\r\n    </Button>\r\n    <Button color=\"inherit\" className={classes.buttonFontSize}>      <li><Link to=\"/login\">Login</Link></li>\r\n    </Button>\r\n  </Fragment >\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {!loading && isAuthenticated &&\r\n\r\n        <AppBar position=\"fixed\" color=\"#2D3548\" className={classes.AppBar}>\r\n          <Grid item sm={12} xs={12} className={classes.container}>\r\n            <Toolbar>\r\n              <Grid className={classes.grow}>\r\n                <Button className={[classes.mainLogo]}>\r\n                  <h2>ApsitHub</h2>\r\n                </Button>\r\n              </Grid>\r\n              <Button color=\"inherit\" className={classes.buttonFontSize}><Link to=\"/dashboard\" className={classes.links}>Dashboard</Link></Button>\r\n              <Button color=\"inherit\" component={Link} className={classes.buttonFontSize}><Link to=\"/profiles\" className={classes.links}>Students</Link></Button>\r\n              <Button color=\"inherit\" className={classes.buttonFontSize}><Link to=\"/posts\" className={classes.links}>Posts</Link></Button>\r\n              <Button color=\"inherit\" className={classes.buttonFontSize} >\r\n                <a className={classes.links} onClick={logout} href=\"http://localhost:3000/login\">\r\n\r\n                  Logout</a>\r\n              </Button>\r\n\r\n            </Toolbar>\r\n          </Grid>\r\n        </AppBar>\r\n\r\n      }\r\n\r\n    </Fragment>\r\n\r\n  )\r\n};\r\nNavbarComponent.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStatetoprops = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStatetoprops, { logout })(NavbarComponent);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js",["204"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileGithub from './ProfileGithub';\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nfunction Profile({ match, getProfileById, auth, profile: { profile, loading } }) {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfileById(match.params.id)\r\n\t}, [getProfileById])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Fragment>\r\n\t\t\t\t{profile === null || loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{/* <h1 className=\"large text-primary\"> Dashboard </h1>\r\n\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-user\"></i> Welcome {auth.user && auth.user.name}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/edit-profile\">\r\n\t\t\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/profiles\" className=\"btn btn-light\">Back To Profiles</Link>\r\n\t\t\t\t\t\t\t{auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\r\n\t\t\t\t\t\t\t\t<Link to=\"/edit-profile\" className=\"btn btn-light\">Edit Profile</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"profile-grid my-1\">\r\n\t\t\t\t\t\t\t\t<ProfileTop profile={profile} />\r\n\t\t\t\t\t\t\t\t<ProfileAbout profile={profile} />\r\n\t\t\t\t\t\t\t\t{profile.githubusername && (<ProfileGithub username={profile.githubusername} />)}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js",["205","206","207","208","209","210","211","212","213","214","215","216","217"],"//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//normal\r\nimport React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile, deleteAccount, createProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from \"./DashboardActions\";\r\n\r\nimport CreateProfile from '../profile-forms/CreateProfile'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white'\r\n    },\r\n    containerRoot: {\r\n        marginTop: '80px',\r\n    },\r\n    welcome: {\r\n\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\n\r\nconst Dashboard = ({ deleteAccount, getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    // return loading && profile === null ? <Spinner /> : <Fragment>\r\n\r\n    //     {profile !== null ? (\r\n    //         <Fragment>\r\n    //             <Redirect to={`/profile/${user._id}`} />\r\n    //         </Fragment>) :\r\n    //         (<Fragment>\r\n    //             <CreateProfile />\r\n    //         </Fragment>)}\r\n    // </Fragment>;\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />) : (\r\n\r\n        <Fragment>\r\n            <Grid className={classes.containerRoot}>\r\n                <Grid item className={classes.welcome}>\r\n                    <h1 className='large text-primary'>Dashboard</h1>\r\n                    <p className='lead' >\r\n                        <i className='fas fa-user' />Welcome {user && user.name}\r\n                    </p>\r\n                </Grid>\r\n                {profile !== null ? (\r\n                    <Fragment>\r\n                        <DashboardActions />\r\n                        {/* <Education education={profile.education} /> */}\r\n                        <div className='my-2'></div>\r\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>                   </Fragment>\r\n                ) : (\r\n                    <Fragment>\r\n                        {/* <p>You have not setup your profile yet, please add some info</p>\r\n                            <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link> */}\r\n                        <CreateProfile />\r\n                    </Fragment>\r\n                )}\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js",["218","219","220","221","222","223","224","225","226"],"//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\n\r\n\r\n//normal\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAccount } from '../../actions/profile';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, deleteAccount, createProfile, getCurrentProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            company: '',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        console.log(profile)\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            height: '100vh',\r\n            color: 'white',\r\n            backgroundColor: \"grey\"\r\n        },\r\n        containerRoot: {\r\n            margin: '100px',\r\n            backgroundColor: \"grey\",\r\n            alignItems: 'center'\r\n\r\n        },\r\n        formBox: {\r\n            marginTop: '20px',\r\n            marginBottom: '20px'\r\n        },\r\n\r\n        formGrid: {\r\n\r\n        },\r\n        formPaper: {\r\n            backgroundColor: \"white\",\r\n            height: \"100%\",\r\n            padding: '60px'\r\n\r\n\r\n        },\r\n        textField: {\r\n            width: '30vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n        },\r\n        formGrid1: {\r\n            margin: \"10px\",\r\n        },\r\n        formGrid2: {\r\n            margin: \"10px\",\r\n            marginTop: \"70px\",\r\n        },\r\n        buttonToggle: {\r\n            margin: \"10px\",\r\n            marginLeft: '20%'\r\n        },\r\n        Bsubmit: {\r\n            marginLeft: \"2%\",\r\n            backgroundColor: \"green\",\r\n            marginRight: \"7%\",\r\n            color: \"white\"\r\n        },\r\n        Bback: {\r\n            marginRight: \"7%\",\r\n            backgroundColor: \"blue\"\r\n        },\r\n        Bdelete: {\r\n            backgroundColor: \"red\",\r\n            color: \"white\"\r\n        },\r\n        links: {\r\n            color: 'white',\r\n            textDecoration: 'none'\r\n        },\r\n        textFieldSocial: {\r\n            width: '26vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n        },\r\n        Icons: {\r\n            paddingRight: \"5%\"\r\n        }\r\n\r\n\r\n\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const statuses = [\r\n        {\r\n            value: 'First Year',\r\n            label: 'First Year',\r\n        },\r\n        {\r\n            value: 'Second Year',\r\n            label: 'Second Year',\r\n        },\r\n        {\r\n            value: 'Third Year',\r\n            label: 'Third Year',\r\n        },\r\n        {\r\n            value: 'Fouth Year',\r\n            label: 'Fouth Year',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container direction=\"column\" className={classes.containerRoot}>\r\n                <Grid item> <h1 className=\"large text-primary\">\r\n                    Edit Your Profile\r\n      </h1>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p></Grid>\r\n                <Grid className={classes.formGrid} direction=\"column\">\r\n                    <form className={classes.form} onSubmit={e => onSubmit(e)}>\r\n                        <Paper className={classes.formPaper}>\r\n                            {/* <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                                <option value=\"0\">* Select Professional Status</option>\r\n                                <option value=\"Developer\">Developer</option>\r\n                                <option value=\"Junior Developer\">Junior Developer</option>\r\n                                <option value=\"Senior Developer\">Senior Developer</option>\r\n                                <option value=\"Manager\">Manager</option>\r\n                                <option value=\"Student or Learning\">Student or Learning</option>\r\n                                <option value=\"Instructor\">Instructor or Teacher</option>\r\n                                <option value=\"Intern\">Intern</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                            <small className=\"form-text\"\r\n                            >Give us an idea of where you are at in your career</small\r\n                            > */}\r\n                            <Grid item className={classes.formGrid1}>\r\n                                <TextField className={classes.textField}\r\n                                    id=\"status\"\r\n                                    select\r\n                                    name=\"status\"\r\n                                    helperText='Currently in..'\r\n                                    value={status}\r\n                                    onChange={e => onChange(e)}\r\n\r\n                                >\r\n                                    {statuses.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.value}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n\r\n                                <Box direction=\"column\" className={classes.formBox} elevation={3}>\r\n                                    <TextField className={classes.textField} label='Company' placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}>\r\n                                    </TextField>\r\n                                    <p className=\"form-text\"\r\n                                    >Could be your own company or one you work for</p>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='Website' placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} ></TextField>\r\n                                    <p className=\"form-text\">Could be your own or a company website</p>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='city' type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} ></TextField>\r\n                                    <p className=\"form-text\"\r\n                                    >City & state suggested (eg. Boston, MA)</p\r\n                                    >\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='Skills' placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} ></TextField>\r\n                                    <pre className=\"form-text\"\r\n                                    >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</pre>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='Github Username' placeholder=\"Github Username\"\r\n\r\n                                        placeholder=\"Github Username\"\r\n                                        name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                    <p className=\"form-text\">If you want your latest repos and a Github link, include your Github</p>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label=\"Multiline\"\r\n                                        multiline variant=\"outlined\"\r\n                                        rows={4} label=\"Bio\" placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item className={classes.formGrid2}>\r\n                                <div className=\"my-2\">\r\n                                    <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleSocialInputs(!displaySocialInputs)} size=\"small\" className={classes.buttonToggle}>\r\n                                        <LanguageSharpIcon />Add Social Network Links\r\n          </Button>\r\n\r\n                                    <span>Optional</span>\r\n                                </div>\r\n\r\n                                {displaySocialInputs && <Fragment>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <TwitterIcon fontSize=\"large\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <FacebookIcon fontSize=\"large\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <YouTubeIcon fontSize=\"large\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <LinkedInIcon fontSize=\"large\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <InstagramIcon fontSize=\"large\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} ></TextField>\r\n                                    </div></Fragment>\r\n\r\n                                }\r\n\r\n                            </Grid>\r\n\r\n\r\n                            <Button variant=\"outlined\" type=\"submit\" className={classes.Bsubmit}>Submit</Button>\r\n                            {/* <input type=\"submit\" className=\"btn btn-primary my-1\" /> */}\r\n                            <Button item variant=\"outlined\" className={classes.Bback} > <Link className={classes.links} to=\"/dashboard\">Go Back</Link></Button>\r\n\r\n                            <Button variant=\"outlined\" className={classes.Bdelete} onClick={() => deleteAccount()}>\r\n                                <DeleteForeverIcon />  Delete Account\r\n                        </Button>\r\n\r\n                        </Paper>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { deleteAccount, createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js",["227"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js",["228","229","230","231","232","233","234","235"],"\r\n//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\n\r\n\r\n\r\n//normal \r\nimport React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            company: '',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            height: '100vh',\r\n            color: 'white',\r\n            backgroundColor: \"grey\"\r\n        },\r\n        containerRoot: {\r\n            margin: '100px',\r\n            backgroundColor: \"grey\",\r\n            alignItems: 'center'\r\n\r\n        },\r\n        formBox: {\r\n            marginTop: '20px',\r\n            marginBottom: '20px'\r\n        },\r\n\r\n        formGrid: {\r\n\r\n        },\r\n        formPaper: {\r\n            backgroundColor: \"white\",\r\n            height: \"100%\",\r\n            padding: '60px'\r\n\r\n\r\n        },\r\n        textField: {\r\n            width: '30vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n        },\r\n        formGrid1: {\r\n            margin: \"10px\",\r\n        },\r\n        formGrid2: {\r\n            margin: \"10px\",\r\n            marginTop: \"70px\",\r\n        },\r\n        buttonToggle: {\r\n            margin: \"10px\",\r\n            marginLeft: '20%'\r\n        },\r\n        Bsubmit: {\r\n            marginLeft: \"2%\",\r\n            backgroundColor: \"green\",\r\n            marginRight: \"7%\",\r\n            color: \"white\"\r\n        },\r\n        Bback: {\r\n            marginRight: \"7%\",\r\n            backgroundColor: \"blue\"\r\n        },\r\n        Bdelete: {\r\n            backgroundColor: \"red\",\r\n            color: \"white\"\r\n        },\r\n        links: {\r\n            color: 'white',\r\n            textDecoration: 'none'\r\n        },\r\n        textFieldSocial: {\r\n            width: '26vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n        },\r\n        Icons: {\r\n            paddingRight: \"5%\"\r\n        }\r\n\r\n\r\n\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const statuses = [\r\n        {\r\n            value: 'First Year',\r\n            label: 'First Year',\r\n        },\r\n        {\r\n            value: 'Second Year',\r\n            label: 'Second Year',\r\n        },\r\n        {\r\n            value: 'Third Year',\r\n            label: 'Third Year',\r\n        },\r\n        {\r\n            value: 'Fouth Year',\r\n            label: 'Fouth Year',\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        //     <Fragment>\r\n        //         <h1 className=\"large text-primary\">\r\n        //             Create Your Profile\r\n        //   </h1>\r\n        //         <p className=\"lead\">\r\n        //             <i className=\"fas fa-user\"></i> \r\n        //   </p>\r\n        //         <small>* = required field</small>\r\n        //         <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        //             <div className=\"form-group\">\r\n        //                 <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n        //                     <option value=\"0\">* Select Professional Status</option>\r\n        //                     <option value=\"Developer\">Developer</option>\r\n        //                     <option value=\"Junior Developer\">Junior Developer</option>\r\n        //                     <option value=\"Senior Developer\">Senior Developer</option>\r\n        //                     <option value=\"Manager\">Manager</option>\r\n        //                     <option value=\"Student or Learning\">Student or Learning</option>\r\n        //                     <option value=\"Instructor\">Instructor or Teacher</option>\r\n        //                     <option value=\"Intern\">Intern</option>\r\n        //                     <option value=\"Other\">Other</option>\r\n        //                 </select>\r\n        //                 <small className=\"form-text\"\r\n        //                 >Give us an idea of where you are at in your career</small\r\n        //                 >\r\n        //             </div>\r\n        //             <div className=\"form-group\">\r\n        //                 <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n        //                 <small className=\"form-text\"\r\n        //                 >Could be your own company or one you work for</small\r\n        //                 >\r\n        //             </div>\r\n        //             <div className=\"form-group\">\r\n        //                 <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n        //                 <small className=\"form-text\"\r\n        //                 >Could be your own or a company website</small\r\n        //                 >\r\n        //             </div>\r\n        //             <div className=\"form-group\">\r\n        //                 <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n        //                 <small className=\"form-text\"\r\n        //                 >City & state suggested (eg. Boston, MA)</small\r\n        //                 >\r\n        //             </div>\r\n        //             <div className=\"form-group\">\r\n        //                 <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n        //                 <small className=\"form-text\"\r\n        //                 >Please use comma separated values (eg.\r\n        //         HTML,CSS,JavaScript,PHP)</small\r\n        //                 >\r\n        //             </div>\r\n        //             <div className=\"form-group\">\r\n        //                 <input\r\n        //                     type=\"text\"\r\n        //                     placeholder=\"Github Username\"\r\n        //                     name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} />\r\n\r\n        //                 <small className=\"form-text\"\r\n        //                 >If you want your latest repos and a Github link, include your\r\n        //         username</small\r\n        //                 >\r\n        //             </div>\r\n        //             <div className=\"form-group\">\r\n        //                 <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></textarea>\r\n        //                 <small className=\"form-text\">Tell us a little about yourself</small>\r\n        //             </div>\r\n\r\n        //             <div className=\"my-2\">\r\n        //                 <button type=\"button\" onClick={() => toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n        //                     Add Social Network Links\r\n        //       </button>\r\n        //                 <span>Optional</span>\r\n        //             </div>\r\n\r\n        //             {displaySocialInputs && <Fragment>\r\n\r\n        //                 <div className=\"form-group social-input\">\r\n        //                     <i className=\"fab fa-twitter fa-2x\"></i>\r\n        //                     <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n        //                 </div>\r\n\r\n        //                 <div className=\"form-group social-input\">\r\n        //                     <i className=\"fab fa-facebook fa-2x\"></i>\r\n        //                     <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n        //                 </div>\r\n\r\n        //                 <div className=\"form-group social-input\">\r\n        //                     <i className=\"fab fa-youtube fa-2x\"></i>\r\n        //                     <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n        //                 </div>\r\n\r\n        //                 <div className=\"form-group social-input\">\r\n        //                     <i className=\"fab fa-linkedin fa-2x\"></i>\r\n        //                     <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n        //                 </div>\r\n\r\n        //                 <div className=\"form-group social-input\">\r\n        //                     <i className=\"fab fa-instagram fa-2x\"></i>\r\n        //                     <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n        //                 </div>\r\n\r\n        //             </Fragment>}\r\n\r\n\r\n        //             <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        //             <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n        //         </form>\r\n        //     </Fragment>\r\n        <Fragment>\r\n            <Fragment>\r\n                <Grid container direction=\"column\" className={classes.containerRoot}>\r\n                    <Grid item> <h1 className=\"large text-primary\">\r\n                        Create Your Profile\r\n      </h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p></Grid>\r\n                    <Grid className={classes.formGrid} direction=\"column\">\r\n                        <form className={classes.form} onSubmit={e => onSubmit(e)}>\r\n                            <Paper className={classes.formPaper}>\r\n                                {/* <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                                <option value=\"0\">* Select Professional Status</option>\r\n                                <option value=\"Developer\">Developer</option>\r\n                                <option value=\"Junior Developer\">Junior Developer</option>\r\n                                <option value=\"Senior Developer\">Senior Developer</option>\r\n                                <option value=\"Manager\">Manager</option>\r\n                                <option value=\"Student or Learning\">Student or Learning</option>\r\n                                <option value=\"Instructor\">Instructor or Teacher</option>\r\n                                <option value=\"Intern\">Intern</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                            <small className=\"form-text\"\r\n                            >Give us an idea of where you are at in your career</small\r\n                            > */}\r\n                                <Grid item className={classes.formGrid1}>\r\n                                    <TextField className={classes.textField}\r\n                                        id=\"status\"\r\n                                        select\r\n                                        name=\"status\"\r\n                                        helperText='Currently in..'\r\n                                        value={status}\r\n                                        onChange={e => onChange(e)}\r\n\r\n                                    >\r\n                                        {statuses.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n\r\n                                    <Box direction=\"column\" className={classes.formBox} elevation={3}>\r\n                                        <TextField className={classes.textField} label='Company' placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}>\r\n                                        </TextField>\r\n                                        <p className=\"form-text\"\r\n                                        >Could be your own company or one you work for</p>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='Website' placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} ></TextField>\r\n                                        <p className=\"form-text\">Could be your own or a company website</p>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='city' type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} ></TextField>\r\n                                        <p className=\"form-text\"\r\n                                        >City & state suggested (eg. Boston, MA)</p\r\n                                        >\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='Skills' placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} ></TextField>\r\n                                        <pre className=\"form-text\"\r\n                                        >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</pre>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='Github Username' placeholder=\"Github Username\"\r\n\r\n                                            placeholder=\"Github Username\"\r\n                                            name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                        <p className=\"form-text\">If you want your latest repos and a Github link, include your Github</p>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label=\"Multiline\"\r\n                                            multiline variant=\"outlined\"\r\n                                            rows={4} label=\"Bio\" placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item className={classes.formGrid2}>\r\n                                    <div className=\"my-2\">\r\n                                        <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleSocialInputs(!displaySocialInputs)} size=\"small\" className={classes.buttonToggle}>\r\n                                            <LanguageSharpIcon />Add Social Network Links\r\n          </Button>\r\n\r\n                                        <span>Optional</span>\r\n                                    </div>\r\n\r\n                                    {displaySocialInputs && <Fragment>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <TwitterIcon fontSize=\"large\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <FacebookIcon fontSize=\"large\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <YouTubeIcon fontSize=\"large\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <LinkedInIcon fontSize=\"large\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <InstagramIcon fontSize=\"large\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} ></TextField>\r\n                                        </div></Fragment>\r\n\r\n                                    }\r\n\r\n                                </Grid>\r\n\r\n\r\n                                <Button variant=\"outlined\" type=\"submit\" className={classes.Bsubmit}>Submit</Button>\r\n                                {/* <input type=\"submit\" className=\"btn btn-primary my-1\" /> */}\r\n                                <Button item variant=\"outlined\" className={classes.Bback} > <Link className={classes.links} to=\"/dashboard\">Go Back</Link></Button>\r\n\r\n\r\n\r\n                            </Paper>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment >\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js",["236"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js",["237"],"import { CLEAR_PROFILE, GET_PROFILES, GET_PROFILE, UPDATE_PROFILE, GET_REPOS, PROFILE_ERROR, } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js",["238"],"import {\r\n    REGISTER_SUCCESS, ACCOUNT_DELETED,\r\n    REGISTER_FAIL, LOGOUT, LOGIN_FAIL, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n\r\n            localStorage.setItem('token', payload.token);\r\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n\r\n            localStorage.removeItem('token')\r\n            return { ...state, token: null, isAuthenticated: false, loading: false };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js",["258","259","260","261"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport Navbar from '../layout/Navbar'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\n\r\nconst styles = {\r\n    containerRoot: {\r\n        marginTop: \"80px\",\r\n        border: 'gray solid 0.01px',\r\n        borderTop: 'none',\r\n        marginLeft: '20%',\r\n        marginRight: '20%',\r\n        ['@media (max-width:1000px)']: {\r\n\r\n            margin: '0',\r\n            padding: '0'\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            margin: '0',\r\n            padding: '0'\r\n        }\r\n\r\n    },\r\n    gridItem: {\r\n        width: '65%',\r\n        ['@media (max-width:600px)']: {\r\n            width: '80%',\r\n            margin: '0',\r\n\r\n        }\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n\r\n    return (\r\n\r\n        loading ? <Spinner /> : (\r\n            <Fragment>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    className={classes.containerRoot}\r\n                >\r\n                    <Grid item xs={12} >\r\n                        <p>Recent Activity</p>\r\n                    </Grid>\r\n                    <Grid item className={classes.gridItem}>\r\n                        <PostForm />\r\n                    </Grid>\r\n\r\n\r\n                    {posts.map(post => (<Grid item xs className={classes.gridItem}><PostItem key={post._id} post={post} /></Grid>\r\n                    ))}\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </Fragment>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ post: state.post });\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\post.js",["262","263"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { ADD_COMMENT, REMOVE_COMMENT, GET_POST, GET_POSTS, ADD_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST } from './types';\r\n\r\n//Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({ type: GET_POSTS, payload: res.data });\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: DELETE_POST, payload: id });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//add post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n        dispatch({ type: ADD_POST, payload: res.data });\r\n\r\n        dispatch(setAlert('Post created', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Get Post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: GET_POST, payload: res.data });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({ type: ADD_COMMENT, payload: res.data });\r\n\r\n        dispatch(setAlert('comment added', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n\r\n    try {\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n\r\n        dispatch(setAlert('comment removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\post.js",["264"],"import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST: return {\r\n            ...state,\r\n            post: payload,\r\n            loading: false\r\n        }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post), loading: false\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload), loading: false\r\n            }\r\n\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: payload },\r\n            loading: false\r\n        };\r\n\r\n        case REMOVE_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js",["265","266"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\nimport \"../../styles/PostForm.css\"\r\nimport Card from '@material-ui/core/Card'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div class=\"post-form-container\">\r\n\r\n            <div class=\"bg-primary p\">\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <div className=\"post-form\">\r\n                <form class=\"form my-1\"\r\n                    onSubmit={e => {\r\n                        e.preventDefault();\r\n                        addPost({ text });\r\n                        setText(' ');\r\n                    }}>\r\n                    <textarea\r\n                        className=\"post-text\"\r\n                        name=\"text\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Create a post\"\r\n                        value={text} onChange={e => setText(e.target.value)}\r\n                        required\r\n                    ></textarea>\r\n                    <input\r\n\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        value='submit'\r\n                        variant=\"contained\"\r\n\r\n\r\n                    />\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm)\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\Post.js",["267","268"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPost } from '../../actions/post';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        {/* <Link to='/posts' className='btn'>Back to Posts</Link> */}\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n            {post.comments.map(comment => (\r\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n            ))}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js",["269"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\n\r\nconst CommentItem = ({ postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\r\n    return (\r\n        <div class=\"comments\">\r\n            <div class=\"post bg-white p-1 my-1\">\r\n                <div>\r\n                    <Link to={`/profile/${user}`}>\r\n                        <img\r\n                            class=\"round-img\"\r\n                            src={avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p class=\"my-1\">\r\n                        {text}\r\n                    </p>\r\n                    <p class=\"post-date\">\r\n                        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                    </p>\r\n                    {!auth.loading && user === auth.user._id && (\r\n                        <button onClick={e => deleteComment(postId, _id)} type='button' className=\"btn btn-danger\">\r\n                            <i class=\"fas fa-times\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js",["291"],"import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    },\r\n        [getGithubRepos]\r\n\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\"> Github Repos</h2>\r\n            {\r\n                repos === null ? <Spinner /> : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                            <div>\r\n                                <h4><a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a></h4>\r\n                                <p>{repo.description}</p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ul>\r\n                                    <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                                    <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                                    <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                        </div>)\r\n                    )\r\n\r\n                )}\r\n        </div >\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({ repos: state.profile.repos });\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":15},{"ruleId":"296","severity":1,"message":"300","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":21},{"ruleId":"296","severity":1,"message":"301","line":249,"column":8,"nodeType":"298","messageId":"299","endLine":249,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":250,"column":8,"nodeType":"298","messageId":"299","endLine":250,"endColumn":16},{"ruleId":"296","severity":1,"message":"303","line":267,"column":8,"nodeType":"298","messageId":"299","endLine":267,"endColumn":13},{"ruleId":"296","severity":1,"message":"304","line":272,"column":8,"nodeType":"298","messageId":"299","endLine":272,"endColumn":14},{"ruleId":"296","severity":1,"message":"305","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"306","line":2,"column":16,"nodeType":"298","messageId":"299","endLine":2,"endColumn":26},{"ruleId":"292","replacedBy":"307"},{"ruleId":"294","replacedBy":"308"},{"ruleId":"296","severity":1,"message":"301","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":16},{"ruleId":"296","severity":1,"message":"303","line":19,"column":8,"nodeType":"298","messageId":"299","endLine":19,"endColumn":13},{"ruleId":"296","severity":1,"message":"304","line":24,"column":8,"nodeType":"298","messageId":"299","endLine":24,"endColumn":14},{"ruleId":"296","severity":1,"message":"309","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"305","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"310","line":6,"column":41,"nodeType":"298","messageId":"299","endLine":6,"endColumn":51},{"ruleId":"296","severity":1,"message":"311","line":6,"column":53,"nodeType":"298","messageId":"299","endLine":6,"endColumn":61},{"ruleId":"296","severity":1,"message":"312","line":6,"column":63,"nodeType":"298","messageId":"299","endLine":6,"endColumn":67},{"ruleId":"296","severity":1,"message":"313","line":6,"column":69,"nodeType":"298","messageId":"299","endLine":6,"endColumn":75},{"ruleId":"296","severity":1,"message":"314","line":90,"column":9,"nodeType":"298","messageId":"299","endLine":90,"endColumn":19},{"ruleId":"315","severity":1,"message":"316","line":15,"column":5,"nodeType":"317","endLine":15,"endColumn":21,"suggestions":"318"},{"ruleId":"296","severity":1,"message":"313","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":19},{"ruleId":"296","severity":1,"message":"321","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":17},{"ruleId":"296","severity":1,"message":"301","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":16},{"ruleId":"296","severity":1,"message":"322","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":13},{"ruleId":"296","severity":1,"message":"323","line":10,"column":8,"nodeType":"298","messageId":"299","endLine":10,"endColumn":11},{"ruleId":"296","severity":1,"message":"324","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":24},{"ruleId":"296","severity":1,"message":"310","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":18},{"ruleId":"296","severity":1,"message":"305","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":14},{"ruleId":"296","severity":1,"message":"325","line":19,"column":16,"nodeType":"298","messageId":"299","endLine":19,"endColumn":24},{"ruleId":"296","severity":1,"message":"326","line":21,"column":44,"nodeType":"298","messageId":"299","endLine":21,"endColumn":57},{"ruleId":"296","severity":1,"message":"313","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":19},{"ruleId":"296","severity":1,"message":"301","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":16},{"ruleId":"296","severity":1,"message":"324","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":24},{"ruleId":"296","severity":1,"message":"310","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":18},{"ruleId":"315","severity":1,"message":"327","line":71,"column":8,"nodeType":"317","endLine":71,"endColumn":36,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":261,"column":41,"nodeType":"331","endLine":261,"endColumn":70},{"ruleId":"329","severity":1,"message":"330","line":269,"column":50,"nodeType":"331","endLine":269,"endColumn":61},{"ruleId":"332","severity":1,"message":"333","line":5,"column":1,"nodeType":"334","endLine":13,"endColumn":3},{"ruleId":"296","severity":1,"message":"313","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":19},{"ruleId":"296","severity":1,"message":"301","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":16},{"ruleId":"296","severity":1,"message":"324","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":24},{"ruleId":"296","severity":1,"message":"310","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":18},{"ruleId":"329","severity":1,"message":"330","line":347,"column":45,"nodeType":"331","endLine":347,"endColumn":74},{"ruleId":"329","severity":1,"message":"330","line":355,"column":54,"nodeType":"331","endLine":355,"endColumn":65},{"ruleId":"332","severity":1,"message":"335","line":5,"column":1,"nodeType":"334","endLine":18,"endColumn":2},{"ruleId":"332","severity":1,"message":"335","line":12,"column":1,"nodeType":"334","endLine":50,"endColumn":2},{"ruleId":"332","severity":1,"message":"335","line":14,"column":1,"nodeType":"334","endLine":40,"endColumn":2},{"ruleId":"296","severity":1,"message":"313","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":19},{"ruleId":"296","severity":1,"message":"321","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":17},{"ruleId":"296","severity":1,"message":"301","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":16},{"ruleId":"296","severity":1,"message":"322","line":10,"column":8,"nodeType":"298","messageId":"299","endLine":10,"endColumn":13},{"ruleId":"296","severity":1,"message":"323","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":11},{"ruleId":"296","severity":1,"message":"324","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":24},{"ruleId":"296","severity":1,"message":"310","line":15,"column":8,"nodeType":"298","messageId":"299","endLine":15,"endColumn":18},{"ruleId":"296","severity":1,"message":"311","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":16},{"ruleId":"296","severity":1,"message":"336","line":18,"column":8,"nodeType":"298","messageId":"299","endLine":18,"endColumn":25},{"ruleId":"296","severity":1,"message":"337","line":19,"column":8,"nodeType":"298","messageId":"299","endLine":19,"endColumn":21},{"ruleId":"296","severity":1,"message":"338","line":20,"column":8,"nodeType":"298","messageId":"299","endLine":20,"endColumn":20},{"ruleId":"296","severity":1,"message":"339","line":21,"column":8,"nodeType":"298","messageId":"299","endLine":21,"endColumn":20},{"ruleId":"296","severity":1,"message":"340","line":22,"column":8,"nodeType":"298","messageId":"299","endLine":22,"endColumn":19},{"ruleId":"296","severity":1,"message":"341","line":23,"column":8,"nodeType":"298","messageId":"299","endLine":23,"endColumn":19},{"ruleId":"296","severity":1,"message":"342","line":24,"column":8,"nodeType":"298","messageId":"299","endLine":24,"endColumn":16},{"ruleId":"343","severity":1,"message":"344","line":54,"column":9,"nodeType":"345","messageId":"346","endLine":54,"endColumn":16},{"ruleId":"296","severity":1,"message":"304","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":18,"column":9,"nodeType":"349","messageId":"350","endLine":22,"endColumn":10,"fix":"351"},{"ruleId":"347","severity":1,"message":"352","line":23,"column":9,"nodeType":"349","messageId":"350","endLine":26,"endColumn":10,"fix":"353"},{"ruleId":"347","severity":1,"message":"352","line":31,"column":9,"nodeType":"349","messageId":"350","endLine":35,"endColumn":10,"fix":"354"},{"ruleId":"296","severity":1,"message":"355","line":58,"column":15,"nodeType":"298","messageId":"299","endLine":58,"endColumn":18},{"ruleId":"296","severity":1,"message":"355","line":143,"column":15,"nodeType":"298","messageId":"299","endLine":143,"endColumn":18},{"ruleId":"332","severity":1,"message":"335","line":19,"column":1,"nodeType":"334","endLine":71,"endColumn":2},{"ruleId":"296","severity":1,"message":"356","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":12},{"ruleId":"296","severity":1,"message":"319","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":14},{"ruleId":"296","severity":1,"message":"305","line":7,"column":10,"nodeType":"298","messageId":"299","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":14,"column":8,"nodeType":"317","endLine":14,"endColumn":17,"suggestions":"357"},{"ruleId":"296","severity":1,"message":"309","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"313","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":14},{"ruleId":"296","severity":1,"message":"320","line":5,"column":8,"nodeType":"298","messageId":"299","endLine":5,"endColumn":19},{"ruleId":"296","severity":1,"message":"321","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":17},{"ruleId":"296","severity":1,"message":"301","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":16},{"ruleId":"296","severity":1,"message":"323","line":11,"column":8,"nodeType":"298","messageId":"299","endLine":11,"endColumn":11},{"ruleId":"296","severity":1,"message":"358","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":12},{"ruleId":"296","severity":1,"message":"324","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":24},{"ruleId":"296","severity":1,"message":"310","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":18},{"ruleId":"296","severity":1,"message":"311","line":16,"column":8,"nodeType":"298","messageId":"299","endLine":16,"endColumn":16},{"ruleId":"296","severity":1,"message":"336","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":25},{"ruleId":"296","severity":1,"message":"337","line":18,"column":8,"nodeType":"298","messageId":"299","endLine":18,"endColumn":21},{"ruleId":"296","severity":1,"message":"338","line":19,"column":8,"nodeType":"298","messageId":"299","endLine":19,"endColumn":20},{"ruleId":"296","severity":1,"message":"339","line":20,"column":8,"nodeType":"298","messageId":"299","endLine":20,"endColumn":20},{"ruleId":"296","severity":1,"message":"340","line":21,"column":8,"nodeType":"298","messageId":"299","endLine":21,"endColumn":19},{"ruleId":"296","severity":1,"message":"341","line":22,"column":8,"nodeType":"298","messageId":"299","endLine":22,"endColumn":19},{"ruleId":"296","severity":1,"message":"359","line":23,"column":8,"nodeType":"298","messageId":"299","endLine":23,"endColumn":20},{"ruleId":"296","severity":1,"message":"360","line":28,"column":8,"nodeType":"298","messageId":"299","endLine":28,"endColumn":17},{"ruleId":"361","severity":1,"message":"362","line":87,"column":17,"nodeType":"363","endLine":87,"endColumn":61},{"ruleId":"364","severity":1,"message":"365","line":119,"column":1,"nodeType":"366","messageId":"367","endLine":159,"endColumn":2},{"ruleId":"315","severity":1,"message":"368","line":12,"column":9,"nodeType":"317","endLine":12,"endColumn":25,"suggestions":"369"},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"no-unused-vars","'Landing' is defined but never used.","Identifier","unusedVar","'AddExperience' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'axios' is defined but never used.","'Navbar' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.",["370"],["371"],"'Fragment' is defined but never used.","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Avatar' is defined but never used.","'guestLinks' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["372"],"'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Redirect' is defined but never used.","'createProfile' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["373"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'LanguageSharpIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'YouTubeIcon' is defined but never used.","'GridList' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:1000px)'] found.","Property","unnecessarilyComputedProperty",{"range":"374","text":"375"},"Unnecessarily computed property ['@media (max-width:600px)'] found.",{"range":"376","text":"377"},{"range":"378","text":"377"},"'res' is assigned a value but never used.","'Card' is defined but never used.",["379"],"'Grid' is defined but never used.","'GridListTile' is defined but never used.","'PropTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["380"],"no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},[585,614],"'@media (max-width:1000px)'",[693,721],"'@media (max-width:600px)'",[847,875],{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"389","text":"390"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"391","text":"392"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"393","text":"394"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"395","text":"396"},[548,564],"[getProfileById, match.params.id]",[3153,3181],"[loading, getCurrentProfile, profile]",[531,540],"[getPost, match.params.id]",[361,377],"[getGithubRepos, username]"]