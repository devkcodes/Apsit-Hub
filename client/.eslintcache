[{"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx":"1","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js":"2","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js":"3","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js":"7","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js":"8","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js":"9","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js":"10","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js":"11","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js":"13","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js":"14","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js":"18","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js":"19","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Experience.js":"26"},{"size":197,"mtime":1610277814710,"results":"27","hashOfConfig":"28"},{"size":2144,"mtime":1611899392981,"results":"29","hashOfConfig":"28"},{"size":1098,"mtime":1610744331534,"results":"30","hashOfConfig":"28"},{"size":1305,"mtime":1610743868906,"results":"31","hashOfConfig":"28"},{"size":3420,"mtime":1610735138722,"results":"32","hashOfConfig":"28"},{"size":2236,"mtime":1610889876205,"results":"33","hashOfConfig":"28"},{"size":407,"mtime":1610549767196,"results":"34","hashOfConfig":"28"},{"size":241,"mtime":1610738272761,"results":"35","hashOfConfig":"28"},{"size":530,"mtime":1610623856294,"results":"36","hashOfConfig":"28"},{"size":573,"mtime":1610890878648,"results":"37","hashOfConfig":"28"},{"size":407,"mtime":1610624248987,"results":"38","hashOfConfig":"28"},{"size":568,"mtime":1610623957660,"results":"39","hashOfConfig":"28"},{"size":2302,"mtime":1610890205249,"results":"40","hashOfConfig":"28"},{"size":272,"mtime":1610634656327,"results":"41","hashOfConfig":"28"},{"size":1081,"mtime":1610735817342,"results":"42","hashOfConfig":"28"},{"size":1544,"mtime":1614236783414,"results":"43","hashOfConfig":"28"},{"size":588,"mtime":1610737711861,"results":"44","hashOfConfig":"28"},{"size":878,"mtime":1610891283534,"results":"45","hashOfConfig":"28"},{"size":3302,"mtime":1610897399269,"results":"46","hashOfConfig":"28"},{"size":300,"mtime":1610744998412,"results":"47","hashOfConfig":"28"},{"size":7049,"mtime":1610890800194,"results":"48","hashOfConfig":"28"},{"size":655,"mtime":1610882747666,"results":"49","hashOfConfig":"28"},{"size":8419,"mtime":1614235687370,"results":"50","hashOfConfig":"28"},{"size":3525,"mtime":1614234927962,"results":"51","hashOfConfig":"28"},{"size":3349,"mtime":1610898808837,"results":"52","hashOfConfig":"28"},{"size":1496,"mtime":1614233456827,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"17byksv",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\index.jsx",[],["116","117"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\App.js",["118"],"import './App.css';\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport CreateProfile from './components/profile-forms/EditProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './storee';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nconst App = () => {\n    useEffect(() => {\n        store.dispatch(loadUser());\n    }, []);\n    return (\n        <Provider store={store}>\n            <Router >\n                <Fragment >\n                    <Navbar />\n                    <Route exact path=\"/\" component={Landing} />\n                    <section className=\"container\">\n                        <Alert />\n                        <Switch>\n                            <Route exact path=\"/register\" component={Register} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\n                            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n                            <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\n                            <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\n\n\n                        </Switch>\n                    </section>\n                </Fragment > </Router></Provider>\n    )\n};\nexport default App;  ","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Register.js",["119","120"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign Up</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Name\" name=\"name\" value='name' value={name} onChange={e => onChange(e)} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n                        <small className=\"form-text\"\r\n                        >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            minLength=\"6\"\r\n                            value={password2} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Already have an account? <Link to=\"/login\">Sign In</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoprops = state => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(\r\n    mapStatetoprops, { setAlert, register }\r\n)(Register);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\auth\\Login.js",["121"],"import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n\r\n        email: '',\r\n        password: '',\r\n\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign In</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into your account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            minLength=\"6\"\r\n                            value={password} onChange={e => onChange(e)} required\r\n                        />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoProps = state => ({ isAuthenticated: state.auth.isAuthenticated })\r\n\r\n\r\nexport default connect(mapStatetoProps, { login })(Login);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\storee.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\index.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\alert.js",["122"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\types.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\auth.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\auth.js",["123"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL, LOGOUT, LOGIN_FAIL, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n\r\n            localStorage.setItem('token', payload.token);\r\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n\r\n            localStorage.removeItem('token')\r\n            return { ...state, token: null, isAuthenticated: false, loading: false };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js",["124","125"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\reducers\\profile.js",["126"],"import { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\actions\\profile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js",["127"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js",["128"],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddEducation.js",["129","130"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school,\r\n        degree,\r\n        fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n                Add Your Education\r\n      </h1>\r\n            <p class=\"lead\">\r\n                <i class=\"fas fa-code-branch\"></i> Add anyworkshop or school you attended\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form class=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                        setFormData({ ...formData });\r\n                        toggleDisabled(!toDateDisabled);\r\n                    }} /> {\"  \"}Current Job</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\" Description\"\r\n                        value={description} onChange={e => onChange(e)}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n                <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(addEducation);\r\n","C:\\Users\\Devansh\\Desktop\\Apsit-Hub\\client\\src\\components\\dashboard\\Experience.js",["131","132","133"],"import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Experience = ({ experience }) => {\r\n    const experiences = experience.map(exp => (\r\n        <td key={exp._id}>\r\n            <td>{exp.company}</td>\r\n            <td className=\"hide-sm\">{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment>- {' '}\r\n                {\r\n                    exp.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                            <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n\r\n                        )\r\n                }\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </td>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n                <thread>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thread>\r\n                <tbody>{experience}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Experience;\r\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":20,"column":8,"nodeType":"140","messageId":"141","endLine":20,"endColumn":20},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":42,"column":88,"nodeType":"145","endLine":42,"endColumn":100},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":5,"column":1,"nodeType":"148","endLine":18,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":14,"column":1,"nodeType":"148","endLine":39,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":14,"column":8,"nodeType":"151","endLine":14,"endColumn":10,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":28,"column":37,"nodeType":"155","endLine":29,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":12,"column":1,"nodeType":"148","endLine":36,"endColumn":2},{"ruleId":"146","severity":1,"message":"156","line":5,"column":1,"nodeType":"148","endLine":13,"endColumn":3},{"ruleId":"149","severity":1,"message":"157","line":43,"column":8,"nodeType":"151","endLine":43,"endColumn":36,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"160","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"161","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":35},{"ruleId":"138","severity":1,"message":"162","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"163","line":9,"column":11,"nodeType":"140","messageId":"141","endLine":9,"endColumn":22},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["166"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","Assign arrow function to a variable before exporting as module default","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["167"],"'Link' is defined but never used.","'withRouter' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","'experiences' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"172","text":"173"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"174","text":"175"},[525,527],"[getCurrentProfile]",[1896,1924],"[loading, getCurrentProfile, profile]"]