[{"E:\\Apsit-Hub\\client\\src\\index.jsx":"1","E:\\Apsit-Hub\\client\\src\\App.js":"2","E:\\Apsit-Hub\\client\\src\\storee.js":"3","E:\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js":"4","E:\\Apsit-Hub\\client\\src\\actions\\auth.js":"5","E:\\Apsit-Hub\\client\\src\\components\\auth\\Register.js":"6","E:\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js":"7","E:\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js":"8","E:\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js":"9","E:\\Apsit-Hub\\client\\src\\components\\post\\Post.js":"10","E:\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js":"11","E:\\Apsit-Hub\\client\\src\\components\\auth\\Login.js":"12","E:\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js":"13","E:\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js":"14","E:\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js":"15","E:\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js":"16","E:\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js":"17","E:\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js":"18","E:\\Apsit-Hub\\client\\src\\actions\\alert.js":"19","E:\\Apsit-Hub\\client\\src\\actions\\profile.js":"20","E:\\Apsit-Hub\\client\\src\\actions\\types.js":"21","E:\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js":"22","E:\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js":"23","E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileRight.js":"24","E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js":"25","E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js":"26","E:\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js":"27","E:\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js":"28","E:\\Apsit-Hub\\client\\src\\actions\\post.js":"29","E:\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js":"30","E:\\Apsit-Hub\\client\\src\\reducers\\index.js":"31","E:\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js":"32","E:\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js":"33","E:\\Apsit-Hub\\client\\src\\reducers\\auth.js":"34","E:\\Apsit-Hub\\client\\src\\reducers\\profile.js":"35","E:\\Apsit-Hub\\client\\src\\reducers\\alert.js":"36","E:\\Apsit-Hub\\client\\src\\reducers\\post.js":"37","E:\\Apsit-Hub\\client\\src\\components\\layout\\Footer.js":"38","E:\\Apsit-Hub\\client\\src\\components\\profiles\\searchbar.js":"39","E:\\Apsit-Hub\\client\\src\\components\\layout\\Navbar2.js":"40","E:\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js":"41","E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileLeft.js":"42","E:\\Apsit-Hub\\client\\src\\utils\\api.js":"43","E:\\Apsit-Hub\\client\\src\\components\\layout\\footer.js":"44"},{"size":197,"mtime":1617714469224,"results":"45","hashOfConfig":"46"},{"size":3657,"mtime":1618589778249,"results":"47","hashOfConfig":"46"},{"size":407,"mtime":1610549767196,"results":"48","hashOfConfig":"46"},{"size":353,"mtime":1618511131645,"results":"49","hashOfConfig":"46"},{"size":2051,"mtime":1618511131519,"results":"50","hashOfConfig":"46"},{"size":14079,"mtime":1618437901338,"results":"51","hashOfConfig":"46"},{"size":588,"mtime":1610737711861,"results":"52","hashOfConfig":"46"},{"size":3665,"mtime":1617220282153,"results":"53","hashOfConfig":"46"},{"size":5449,"mtime":1618589973349,"results":"54","hashOfConfig":"46"},{"size":2245,"mtime":1618479755035,"results":"55","hashOfConfig":"46"},{"size":1724,"mtime":1618576322814,"results":"56","hashOfConfig":"46"},{"size":10391,"mtime":1618511924432,"results":"57","hashOfConfig":"46"},{"size":22224,"mtime":1618511131812,"results":"58","hashOfConfig":"46"},{"size":2520,"mtime":1618575601346,"results":"59","hashOfConfig":"46"},{"size":2386,"mtime":1618588962002,"results":"60","hashOfConfig":"46"},{"size":3525,"mtime":1614234927962,"results":"61","hashOfConfig":"46"},{"size":21189,"mtime":1618510321417,"results":"62","hashOfConfig":"46"},{"size":3332,"mtime":1618271136542,"results":"63","hashOfConfig":"46"},{"size":407,"mtime":1610624248987,"results":"64","hashOfConfig":"46"},{"size":5846,"mtime":1618510905623,"results":"65","hashOfConfig":"46"},{"size":1044,"mtime":1617227844514,"results":"66","hashOfConfig":"46"},{"size":300,"mtime":1610744998412,"results":"67","hashOfConfig":"46"},{"size":364,"mtime":1615037798949,"results":"68","hashOfConfig":"46"},{"size":326,"mtime":1618339915187,"results":"69","hashOfConfig":"46"},{"size":5562,"mtime":1618588926076,"results":"70","hashOfConfig":"46"},{"size":980,"mtime":1614506627617,"results":"71","hashOfConfig":"46"},{"size":4367,"mtime":1618589953094,"results":"72","hashOfConfig":"46"},{"size":4574,"mtime":1618511131605,"results":"73","hashOfConfig":"46"},{"size":4490,"mtime":1618511131561,"results":"74","hashOfConfig":"46"},{"size":4491,"mtime":1618438319322,"results":"75","hashOfConfig":"46"},{"size":280,"mtime":1614352620702,"results":"76","hashOfConfig":"46"},{"size":2605,"mtime":1618480076395,"results":"77","hashOfConfig":"46"},{"size":2849,"mtime":1618477504647,"results":"78","hashOfConfig":"46"},{"size":1097,"mtime":1618511131643,"results":"79","hashOfConfig":"46"},{"size":1223,"mtime":1614354815631,"results":"80","hashOfConfig":"46"},{"size":530,"mtime":1617907328343,"results":"81","hashOfConfig":"46"},{"size":1838,"mtime":1614404899736,"results":"82","hashOfConfig":"46"},{"size":3637,"mtime":1618535208709,"results":"83","hashOfConfig":"46"},{"size":1954,"mtime":1618437669717,"results":"84","hashOfConfig":"46"},{"size":10251,"mtime":1618590067391,"results":"85","hashOfConfig":"46"},{"size":2593,"mtime":1618585191128,"results":"86","hashOfConfig":"46"},{"size":11166,"mtime":1618589536896,"results":"87","hashOfConfig":"46"},{"size":616,"mtime":1618511131644,"results":"88","hashOfConfig":"46"},{"size":1016,"mtime":1618585961983,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"om703y",{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":6,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":8,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":19,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":22,"source":"136","usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":7,"source":"157","usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":4,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"92"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"200","usedDeprecatedRules":"92"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"92"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"92"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"92"},"E:\\Apsit-Hub\\client\\src\\index.jsx",[],["212","213"],"E:\\Apsit-Hub\\client\\src\\App.js",["214","215"],"\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ResponsiveDrawer from './components/layout/Navbar2';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing'\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\nimport CreateProfile from './components/profile-forms/CreateProfile';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\nimport Footer from './components/layout/footer';\r\nimport './components/layout/Alert.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n//Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './storee';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\nvar bodyParser = require('body-parser');\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    frag:{marginTop:80},\r\n    navbar:{\r\n        // ['@media (min-width:601px)']: {\r\n                display:'none'\r\n        // }\r\n    },\r\n    drawer:{\r\n        // ['@media (max-width:600px)']: {\r\n                 display: \"none\"\r\n        // }\r\n    },\r\n    \r\n    }));\r\n\r\nif (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n//     App.use(bodyParser.json());\r\nconst classes = useStyles();\r\n// App.use(bodyParser.urlencoded({ extended: true }));\r\n    useEffect(() => {\r\n        store.dispatch(loadUser());\r\n    }, []);\r\n    return (\r\n        <Provider  store={store} >\r\n            <Router >\r\n                <Fragment  >\r\n                {/* <Landing  exact path=\"/\"/> */}\r\n                <div className=\"navbar\">\r\n                    <Navbar /> \r\n                    </div>\r\n                <div className=\"drawer\">\r\n                    <ResponsiveDrawer />\r\n                    </div>\r\n\r\n                    <Fragment className={classes.frag}>\r\n                    <Alert />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n\r\n                    <section className=\"container\">\r\n\r\n                        \r\n                        <Switch>\r\n                            <Route exact path=\"/register\" component={Register} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Route exact path=\"/profiles\" component={Profiles} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\r\n                            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n                            <Route exact path=\"/profile/:id\" component={Profile} />\r\n                            <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n                            <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n\r\n\r\n                        </Switch>\r\n                    </section>\r\n                    <Footer/>\r\n</Fragment>\r\n                </Fragment > </Router></Provider>\r\n    )\r\n};\r\nexport default App;","E:\\Apsit-Hub\\client\\src\\storee.js",[],"E:\\Apsit-Hub\\client\\src\\utils\\setAuthToken.js",[],"E:\\Apsit-Hub\\client\\src\\actions\\auth.js",["216"],"import axios from 'axios';\r\nimport {setAlert} from './alert'\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport api from '../utils/api';\r\n\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if(localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    })\r\n  }\r\n}\r\n\r\n\r\n//Register User \r\nexport const register = ({ name, email, password}) => async dispatch => {\r\n  const config ={\r\n    headers: {\r\n      'Content-Type' : 'application/json',\r\n    }\r\n  }\r\n  const body = JSON.stringify({name,email,password});\r\n\r\n  try {\r\n    const res = await axios.post('/api/users',body,config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    })\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if(errors){\r\n      errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n//Login User \r\nexport const login = ( email, password ) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }\r\n  const body = JSON.stringify({email, password });\r\n \r\n\r\n  try {\r\n    \r\n    const res = await api.post('/auth', body);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    })\r\n    \r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//Logout\r\nexport const logout = () => dispatch => {\r\ndispatch({type: LOGOUT});\r\ndispatch({type: CLEAR_PROFILE})\r\n}\r\n","E:\\Apsit-Hub\\client\\src\\components\\auth\\Register.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"//mui imports\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Text, Divider,Fieldset,Badge,Tooltip } from '@geist-ui/react' \r\nimport { InputBase } from '@material-ui/core';\r\n\r\n\r\n\r\n//others\r\nimport React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport Navbar from '../layout/Navbar';\r\nimport PropTypes from 'prop-types'\r\n\r\n//styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n       \r\n        padding: '5em',\r\n        paddingTop:\"5vh\",\r\n        display: 'flex',\r\n        width:\"35vw\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0F1319',\r\n        margin: '70px',\r\n        marginLeft: '33%',\r\n        border: '1px solid #F1304D',\r\n        boxShadow:\"0px 0px 5px 5px #F1304D\",\r\n        // marginBottom:\"1000px\"\r\n        height:\"80vh\",\r\n        ['@media (max-width:1000px)']: {\r\n\r\n            margin: '0',\r\n            marginTop:'15%',\r\n            padding: '15%',\r\n            width: '100%',\r\n            height: '100%'\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            margin: '0',\r\n            marginTop:'45px',\r\n            padding: '5%',\r\n            width: '100%',\r\n            marginBottom: '15%',\r\n        height: '85%'        }\r\n    },\r\n    container: {\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1617973085/3_dudhhs.png)',\r\n        height: \"100vh\",\r\n        // marginBottom: \"200px\"\r\n        ['@media (max-width:1000px)']: {\r\nbackgroundImage: 'none',\r\n          backgroundColor:'#0F1319',\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            backgroundColor:'#0F1319',\r\nbackgroundImage: 'none',\r\n\r\n        }\r\n    },\r\n\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor:\"#F1304D\",\r\n        color:\"#0F1319\",\r\n        '&:hover': {\r\n            backgroundColor:\"#F1304D\",\r\n    },\r\n\r\n    ['@media (max-width:1000px)']: {\r\n        width:\"80%\",\r\n        margin: \"7%\",\r\n                },\r\n                ['@media (max-width:600px)']: {\r\n                    width:\"80%\",\r\n                    margin: \"7%\",\r\n        \r\n                }\r\n},\r\n    gridRoot: {\r\n        backgroundColor: \"red\",\r\n    },\r\n    textFieldRoot:{\r\n        color:'red'\r\n    }\r\n}));\r\n\r\n//register function\r\nexport const Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const classes = useStyles();\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onClick = async e => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else {\r\n            register({ name, email, password });\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/create-profile\" />\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\r\n                <CssBaseline />\r\n\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\" style={{ color: 'white' }}>\r\n                        Sign up\r\n        </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={12} >\r\n                                <TextField\r\n                                className={\r\n                                    {root: classes.textFieldRoot}\r\n                                }\r\n                                 \r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n\r\n                                    InputBaseProps={{\r\n                                        style: {\r\n                                            \r\n                                            width: '100%',\r\n                                            color: 'pink'\r\n                                        },\r\n                                        color:\"red\"\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    autoComplete=\"name\"\r\n                                    name=\"name\"\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"name\"\r\n                                    label=\"Name\"\r\n                                    value={name}\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    style={{\r\n                                        backgroundColor: \"#171319\",\r\n                                        color: \"white\",\r\n                                        // border: '5px solid black',\r\n                                        // borderRadius: \"10px\"\r\n                                    }}\r\n                                    InputProps={{\r\n                                        style: {\r\n                                            color: \"white\"\r\n                                        }\r\n                                    }}\r\n                                    InputLabelProps={{\r\n                                        style: {\r\n                                            textOverflow: 'ellipsis',\r\n                                            whiteSpace: 'nowrap',\r\n                                            overflow: 'hidden',\r\n                                            width: '100%',\r\n                                            color: 'white'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    variant=\"filled\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password2\"\r\n                                    label=\"Confirm sPassword\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password2}\r\n                                    autoComplete=\"current-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                                onClick={e => onClick(e)}\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                value='login'\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                               \r\n                            >\r\n                             <Typography><Text b color=\"white\"> Register</Text></Typography>\r\n            </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link to=\"/login\" variant=\"body2\"  style={{ color: '#F1304D' }}>\r\n                                    Already have an account? Sign in\r\n              </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Box mt={5}>\r\n\r\n                </Box>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoprops = state => ({ isAuthenticated: state.auth.isAuthenticated });\r\n\r\nexport default connect(\r\n    mapStatetoprops, { setAlert, register }\r\n)(Register);\r\n","E:\\Apsit-Hub\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\Apsit-Hub\\client\\src\\components\\dashboard\\Dashboard.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//normal\r\nimport React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile, deleteAccount, createProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from \"./DashboardActions\";\r\n\r\nimport CreateProfile from '../profile-forms/CreateProfile'\r\n\r\n\r\n//Geist UI\r\nimport {Card, Text, Divider,Code} from '@geist-ui/react' \r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white'\r\n    },\r\n    containerRoot: {\r\n        marginTop:'10em'\r\n\r\n    },\r\n    welcome: {\r\n\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\n\r\nconst Dashboard = ({ deleteAccount, getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    // return loading && profile === null ? <Spinner /> : <Fragment>\r\n\r\n    //     {profile !== null ? (\r\n    //         <Fragment>\r\n    //             <Redirect to={`/profile/${user._id}`} />\r\n    //         </Fragment>) :\r\n    //         (<Fragment>\r\n    //             <CreateProfile />\r\n    //         </Fragment>)}\r\n    // </Fragment>;\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />) : (\r\n\r\n        <Fragment>\r\n            <div className={classes.root}>\r\n                <div className={classes.containerRoot}>\r\n\r\n                \r\n                \t<Card  width=\"400px\">\r\n                        <Card.Content>\r\n                            <Text b>Description</Text>\r\n                        </Card.Content>\r\n                        <Divider y={0} />\r\n                        <Card.Content>\r\n                            <Text>The Object constructor creates an object wrapper for the given value.</Text>\r\n                            <Text>When called in a non-constructor context, Object behaves identically to <Code>new Object()</Code>.</Text>\r\n                        </Card.Content>\r\n                        <Divider y={0} />\r\n                        <Card.Content>\r\n                            <Text>The Object constructor creates an object wrapper for the given value.</Text>\r\n                            <Text>When called in a non-constructor context, Object behaves identically to <Code>new Object()</Code>.</Text>\r\n                        </Card.Content>\r\n                        </Card>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","E:\\Apsit-Hub\\client\\src\\components\\layout\\Navbar.js",["248","249","250","251","252","253","254","255"],"import React, { useState,Fragment ,} from 'react'\r\nimport { Link,  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\nimport { Drawer,Grid, Button, AppBar, Toolbar, Typography, MenuItem, Menu, Avatar, Divider } from \"@material-ui/core\"\r\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport \"../../App.css\";\r\nimport {createMuiTheme } from '@material-ui/core/styles'\r\n\r\n\r\n\r\nconst navFont = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      'Share Tech', 'san-serif',\r\n    ].join(','),\r\n   \r\n},});\r\n\r\n\r\nconst styles = ({\r\n \r\n  row: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    padding: '0px',\r\n  },\r\n  container: {\r\n    width: 1170,\r\n    margin: \"auto\"\r\n  },\r\n  buttonFontSize: {\r\n    fontSize: \"20px\",\r\n    marginRight:\"7px\",\r\n    marginLeft:\"7px\",\r\n    ['@media (max-width:600px)']: {\r\ndisplay: \"none\"      }\r\n  },\r\n  links: {\r\n    color: 'white',\r\n    textDecoration: 'none'\r\n  },\r\n  AppBar: {\r\n    //height:400,\r\n    //background: `url(\"http://lorempixel.com/1920/1080/nature\") no-repeat center center`,\r\n    backgroundColor: \"#2B7A78\",\r\n    backgroundSize: \"cover\",\r\n    padding: \"0px\",\r\n    marginBottom: \"\",\r\n    textDecoration: 'none',\r\n    \r\n  ['@media (max-width:600px)']: {\r\n    \r\n    }\r\n    \r\n\r\n  },\r\n  mainLogo: {\r\n    color: \"#17252A\",\r\n\r\n    '&:hover': {\r\n      background: \"transparent\"\r\n    }\r\n  },\r\n\r\n  avatar: {\r\n    height: \"100%\",\r\n    borderRadius: 0,\r\n\r\n\r\n  },\r\n\r\n  loginButton: {\r\n    background: \"#e91e63\",\r\n    color: \"#fff\",\r\n    borderRadius: \"25px\",\r\n    padding: \"0px 25px\",\r\n\r\n    '&:hover': {\r\n      background: 'blue',\r\n      boxShadow: \"0px 2px 10px #888888\"\r\n    }\r\n  }\r\n\r\n});\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport const NavbarComponent = ({ auth: { isAuthenticated, loading ,user}, logout }) => {\r\n  const classes = useStyles();\r\n  \r\n  let param = window.location.href;\r\n\r\n  return (\r\n    \r\n    <Fragment>\r\n      <MuiThemeProvider theme={navFont}>\r\n        {(!loading && !isAuthenticated &&!(param === 'http://localhost:3000/')) ? <AppBar position=\"fixed\" color=\"#2D3548\" className={classes.AppBar}>\r\n          \r\n            <Toolbar >\r\n              <Grid className={classes.grow}>\r\n                <Button container className={classes.mainLogo}>\r\n                  <h2>ApsitHub</h2>\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n              \r\n              {/* <Button color=\"inherit\" component={Link} className={classes.buttonFontSize}><Link to=\"/profiles\" className={classes.links}>Students</Link></Button> */}\r\n              <Button color=\"inherit\" component={Link} className={classes.buttonFontSize}><Link to=\"/login\" className={classes.links}>Sign In</Link></Button>\r\n              <Button color=\"inherit\" component={Link} className={classes.buttonFontSize}><Link to=\"/register\" className={classes.links}>Register</Link></Button>\r\n              <Button color=\"inherit\" component={Link} className={classes.buttonFontSize}><Link to=\"/profiles\" className={classes.links}>Students</Link></Button>\r\n              <Button color=\"inherit\" className={classes.buttonFontSize}><a href=\"https://www.apsit.edu.in/home\" target=\"_blank\" className={classes.links}>APSIT</a></Button>\r\n              \r\n              <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        // open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        \r\n      </Drawer>\r\n              </Grid>\r\n            </Toolbar>\r\n          <Divider/>\r\n        </AppBar> :  isAuthenticated&&!loading&& <AppBar position=\"fixed\" color=\"#2D3548\" className={classes.AppBar}>\r\n          \r\n            <Toolbar >\r\n              <Grid className={classes.grow}>\r\n                <Button container className={[classes.mainLogo]}>\r\n                  <h2>ApsitHub</h2>\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n              \r\n              {user &&\r\n              <Button color=\"inherit\" className={classes.buttonFontSize}><Link  to={`/profile/${user._id}`} className={classes.links}>Dashboard</Link></Button> }\r\n              <Button color=\"inherit\" component={Link} className={classes.buttonFontSize}><Link to=\"/profiles\" className={classes.links}>Students</Link></Button>\r\n              <Button color=\"inherit\" className={classes.buttonFontSize}><Link to=\"/posts\" className={classes.links}>Posts</Link></Button>\r\n              <Button color=\"inherit\" className={classes.buttonFontSize} >\r\n                <Link className={classes.links} onClick={logout} href=\"http://localhost:3000/\">\r\n              \r\n                  Logout</Link>\r\n              </Button>\r\n              <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        // open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        \r\n      </Drawer>\r\n              </Grid>\r\n            </Toolbar>\r\n          <Divider/>\r\n        </AppBar> }\r\n        \r\n      \r\n\r\n\r\n</MuiThemeProvider>\r\n      \r\n    </Fragment>\r\n\r\n  )\r\n};\r\nNavbarComponent.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStatetoprops = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStatetoprops, { logout })(NavbarComponent);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ","E:\\Apsit-Hub\\client\\src\\components\\post\\Post.js",["256","257","258","259"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPost } from '../../actions/post';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\n\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\nimport {Button} from '@material-ui/core'\r\nimport { ArrowLeft } from '@geist-ui/react-icons'\r\n\r\n\r\nconst styles = {\r\ncontainerRoot: {\r\n        marginTop:'5rem',\r\n        width:'70%',\r\n        // ['@media (max-width:1000px)']: {\r\n\r\n        //     margin: '0',\r\n        //     padding: '0'\r\n        // },\r\n        ['@media (max-width:600px)']: {\r\n            width:'94%',\r\n            marginTop:'8.5rem',\r\n        },\r\n    },\r\n    backButton:{\r\n        padding:'10',\r\n        margin:\"2%\",\r\n        marginLeft:\"0\",\r\n        backgroundColor:\"#2B7A78\",\r\n        color:'white'\r\n    },\r\n    postcontainer:{\r\n        padding:'0'\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n\r\n        const classes = useStyles()\r\n        \r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        <div className={classes.containerRoot}>\r\n            <Link to='/posts' className='btn'>\r\n            <Button className={classes.backButton} size=\"medium\" shadow type=\"secondary\">Back To Posts</Button></Link>\r\n            <div  className={classes.postcontainer}>\r\n        <PostItem post={post} postPage ={true}  />\r\n        </div>\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n            {post.comments.map(comment => (\r\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n            ))}\r\n        </div>\r\n        </div>\r\n        \r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","E:\\Apsit-Hub\\client\\src\\components\\layout\\Alert.js",["260","261","262","263","264","265","266","267","268","269"],"import {React,Fragment,useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport \"./Alert.css\"\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Text, Divider,Button,Avatar,Fieldset,Badge,Tooltip } from '@geist-ui/react' \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position:'sticky',\r\n        marginTop:'80px'\r\n\r\n    },\r\n    danger:{\r\n        color:\"#721C24\",\r\n        backgroundColor:\"#F8D7DA\",\r\n        height:\"60px\",\r\n        padding:\"1px\",\r\n        position:'sticky'\r\n    },\r\n    success:{\r\n       \r\n        color:\"#155724\",\r\n        backgroundColor:\"#D4EDDA\",\r\n        height:\"60px\",\r\n        padding:\"1px\",\r\n        position:'sticky'\r\n    }\r\n    \r\n}));\r\n\r\n\r\nexport const Alert = ({ alerts }) => {\r\n    const classes = useStyles();\r\n    return ( <div className={classes.root}>\r\n        {alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n    \r\n       \r\n    <AlertDiv alert ={alert}/>\r\n    \r\n    ))}\r\n    </div>\r\n    )\r\n} \r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\nconst mapStatetoprops = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nconst AlertDiv = ({alert:{id,msg,alertType}}) =>{\r\n        const classes = useStyles();\r\n\r\n        return (\r\n            <div  key={alert.id} className={classes[alertType]} >\r\n            \r\n            <Text blockquote size=\"1.25rem\" fontWeight=\"bold\" className={`classes.${alert.alertType}`}>{msg}</Text>\r\n        </div>\r\n        )\r\n}  \r\n\r\nexport default connect(mapStatetoprops)(Alert);\r\n\r\n//alert component gets state, and then is user to put the message on UI","E:\\Apsit-Hub\\client\\src\\components\\auth\\Login.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Container from '@material-ui/core/Container'\r\n// import Form from '@material-ui/core/Form';\r\nimport { Text, Divider,Fieldset,Badge,Tooltip } from '@geist-ui/react' \r\n\r\n\r\n\r\n//other\r\nimport React, { Fragment, useState } from 'react';\r\nimport '../../App.css';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin:0,\r\n        padding:0,\r\n        height: '100vh',\r\n        color: 'white',\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1617973085/3_dudhhs.png)',\r\n        height: \"100vh\",\r\n        // marginBottom: \"200px\"\r\n        ['@media (max-width:1024px)']: {\r\nbackgroundImage: 'none',\r\n          backgroundColor:'#0F1319',\r\n          padding:0,\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            backgroundColor:'#0F1319',\r\nbackgroundImage: 'none',\r\n\r\n        }\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/c_scale,w_1564/v1617711570/Untitled_design_psiyef.png)', \r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n\r\n        padding: '5em',\r\n        display: 'flex',\r\n        width:\"35vw\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0F1319',\r\n        margin: '90px',\r\n        marginLeft: '33%',\r\n        border: '1px solid #F1304D',\r\n        boxShadow:\"0px 0px 5px 5px #F1304D\",\r\n        // marginBottom:\"1000px\"\r\n        height:\"70vh\",\r\n        ['@media (max-width:1024px)']: {\r\n\r\n            margin: '5%',\r\n            marginTop:'15%',\r\n            padding: '15%',\r\n            width: '90%',\r\n            height: '70%'\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            margin: '5%',\r\n            marginTop:'45px',\r\n            padding: '5%',\r\n            width: '90%',\r\n            marginBottom: '15%',\r\n        height: '80%'        }\r\n\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor:\"#F1304D\",\r\n        color:\"#0F1319\",\r\n        '&:hover': {\r\n            backgroundColor:\"#F1304D\",\r\n\r\n    },\r\n},\r\n    gridRoot: {\r\nboxShadow:\"none\",\r\n        backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1617973085/3_dudhhs.png)',\r\nbackgroundColor:\"#D4B39D\",\r\n['@media (max-width:1024px)']: {\r\n\r\n    margin: '0',\r\n    marginTop:'',\r\n    padding: '0',\r\n    width: '180%',\r\n    height: '70%'\r\n},\r\n['@media (max-width:600px)']: {\r\n    margin: '5%',\r\n    marginTop:'45px',\r\n    padding: '5%',\r\n    width: '90%',\r\n    marginBottom: '15%',\r\nheight: '80%'        }\r\n    },\r\n    // typography: {\r\n    //     allVariants: {\r\n    //         color: \"white\"\r\n    //     },\r\n    // },\r\ntextfieldcolor:{\r\n    backgroundColor: \"#171319\",\r\n    color: \"white\"\r\n\r\n    \r\n    // color:\"#F1304D\"\r\n},\r\ncontainer: {\r\n    backgroundImage: 'url(https://res.cloudinary.com/dsph4eptm/image/upload/v1617973085/3_dudhhs.png)',\r\n    height: \"100vh\",\r\n    // marginBottom: \"200px\"\r\n    ['@media (max-width:1000px)']: {\r\nbackgroundImage: 'none',\r\n      backgroundColor:'#0F1319',\r\n    },\r\n    ['@media (max-width:600px)']: {\r\n        backgroundColor:'#0F1319',\r\nbackgroundImage: 'none',\r\n\r\n    }\r\n},\r\n\r\n}));\r\n\r\n\r\nexport const Login = ({ login, isAuthenticated }) => {\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState({\r\n\r\n        email: '',\r\n        password: '',\r\n\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const onClick = async e => {\r\n        e.preventDefault()\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/posts\" />\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n             <Container component=\"main\" maxWidth=\"xl\" className={classes.container}>\r\n                <CssBaseline />\r\n                {/* <Grid item xs={false} sm={4} md={7} className={classes.image} /> */}\r\n               \r\n                    <Paper elevation={3} item className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon color='white' />\r\n                        </Avatar>\r\n                     <Typography   component=\"h1\" variant=\"h4\" style={{ color: 'white' }}>\r\n                            Sign in\r\n          </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField className={ classes.textfieldcolor}\r\n                              \r\n                                \r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: \"white\" // for input text color\r\n                                    }\r\n                                }}\r\n\r\n                                InputLabelProps={{\r\n                                    style: {\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        overflow: 'hidden',\r\n                                        width: '100%',\r\n                                        focussedColor: '#F1304D',\r\n                                        color:\"white\"\r\n                                    }\r\n                                }}\r\n\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={e => onChange(e)}\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                            />\r\n                            <TextField className={ classes.textfieldcolor}\r\n                           InputProps={{\r\n                            \r\n                          }}\r\n                               \r\n                                InputProps={{\r\n                                    style: {\r\n                                        color: \"white\" // for input text color\r\n                                    }\r\n                                }}\r\n\r\n                                InputLabelProps={{\r\n                                    style: {\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        overflow: 'hidden',\r\n                                        width: '100%',\r\n                                        color: 'white'\r\n                                    }\r\n                                }}\r\n\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                minLength=\"6\"\r\n                                value={password}\r\n                                onChange={e => onChange(e)}\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n\r\n                            <Button\r\n                                onClick={e => onClick(e)}\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                value='login'\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                               \r\n                            >\r\n                             <Typography><Text b color=\"white\"> Sign In</Text></Typography>\r\n            </Button>\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link to=\"/register\" variant=\"body2\" style={{ color: '#F1304D' }}>\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Box mt={5}>\r\n\r\n                            </Box>\r\n                        </form>\r\n                    </Paper>\r\n                \r\n            </Container>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStatetoProps = state => ({ isAuthenticated: state.auth.isAuthenticated })\r\n\r\n\r\nexport default connect(mapStatetoProps, { login })(Login);","E:\\Apsit-Hub\\client\\src\\components\\profile-forms\\EditProfile.js",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport g4glogo from '../../img/gfgicon.png'\r\nimport leetcodelogo from '../../img/leetcode-logo.png'\r\nimport codeforceslogo from '../../img/codeforces-logo.jpg'\r\nimport codecheflogo from '../../img/codechef-logo.png'\r\nimport kagglelogo from '../../img/kaggle.png'\r\n\r\n\r\n\r\n\r\n\r\n//normal\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAccount } from '../../actions/profile';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, deleteAccount, createProfile, getCurrentProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            company: '',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: '',\r\n            kaggle: '',\r\n            codeforces: '',\r\n            codechef: '',\r\n            geeksforgeeks: '',\r\n            leetcode: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n    const [displayCodingInputs, toggleCodingInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        console.log(profile)\r\n        setFormData({\r\n            gender : loading ||  profile.gender,\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n            geeksforgeeks: loading || !profile.coding ? '' : profile.coding.geeksforgeeks,\r\n            codeforces: loading || !profile.coding ? '' : profile.coding.codeforces,\r\n            codechef: loading || !profile.coding ? '' : profile.coding.codechef,\r\n            leetcode: loading || !profile.coding ? '' : profile.coding.leetcode,\r\n            kaggle: loading || !profile.coding ? '' : profile.coding.kaggle,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n\r\n\r\n    const {\r\n        gender,\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n        kaggle,\r\n        codeforces,\r\n        codechef,\r\n        geeksforgeeks,\r\n        leetcode\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n    \r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n    const editFont = createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n            main:\"#fff\",\r\n          }},\r\n        typography: {\r\n          fontFamily: [\r\n            'Share Tech', 'san-serif',\r\n          ].join(','),\r\n          \r\n          Fontcolor:\"#F1304D\"\r\n      }});\r\n      \r\n    const useStyles = makeStyles((theme) => ({\r\n    \r\n        containerRoot: {\r\n            margin: '100px',\r\n            ['@media (max-width:600px)']: {\r\n                margin:10,\r\n                marginRight:20,\r\n                width:\"400px\",\r\n                backgroundColor:\"# \",\r\n\r\n                    }\r\n            \r\n        },\r\n        form: {\r\n            marginLeft:\"15%\",\r\n            marginRight:\"15%\",\r\n            width: '100%', \r\n            ['@media (max-width:600px)']: {\r\n            }\r\n    \r\n        },\r\n\r\n        formPaper: {\r\n           margin:\"5%\",\r\n            height: \"100%\",\r\n            padding: '2%',\r\n            width: '60%',\r\n            marginBottom: '20%',\r\n            marginLeft:0,\r\n            ['@media (max-width:600px)']: {\r\n                margin:0,\r\n                width:\"100%\",\r\n                padding:'2%',\r\n                marginBottom: '20%',\r\n            },\r\n            ['@media (max-width:1024px)']: {\r\n                margin:0,\r\n                width:\"94%\"\r\n            }\r\n    \r\n        },\r\n        textField: {\r\n            width: '70%',\r\n            margin: \"5px\",\r\n            height: \"5vh\",\r\n            textOverflow:\"ellipsis0\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"200px\",\r\n                marginBottom: \"15px\",\r\n\r\n            }\r\n    \r\n        },\r\n        textFieldSelect:{\r\n            width: '70%',\r\n            margin: \"5px\",\r\n            height: \"5vh\",\r\n            marginBottom:\"15px\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"200px\"\r\n            },\r\n            ['@media (max-width:1024)']: {\r\n            \r\n            }\r\n    \r\n        },\r\n        formGrid1: {\r\n            margin: \"0%\",\r\n            // marginLeft:\"-20%\",\r\n            ['@media (max-width:600px)']: {\r\n           \r\n            },\r\n            ['@media (max-width:1024)']: {\r\n            \r\n            }\r\n    \r\n       },\r\n        formGrid2: {\r\n            marginLeft: \"-4%\",\r\n            marginTop: \"70px\",\r\n            width: \"80%\",\r\n            ['@media (max-width:600px)']: {\r\n            \r\n            },\r\n            ['@media (max-width:1024)']: {\r\n           \r\n            }\r\n    \r\n        },\r\n        buttonToggle: {\r\n            marginTop: \"10px\",\r\n            // marginLeft: '20%',\r\n            color: 'black',\r\n            border: '1px solid ',\r\n            width: '100%',\r\n            ['@media (max-width:600px)']: {\r\n            \r\n            },\r\n            ['@media (max-width:1024)']: {\r\n            \r\n            }\r\n    \r\n\r\n        },\r\n        Bsubmit: {\r\n            marginLeft: \"2%\",\r\n            backgroundColor: \"green\",\r\n            marginRight: \"7%\",\r\n            color: \"white\",\r\n            '&:hover':{\r\n                color:\"black\",\r\n            },\r\n        },\r\n        Bback: {\r\n            // marginRight: \"7%\",\r\n            color: \"black\",\r\n            width: \"100%\",\r\n            '&:hover':{\r\n                color:\"black\",\r\n            },\r\n        },\r\n        Bdelete: {\r\n            backgroundColor: \"red\",\r\n            color: \"white\",\r\n            '&:hover':{\r\n                color:\"black\",\r\n            },\r\n        },\r\n        finalGrid:{\r\n            marginLeft:\"-12%\",\r\n            margin:\"5%\"\r\n        },\r\n        urls: {\r\n            marginLeft:\"10%\",\r\n            marginTop:\"5%\",\r\n        \r\n            ['@media (max-width:600px)']: {\r\n            width:\"250px\",\r\n            marginLeft:\"0\"\r\n            },\r\n\r\n        },\r\n        logo:{\r\n            maxWidth:'23px',\r\n            marginRight:'20px',\r\n            textDecoration:'none',\r\n            color:'black'\r\n          },\r\n          Icons:{\r\n            marginRight:'20px',\r\n          },\r\n\r\n        textFieldSocial: {\r\n            width: '26vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"180px\"\r\n                },\r\n        },\r\n\r\n        textFieldCoding: {\r\n            width: '26vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"180px\"\r\n                },\r\n        },\r\n        \r\n\r\n        Icons: {\r\n            marginRight:'20px',\r\n        },\r\n       heading:{\r\n        ['@media (max-width:600px)']: {\r\n            margin:\"10px\",\r\n            marginTop:0,\r\n            justifyText:\"center\"\r\n        },\r\n          \r\n       },\r\n        // lead:{\r\n        //     fontSize: \"18px\",\r\n        //     dispay:'block'\r\n        // }\r\nformText:{\r\n    marginTop:\"10px\",\r\n    ['@media (max-width:600px)']: {\r\n          fontSize:\"10px\",\r\n          margin:\"10px\"\r\n    },\r\n    \r\n    },\r\n    formBox:{\r\n        marginTop:\"20px\",\r\n        ['@media (max-width:600px)']: {\r\n            maxWidth:\"200px\"  \r\n      },\r\n}\r\n\r\n\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const statuses = [\r\n        {\r\n            value: 'First Year',\r\n            label: 'First Year',\r\n        },\r\n        {\r\n            value: 'Second Year',\r\n            label: 'Second Year',\r\n        },\r\n        {\r\n            value: 'Third Year',\r\n            label: 'Third Year',\r\n        },\r\n        {\r\n            value: 'Fouth Year',\r\n            label: 'Fouth Year',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <MuiThemeProvider theme={editFont}>\r\n        <Fragment>\r\n            <Grid container  direction=\"column\" justify=\"space-between\"  alignItems=\"center\" style={{backgroundColor:\"#75C7C3\"}} className={classes.containerRoot}>\r\n            <Grid item className={classes.heading}>\r\n                    <Typography><h1 variant=\"h4\" align=\"center\" > Edit Your Profile</h1></Typography>\r\n                       \r\n      \r\n                    <Typography> \r\n                             Let's get some information to make your profile stand out\r\n                     </Typography>\r\n                      </Grid>\r\n                      <Paper className={classes.formPaper}>\r\n                    <form className={classes.form} onSubmit={e => onSubmit(e)}>\r\n                        \r\n                    <Grid\r\n  container\r\n  direction=\"column\"\r\n  justify=\"space-evenly\"\r\n  alignItems=\"stretch\"\r\n>\r\n                            <Grid item className={classes.formGrid1}>\r\n                                \r\n                            <Box  className={classes.formBox}  elevation={10}>\r\n                                <TextField className={classes.textFieldSelect}\r\n                                    id=\"status\"\r\n                                    select\r\n                                    name=\"status\"\r\n                                    label='Currently in..'\r\n                                    value={status}\r\n                                    onChange={e => onChange(e)}\r\n\r\n                                >\r\n                                    {statuses.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.value}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                                <Typography className={classes.formText}\r\n                                    >You're current Graduation Year</Typography>\r\n                                </Box>\r\n\r\n                                <Box direction=\"column\" className={classes.formBox} elevation={3}>\r\n                                    <TextField className={classes.textField} label='Company' placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}>\r\n                                    </TextField>\r\n                                    <Typography className={classes.formText}\r\n                                    >Company you're intern at</Typography>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='Website' placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} ></TextField>\r\n                                    <Typography className={classes.formText}>Could be your own or a company website</Typography>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='city' type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} ></TextField>\r\n                                    <Typography className={classes.formText}\r\n                                    >City & state suggested</Typography\r\n                                    >\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='Skills' placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} ></TextField>\r\n                                    <Typography className={classes.formText}\r\n                                    >Please use comma separated values</Typography>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label='Github Username' placeholder=\"Github Username\"\r\n\r\n                                        placeholder=\"Github Username\"\r\n                                        name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                    <Typography className={classes.formText}>To display GIthub Repos</Typography>\r\n                                </Box>\r\n                                <Box className={classes.formBox}>\r\n                                    <TextField className={classes.textField} label=\"Multiline\"\r\n                                        multiline variant=\"outlined\"\r\n                                        rows={4} label=\"Bio\" placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item className={classes.formGrid2}>\r\n                                \r\n                                    <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\r\n                                   <Grid item> <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleSocialInputs(!displaySocialInputs)} size=\"small\" className={classes.buttonToggle}>\r\n                                        <LanguageSharpIcon />Add Social Network Links\r\n          </Button></Grid>\r\n\r\n          <Grid item>      <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleCodingInputs(!displayCodingInputs)} size=\"small\" className={classes.buttonToggle}>\r\n                                        <LanguageSharpIcon />Add Coding Profile Links\r\n          </Button></Grid>\r\n          </Grid>\r\n                                   \r\n                                \r\n\r\n                                {displaySocialInputs &&<div className={classes.urls}>\r\n\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <TwitterIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <FacebookIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <YouTubeIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <LinkedInIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                        <InstagramIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                        <TextField className={classes.textFieldSocial} placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} ></TextField>\r\n                                    </div></div>\r\n\r\n                                }\r\n\r\n\r\n\r\n                                {displayCodingInputs && <div className={classes.urls}>\r\n\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                    <img className={classes.logo} src={g4glogo} alt=\"\"/>\r\n                                        \r\n                                        <TextField className={classes.textFieldCoding} placeholder=\"geeksforgeeks URL\" name=\"geeksforgeeks\" value={geeksforgeeks} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                    <img className={classes.logo} src={leetcodelogo} alt=\"\"/>\r\n                                        <TextField className={classes.textFieldCoding} placeholder=\"leetcode URL\" name=\"leetcode\" value={leetcode} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                    <img className={classes.logo} src={codeforceslogo} alt=\"\"/>\r\n                                        <TextField className={classes.textFieldCoding} placeholder=\"codeforces URL\" name=\"codeforces\" value={codeforces} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                    <img className={classes.logo} src={codecheflogo} alt=\"\"/>\r\n                                        <TextField className={classes.textFieldCoding} placeholder=\"codechef URL\" name=\"codechef\" value={codechef} onChange={e => onChange(e)} ></TextField>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group social-input\">\r\n                                    <img className={classes.logo} src={kagglelogo} alt=\"\"/>\r\n                                        <TextField className={classes.textFieldCoding} placeholder=\"kaggle URL\" name=\"kaggle\" value={kaggle} onChange={e => onChange(e)} ></TextField>\r\n                                    </div></div>\r\n\r\n                                }\r\n\r\n                            </Grid>\r\n                            </Grid>\r\n<Grid  container\r\n  direction=\"row\"\r\n  justify=\"space-evenly\"\r\n  alignItems=\"flex-end\"  className={classes.finalGrid}>\r\n<Grid item><Button variant=\"outlined\" type=\"submit\" className={classes.Bsubmit}>Save</Button>  </Grid>\r\n                            {/* <input type=\"submit\" className=\"btn btn-primary my-1\" /> */}\r\n                            <Grid item> <Button variant=\"outlined\" className={classes.Bdelete} onClick={() => deleteAccount()}>\r\n                                <DeleteForeverIcon />  Delete Account\r\n                        </Button>  </Grid>\r\n                        <Grid item><Link to=\"posts\"> <Button variant=\"outlined\" className={classes.bBack}>\r\n                                Back\r\n                        </Button></Link>  </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                    </Paper>\r\n                </Grid>\r\n            \r\n        </Fragment >\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { deleteAccount, createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","E:\\Apsit-Hub\\client\\src\\components\\posts\\Posts.js",["320","321","322","323"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport Navbar from '../layout/Navbar'\r\nimport { Grid, makeStyles } from '@material-ui/core'\r\n\r\nconst styles = {\r\n    body:{\r\n        backgroundColor:\"#C59D85\",\r\n    },\r\n    containerRoot: {\r\n        marginTop: \"0px\",\r\n        boxShadow:\"0px 0px 2px 2px #2B7A78\",\r\n        boxShadowBottom:\"none\",\r\n\r\n        borderTop: 'none',\r\n        marginLeft: '20%',\r\n        marginRight: '20%',\r\n        marginBottom: '20px',\r\n        borderBottom: 'none',\r\n        backgroundColor:\"#DEF2F1\",\r\n        ['@media (max-width:1000px)']: {\r\n\r\n            margin: '0',\r\n            marginTop:'15px',\r\n            padding: '0',\r\n            marginBottom: '20px'\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            margin: '0',\r\n            marginTop:'45px',\r\n            padding: '0',\r\n            marginBottom: '20px'\r\n        }\r\n\r\n    },\r\n    gridItem: {\r\n        width: '65%',\r\n        \r\n        ['@media (max-width:600px)']: {\r\n            width: '80%',\r\n            margin: '0',\r\n            \r\n\r\n        },\r\n        // border: '1px solid red'\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        getPosts();\r\n\r\n    }, [getPosts]);\r\n\r\n\r\n    return (\r\n\r\n        loading ? <Spinner /> : (\r\n            <Fragment>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    className={classes.containerRoot}\r\n                >\r\n                    \r\n                    <Grid item className={classes.gridItem}>\r\n                        <PostForm />\r\n                    </Grid>\r\n\r\n\r\n                    {posts.map(post => (<Grid item xs className={classes.gridItem}><PostItem key={post._id} post={post} /></Grid>\r\n                    ))}\r\n\r\n\r\n                </Grid>\r\n                \r\n\r\n\r\n            </Fragment>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ post: state.post });\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","E:\\Apsit-Hub\\client\\src\\components\\profile\\Profile.js",["324","325","326","327","328","329","330","331","332","333"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nimport ProfileGithub from './ProfileGithub';\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileLeft from \"./ProfileLeft\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\nimport Alert from \"../layout/Alert\"\r\n\r\n\r\n//Geist UI\r\nimport {Card, Text, Divider,Code} from '@geist-ui/react' \r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from '@material-ui/core'\r\nimport CreateProfile from \"../profile-forms/CreateProfile\";\r\nimport Container from '@material-ui/core/Container'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white',\r\n\t\tbackgroundColor:\"#17252A\"\r\n    },\r\n    containerRoot: {\r\n        marginTop:\"80px\",\r\n\t\t\t\twidth:'90vw',\r\n\t\t\t\tdisplay:'flex',\r\n    },\r\n\t\r\n\r\n}));\r\n\r\nfunction Profile({ match, getProfileById, profile: { profile,user, loading }, auth }) {\r\n\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfileById(match.params.id)\r\n\t}, [getProfileById])\r\n\r\n\r\nconst _id = 0;\r\nconst user_id =0;\r\nconsole.log(auth)\r\n\r\n\tconsole.log(_id)\r\n\r\n\treturn (\r\n\t\t\r\n\t\t\t<Fragment>\r\n\t\t\t\t\r\n\t\t\t\t{ ( profile===null)  ? <CreateProfile/> :\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t{ profile === null || loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{/* <div className={classes.root}> */}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Grid container \r\n\t\t\t\t\t\t\t\tdirection=\"row\"\r\n  \t\t\t\t\t\t\t  justify=\"space-between\"\r\n\t\t\t\t\t\t\t\t\talignContent=\"center\"\r\n\t\t\t\t\t\t\t\t  className={classes.containerRoot}>\r\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={5}>\r\n\t\t\t\t\t\t\t\t\t<ProfileLeft  profile ={profile}/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid style={{backgroundColor:'#'}} item xs={12} md={6}>\r\n\t\t\t\t\t\t\t\t\t<ProfileGithub username={profile.githubusername}/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</Fragment>\r\n}\r\n\t\t\t</Fragment>\r\n\t\t\r\n\t)\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","E:\\Apsit-Hub\\client\\src\\components\\profile-forms\\AddExperience.js",[],"E:\\Apsit-Hub\\client\\src\\components\\profile-forms\\CreateProfile.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"\r\n//ui imports\r\nimport {Avatar,Button,CssBaseline,Box,Grid,Paper,FormControl,TextField,MenuItem,InputLabel,makeStyles,Select} from '@material-ui/core'\r\n\r\n\r\n\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport g4glogo from '../../img/gfgicon.png'\r\nimport leetcodelogo from '../../img/leetcode-logo.png'\r\nimport codeforceslogo from '../../img/codeforces-logo.jpg'\r\nimport codecheflogo from '../../img/codechef-logo.png'\r\nimport kagglelogo from '../../img/kaggle.png'\r\n\r\n\r\n//normal \r\nimport React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport {  MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            gender:'',\r\n            company: '',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: '',\r\n            kaggle: '',\r\n            codeforces: '',\r\n            codechef: '',\r\n            geeksforgeeks: '',\r\n            leetcode: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n    const [displayCodingInputs, toggleCodingInputs] = useState(false);\r\n    const {\r\n        gender,\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram,\r\n        kaggle,\r\n        codeforces,\r\n        codechef,\r\n        geeksforgeeks,\r\n        leetcode\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  \r\n  const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    }\r\n\r\n\r\n    const editFont = createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n            main:\"#fff\",\r\n          }},\r\n        typography: {\r\n          fontFamily: [\r\n            'Share Tech', 'san-serif',\r\n          ].join(','),\r\n          \r\n          Fontcolor:\"#F1304D\"\r\n      }});\r\n\r\n      const useStyles = makeStyles((theme) => ({\r\n    \r\n        containerRoot: {\r\n            margin: '100px',\r\n            ['@media (max-width:600px)']: {\r\n                margin:10,\r\n                marginRight:20,\r\n                width:\"400px\",\r\n                backgroundColor:\"# \",\r\n\r\n                    }\r\n            \r\n        },\r\n        form: {\r\n            marginLeft:\"15%\",\r\n            marginRight:\"15%\",\r\n            width: '100%', \r\n            ['@media (max-width:600px)']: {\r\n            }\r\n    \r\n        },\r\n\r\n        formPaper: {\r\n           margin:\"5%\",\r\n            height: \"100%\",\r\n            padding: '2%',\r\n            width: '60%',\r\n            marginBottom: '20%',\r\n            marginLeft:0,\r\n            ['@media (max-width:600px)']: {\r\n                margin:0,\r\n                width:\"100%\",\r\n                padding:'2%',\r\n                marginBottom: '20%',\r\n            },\r\n            ['@media (max-width:1024px)']: {\r\n                margin:0,\r\n                width:\"94%\"\r\n            }\r\n    \r\n        },\r\n        textField: {\r\n            width: '70%',\r\n            margin: \"5px\",\r\n            height: \"5vh\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"200px\",\r\n                marginBottom: \"15px\",\r\n\r\n            }\r\n    \r\n        },\r\n        textFieldSelect:{\r\n            width: '70%',\r\n            margin: \"5px\",\r\n            height: \"5vh\",\r\n            marginBottom:\"15px\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"200px\"\r\n            },\r\n            ['@media (max-width:1024)']: {\r\n            \r\n            }\r\n    \r\n        },\r\n        formGrid1: {\r\n            margin: \"0%\",\r\n            // marginLeft:\"-20%\",\r\n            ['@media (max-width:600px)']: {\r\n           \r\n            },\r\n            ['@media (max-width:1024)']: {\r\n            \r\n            }\r\n    \r\n       },\r\n        formGrid2: {\r\n            marginLeft: \"-4%\",\r\n            marginTop: \"70px\",\r\n            width: \"80%\",\r\n            ['@media (max-width:600px)']: {\r\n            \r\n            },\r\n            ['@media (max-width:1024)']: {\r\n           \r\n            }\r\n    \r\n        },\r\n        buttonToggle: {\r\n            marginTop: \"10px\",\r\n            // marginLeft: '20%',\r\n            color: 'black',\r\n            border: '1px solid ',\r\n            width: '100%',\r\n            ['@media (max-width:600px)']: {\r\n            \r\n            },\r\n            ['@media (max-width:1024)']: {\r\n            \r\n            }\r\n    \r\n\r\n        },\r\n        Bsubmit: {\r\n            marginLeft: \"2%\",\r\n           \r\nbackgroundColor:\"#2B7A78\",\r\n\r\n            marginRight: \"7%\",\r\n            color: \"white\",\r\n            width:\"100%\",\r\n            '&:hover':{\r\n                backgroundColor: \"green\",\r\n            },\r\n        },\r\n        Bback: {\r\n            // marginRight: \"7%\",\r\n            color: \"black\",\r\n            width: \"100%\"\r\n        },\r\n        Bdelete: {\r\n            backgroundColor: \"red\",\r\n            color: \"white\"\r\n        },\r\n        finalGrid:{\r\n            marginLeft:\"-12%\",\r\n            margin:\"5%\"\r\n        },\r\n        urls: {\r\n            marginLeft:\"10%\",\r\n            marginTop:\"5%\",\r\n        \r\n            ['@media (max-width:600px)']: {\r\n            width:\"250px\",\r\n            marginLeft:\"0\"\r\n            },\r\n\r\n        },\r\n        logo:{\r\n            maxWidth:'23px',\r\n            marginRight:'20px',\r\n            textDecoration:'none',\r\n            color:'black'\r\n          },\r\n          Icons:{\r\n            marginRight:'20px',\r\n          },\r\n\r\n        textFieldSocial: {\r\n            width: '26vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"180px\"\r\n                },\r\n        },\r\n\r\n        textFieldCoding: {\r\n            width: '26vw',\r\n            margin: \"0px\",\r\n            height: \"5vh\",\r\n            ['@media (max-width:600px)']: {\r\n                width:\"180px\"\r\n                },\r\n        },\r\n        \r\n\r\n        Icons: {\r\n            marginRight:'20px',\r\n        },\r\n       heading:{\r\n           fontSize:\"25px\",\r\n        ['@media (max-width:600px)']: {\r\n            margin:\"10px\",\r\n            marginTop:0,\r\n            justifyText:\"center\"\r\n        },\r\n    },\r\n        heading1:{\r\n            variant:\"h1\",\r\n         ['@media (max-width:600px)']: {\r\n            \r\n         },\r\n       },\r\n        // lead:{\r\n        //     fontSize: \"18px\",\r\n        //     dispay:'block'\r\n        // }\r\nformText:{\r\n    marginTop:\"10px\",\r\n    ['@media (max-width:600px)']: {\r\n          fontSize:\"10px\",\r\n          margin:\"10px\"\r\n    },\r\n    \r\n    },\r\n    formBox:{\r\n        marginTop:\"20px\",\r\n        ['@media (max-width:600px)']: {\r\n            maxWidth:\"200px\"  \r\n      },\r\n      gender:{\r\n        marginTop:\"20px\",\r\n        width:\"71%\",\r\n        ['@media (max-width:600px)']: {\r\n            width:\"500px\"  \r\n      },\r\n      }\r\n}\r\n\r\n\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const statuses = [\r\n        {\r\n            value: 'First Year',\r\n            label: 'First Year',\r\n        },\r\n        {\r\n            value: 'Second Year',\r\n            label: 'Second Year',\r\n        },\r\n        {\r\n            value: 'Third Year',\r\n            label: 'Third Year',\r\n        },\r\n        {\r\n            value: 'Fouth Year',\r\n            label: 'Fouth Year',\r\n        },\r\n    ];\r\n    const genderOpt =[\r\n        {\r\n            value: 'Male',\r\n            label: 'Male',\r\n        },\r\n        {\r\n            value: 'Female',\r\n            label: 'Female',\r\n        },\r\n    ]\r\n\r\n\r\n    return (\r\n    \r\n        <MuiThemeProvider theme={editFont}>\r\n            <Fragment>\r\n                <Grid container  direction=\"column\" justify=\"space-between\"  alignItems=\"center\" style={{backgroundColor:\"#75C7C3\"}} className={classes.containerRoot}>\r\n                    <Grid item className={classes.heading}> \r\n                    <Typography><h1 className={classes.heading1} variant=\"h4\" align=\"center\"> Create Your Profile</h1></Typography>\r\n                       \r\n      \r\n                       <Typography> \r\n                                Let's get some information to make your profile stand out\r\n                        </Typography></Grid>\r\n                        <Paper className={classes.formPaper}>\r\n                        <form className={classes.form} onSubmit={e => onSubmit(e)}>\r\n                        <Grid\r\n  container\r\n  direction=\"column\"\r\n  justify=\"space-evenly\"\r\n  alignItems=\"stretch\"\r\n>\r\n                    \r\n                                <Grid item className={classes.formGrid1} >\r\n\r\n\r\n\r\n                                <Box direction=\"column\" className={classes.formBox} elevation={3}><FormControl style={{width:\"71%\", ['@media (max-width:600px)']: {\r\n                                    width:\"600px\",\r\n            width:\"500px\"  \r\n      },}} >\r\n                                <InputLabel   shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                                    Gender\r\n                                </InputLabel>\r\n\r\n                                <Select\r\n            labelId=\"demo-simple-select-placeholder-label-label\"\r\n            id=\"demo-simple-select-placeholder-label\"\r\n          value={gender}\r\n          onChange={e => onChange(e)}\r\n          displayEmpty\r\n          name=\"gender\"\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem name=\"gender\" value={gender}>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value='male'>Male</MenuItem>\r\n          <MenuItem value='female'>Female</MenuItem>\r\n          <MenuItem value='others'>Others</MenuItem>\r\n\r\n         \r\n        </Select>\r\n       \r\n        \r\n      </FormControl>\r\n</Box>\r\n\r\n\r\n\r\n\r\n      <Box direction=\"column\" className={classes.formBox} elevation={3}>\r\n                                    <TextField className={classes.textField} style={{marginTop:\"20px\"}}\r\n                                        id=\"status\"\r\n                                        select\r\n                                        name=\"status\"\r\n                                        // helperText='Currently in..'\r\n                                        value={status}\r\n                                        label = \"Currently in...\"\r\n                                        onChange={e => onChange(e)}\r\n\r\n                                    >\r\n                                        {statuses.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.value}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                    <Typography className={classes.formText}\r\n                                    >You're current Graduation Year</Typography></Box>\r\n\r\n                                    <Box direction=\"column\" className={classes.formBox} elevation={3}>\r\n                                        <TextField className={classes.textField} label='Company' placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}>\r\n                                        </TextField>\r\n                                        <Typography className={classes.formText}\r\n                                    >Company you're intern at</Typography>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='Website' placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} ></TextField>\r\n                                        <Typography className={classes.formText}>Could be your own or a company website</Typography>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='city' type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} ></TextField>\r\n                                        <Typography className={classes.formText}\r\n                                    >City & state suggested</Typography\r\n                                    >\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='Skills' placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} ></TextField>\r\n                                        <Typography className={classes.formText}\r\n                                    >Please use comma separated values</Typography>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label='Github Username' placeholder=\"Github Username\"\r\n\r\n                                            placeholder=\"Github Username\"\r\n                                            name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} ></TextField>\r\n\r\n<Typography className={classes.formText}>To display GIthub Repos</Typography>\r\n                                    </Box>\r\n                                    <Box className={classes.formBox}>\r\n                                        <TextField className={classes.textField} label=\"Multiline\"\r\n                                            multiline variant=\"outlined\"\r\n                                            rows={4} label=\"Bio\" placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></TextField>\r\n\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item className={classes.formGrid2}>\r\n                                <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\r\n                                <Grid item>\r\n                                        <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleSocialInputs(!displaySocialInputs)} size=\"small\" className={classes.buttonToggle}>\r\n                                            <LanguageSharpIcon />Add Social Network Links\r\n          </Button></Grid>\r\n\r\n          <Grid item> <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleCodingInputs(!displayCodingInputs)} size=\"small\" className={classes.buttonToggle}>\r\n                                            <LanguageSharpIcon />Add Coding Profile Links\r\n          </Button></Grid>\r\n\r\n                                        \r\n                                    </Grid>\r\n\r\n                                    {displaySocialInputs && <div className={classes.urls}>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <TwitterIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <FacebookIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <YouTubeIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <LinkedInIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                            <InstagramIcon fontSize=\"medium\" className={classes.Icons} />\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} ></TextField>\r\n                                        </div></div>\r\n\r\n                                    }\r\n\r\n                                    {displayCodingInputs && <div className={classes.urls}>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                        <img className={classes.logo} src={g4glogo} alt=\"\"/>\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"geeksforgeeks URL\" name=\"geeksforgeeks\" value={geeksforgeeks} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                        <img className={classes.logo} src={leetcodelogo} alt=\"\"/>\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"leetcode URL\" name=\"leetcode\" value={leetcode} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                        <img className={classes.logo} src={codeforceslogo} alt=\"\"/>\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"codeforces URL\" name=\"codeforces\" value={codeforces} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                        <img className={classes.logo} src={codecheflogo} alt=\"\"/>\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"codechef URL\" name=\"codechef\" value={codechef} onChange={e => onChange(e)} ></TextField>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group social-input\">\r\n                                        <img className={classes.logo} src={kagglelogo} alt=\"\"/>\r\n                                            <TextField className={classes.textFieldSocial} placeholder=\"kaggle URL\" name=\"kaggle\" value={kaggle} onChange={e => onChange(e)} ></TextField>\r\n                                        </div></div>\r\n\r\n                                    }\r\n\r\n                                </Grid>\r\n</Grid>\r\n<Grid  container direction=\"row\"\r\n  justify=\"space-evenly\"\r\n  alignItems=\"flex-end\"  className={classes.finalGrid}>\r\n\r\n                            {/* <input type=\"submit\" className=\"btn btn-primary my-1\" /> */}\r\n                            \r\n                           \r\n\r\n\r\n                                <Button onSubmit={e =>onSubmit(e)}variant=\"outlined\" type=\"submit\" className={classes.Bsubmit}>Let's Go!</Button>\r\n                               \r\n                                \r\n\r\n\r\n                        </Grid>\r\n                                </form>\r\n\r\n                            </Paper>\r\n                    </Grid>\r\n                \r\n            </Fragment >\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","E:\\Apsit-Hub\\client\\src\\components\\profiles\\Profiles.js",["365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"\r\n//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport Alert from '../layout/Alert';\r\n\r\n//Geist\r\nimport {AutoComplete} from '@geist-ui/react'\r\n\r\n//normal \r\nimport React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport SearchBar from './searchbar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white',\r\n        backgroundColor: \"grey\"\r\n    },\r\n    container: {\r\n        marginTop: \"80px\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        \r\n    },\r\n    paper: {\r\n        width: '90%',\r\n        height: '30%'\r\n    },\r\n    gridProfile: {\r\n        width: '90 %',\r\n        height: '20%',\r\n\r\n        padding: \"20px\",\r\n        \r\n        padding: \"20px\"\r\n    },\r\n    TextGrid: {\r\n        padding:\"50px\"\r\n    },\r\n    searchBar:{\r\n        color: \"white\",\r\n        width:\"50%\",\r\n    }\r\n\r\n\r\n}));\r\n\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n    const classes = useStyles();\r\n   \r\n  \r\n\r\n    return <Fragment >\r\n        \r\n        {loading ? <Spinner /> :\r\n                    <Grid container className={classes.container}>\r\n                      \r\n                        \r\n<SearchBar/>\r\n                    <Grid container className={classes.gridProfile} direction=\"row\" justify=\"flex-start\">\r\n                        {profiles.length > 0 ? (\r\n                            profiles.map(profile => (<ProfileItem key={profile._id} profile={profile} />))\r\n                        ) : <h4>No profiles found...</h4>}\r\n                    </Grid>\r\n                    </Grid>\r\n\r\n              \r\n           \r\n\r\n        }\r\n    </Fragment >\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","E:\\Apsit-Hub\\client\\src\\actions\\alert.js",[],"E:\\Apsit-Hub\\client\\src\\actions\\profile.js",["387","388","389","390","391","392","393"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n} from './types';\r\n\r\n//Get current user profile\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        if(err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        else{\r\n            {dispatch({\r\n                type: PROFILE_ERROR,\r\n                \r\n               \r\n              })\r\n          }\r\n        }\r\n    }\r\n};\r\n\r\n//get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        if(err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        else{\r\n            {dispatch({\r\n                type: PROFILE_ERROR,\r\n                \r\n               \r\n              })\r\n          }\r\n        }\r\n    }\r\n};\r\n\r\n//Get  profile by id\r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        if(err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        else{\r\n            {dispatch({\r\n                type: PROFILE_ERROR,\r\n                \r\n               \r\n              })\r\n          }\r\n        }\r\n    }\r\n};\r\n\r\n//Get  profile by search\r\n// export const getProfileBySearch = (name) => async dispatch => {\r\n//     dispatch({ type: CLEAR_PROFILE });\r\n//     try {\r\n//         const res = await axios.get(`/api/profile/search?name=${name}`);\r\n//         console.log(res.data);\r\n//         dispatch({\r\n\r\n//             type: GET_PROFILES,\r\n//             payload: res.data\r\n//         })\r\n//     } catch (err) {\r\n//         dispatch({\r\n//             type: PROFILE_ERROR,\r\n//             payload: { msg: err.response.statusText, status: err.response.status }\r\n//         });\r\n//     }\r\n// };\r\n\r\n// Get github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        if(err.response)\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        else{\r\n            {dispatch({\r\n                type: PROFILE_ERROR,\r\n                \r\n               \r\n              })\r\n          }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n//creat/update a profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/posts');\r\n        }\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        \r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        }\r\n        else{\r\n            {dispatch({\r\n                type: PROFILE_ERROR,\r\n                \r\n               \r\n              })\r\n          }\r\n        }\r\n    }\r\n};\r\n\r\n// //search profiles\r\nexport const searcher = (name) => async dispatch =>{\r\n    dispatch({type: CLEAR_PROFILE});\r\n    try {console.log(name);\r\n        const res = await axios.get(`/api/profile/search?name=${name}`);\r\n        console.log('from actions/profile.js the data is')\r\n        console.log(res)\r\n      \r\n        dispatch({\r\n        type:GET_PROFILES,\r\n        payload: res.data,\r\n        \r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n        if(error.response)\r\n        {\r\n            dispatch({\r\n        type: PROFILE_ERROR,\r\n        \r\n        payload: { \r\n            msg: error.response.statusText,\r\n             status: error.response.status }\r\n      });}\r\n\r\n      else{\r\n        {dispatch({\r\n            type: PROFILE_ERROR,\r\n            \r\n           \r\n          })\r\n      }\r\n      \r\n    \r\n  }\r\n    }\r\n}\r\n\r\n//delete account\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n            dispatch({ type: CLEAR_PROFILE });\r\n\r\n            dispatch({ type: ACCOUNT_DELETED });\r\n            dispatch(setAlert('Your account has been deleted'));\r\n\r\n        } catch (err) {\r\n            dispatch({ type: PROFILE_ERROR, payload: { msg: err.response.statusText, status: err.response.status } });\r\n        }\r\n    }\r\n};","E:\\Apsit-Hub\\client\\src\\actions\\types.js",[],"E:\\Apsit-Hub\\client\\src\\components\\layout\\Spinner.js",["394"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","E:\\Apsit-Hub\\client\\src\\components\\dashboard\\DashboardActions.js",[],"E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileRight.js",[],["395","396"],"E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileGithub.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"import React, { useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport './github.css';\r\n\r\n//Geist UI\r\n// import {Card,Divider} from '@geist-ui/react'\r\nimport {Card,Text, Divider,Button,Avatar,Fieldset,Badge,Tooltip } from '@geist-ui/react' \r\nimport { Globe,Smile,Code,Facebook,Twitter,Linkedin,Instagram,Youtube,MessageCircle   } from '@geist-ui/react-icons'\r\nimport useMediaQuery from \"@geist-ui/react/dist/use-media-query\"\r\n\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from '@material-ui/core'\r\nimport {  MuiThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n// import Card from '@material-ui/core/Card'\r\n\r\n\r\n\r\n\r\n\r\nconst light = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main:\"#fff\",\r\n      }},\r\n    typography: {\r\n      fontFamily: [\r\n        'Share Tech', 'san-serif',\r\n      ].join(','),\r\n      fontSize:\"1px\",\r\n      Fontcolor:\"white\"\r\n  }});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white',\r\n        marginTop:'2em'\r\n    },\r\n    containerRoot: {\r\n        marginTop:'10em',\r\n\t\t\t\twidth:'90vw'\r\n\r\n    },\r\n    gitcard:{\r\n        marginTop:'2rem',\r\n        wordWrap:'break-word',\r\n        border: '1px solid #17242A',\r\n        ['@media (max-width:600px)']:{\r\n           \r\n            \r\n        }\r\n    },\r\n    list:{\r\n        marginTop:'10px',\r\n        width:'90%',\r\n        listStyle:'none',\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        alignContent:'center'\r\n    },\r\n    cardcontainer:{\r\n        marginTop:'1rem',\r\n        display:'flex',\r\n\r\n        flexDirection:'column',\r\n        width:'100%',\r\n        height:'69vh',\r\n        overflowY:'scroll',\r\n        overflowX:'hidden',\r\n        // border:\"5px solid #F1304D\",\r\n\r\n        alignItems:'center',\r\n        ['@media (max-width:600px)']:{\r\n            display:'inline-block',\r\n        }\r\n    },\r\n    h4repo:{\r\n        paddingBottom:'20px'\r\n    },\r\n    cardFooter:{\r\n        minHeight:'10px'\r\n    },\r\n    cardmain:{\r\n        width:\"100%\",\r\n        display:'flex',\r\n        backgroundColor:\"#2B7A78\",\r\n        justifyContent:'space-between',\r\n         flexDirection:'column',\r\n         borderRadius:\"5px\",\r\n         ['@media (max-width:1000px)']: {\r\n           \r\n                },\r\n\r\n                ['@media (max-width:600px)']: {\r\n                   \r\n            // overflow:\"hidden\"\r\n                }\r\n    },\r\n    card:{\r\n        ['@media (max-width:600px)']: {\r\n            backgroundColor:\"#17252a\",\r\n            width:'50px'\r\n     // overflow:\"hidden\"\r\n         }\r\n    },\r\n    gitmain:{\r\n        backgroundColor:\"#17252a\",\r\n        marginBottom:\"50px\",\r\n        ['@media (max-width:600px)']:{\r\n            marginTop:'50px',\r\n        }\r\n    },\r\n    cardrepo:{\r\n        width:\"500px\",\r\n        ['@media (max-width:600px)']:{\r\n            \r\n            width:\"400px\"\r\n        }\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    \tconst classes = useStyles();\r\n    useEffect(() => {\r\n        console.log(username);\r\n        getGithubRepos(username);\r\n    },\r\n        [getGithubRepos]\r\n\r\n    );\r\n \r\n\r\n\r\n    return (\r\n        <MuiThemeProvider theme={light}>\r\n            <Typography>\r\n        <Grid container sm={12} className={classes.gitmain}>\r\n            <Card style={{border: '1px solid #000'}} className={classes.card}>\r\n                <Card.Content className={classes.cardmain} >\r\n                <div className={classes.h4repo}>\r\n                    <span><Text size={20} style={{color: '#17242A'}} b>Github Repositories</Text></span>\r\n                </div>\r\n                \r\n                <Divider y={0} />\r\n\r\n            <div className={classes.cardcontainer} >\r\n                \r\n            \r\n            {\r\n                repos === null ? <Spinner /> : (\r\n                    repos.map(repo => (\r\n                        <Grid xs={4} md = {12} item key={repo.id} className={classes.gitcard}>\r\n                        <Card  width=\"500px\">\r\n    <h4>{repo.name}</h4>\r\n    {repo.description?<p>{repo.description}</p>:<p>No description</p> }\r\n    \r\n\r\n    <Card.Footer style={{minHeight:'10px'}} className={classes.cardFooter}>\r\n        <ul className={classes.list}>\r\n\t\t\t\t\t\t\t\t<li >\r\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-star-o\" aria-hidden=\"true\"></i>{\" \"}\r\n\t\t\t\t\t\t\t\t\t{repo.stargazers_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li >\r\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye\" aria-hidden=\"true\"></i>{\" \"}\r\n\t\t\t\t\t\t\t\t\t{repo.watchers_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li >\r\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i>{\" \"}\r\n\t\t\t\t\t\t\t\t\t{repo.forks_count}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n    </Card.Footer>\r\n    </Card>\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    </Grid>\r\n\r\n                        )\r\n                    )\r\n\r\n                )}\r\n                </div> \r\n                </Card.Content>\r\n                </Card>\r\n                </Grid>\r\n        </Typography>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({ repos: state.profile.repos });\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileAbout.js",[],"E:\\Apsit-Hub\\client\\src\\components\\posts\\PostForm.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435"],"import React, { useState,useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\nimport \"../../styles/PostForm.css\"\r\n\r\n//Rich text editor\r\nimport MUIRichTextEditor from 'mui-rte'\r\nimport { convertFromRaw, convertToRaw } from 'draft-js'\r\nimport { EditorState, ContentState } from 'draft-js';\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n\r\nimport {Card, Button,Icon,TextField,FormControl, Typography} from '@material-ui/core'\r\n\r\n\r\n// import { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles,MuiThemeProvider,createMuiTheme } from '@material-ui/core/styles';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { setAlert } from '../../actions/alert';\r\n\r\nconst formFont = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main:\"#fff\",\r\n      }},\r\n    typography: {\r\n      fontFamily: [\r\n        'Share Tech', 'san-serif',\r\n      ].join(','),\r\n      fontSize:\"1px\",\r\n      Fontcolor:\"#F1304D\"\r\n  }});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    divClass:{\r\n    width:\"98%\",\r\n    backgroundColor:'white',\r\n    padding:'5px',\r\n    marginBottom: '20px',\r\n    marginTop:'50px',\r\n    boxShadow:' 3px 3px 5px 6px #ccc'\r\n    \r\n    },\r\n    text:{\r\n    width:'37vw',\r\n    ['@media (max-width:1000px)']: {\r\n\r\n        width:'62vw',\r\n    },\r\n    ['@media (max-width:600px)']: {\r\n        width:'74vw',\r\n    },\r\n\r\n},\r\nbuttonSend: {\r\nwidth:'20vw',\r\ncolor:'#FEFFFF',\r\nmarginLeft:\"17vw\",\r\nmargin:'5px',\r\nbackgroundColor:\"#17252A\",\r\n['@media (max-width:1000px)']: {\r\n\r\n    marginLeft:\"42vw\",\r\n},\r\n['@media (max-width:600px)']: {\r\n    marginLeft:\"53vw\",\r\n},\r\n\r\n},\r\n\r\n\r\n\r\n}));\r\n  \r\nconst defaultTheme = createMuiTheme()\r\n  Object.assign(defaultTheme, {\r\n    overrides: {\r\n        MUIRichTextEditor: {\r\n            root: {\r\n                marginTop: '0',\r\n                width: \"100%\",\r\n                display:'flex',\r\n                border:\"5px double #17252A\",\r\n                \r\n\r\n            },\r\n            editor: {\r\n                padding:\"40px\",\r\n                backgroundColor:'#DEF2F1',\r\n                \r\n            \r\n            },\r\n            toolbar:{\r\n\r\n            marginTop:'-10px',\r\n            borderBottom:'5px double #17252A',\r\n            \r\n            },\r\n\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const classes = useStyles();\r\n    const [text, setText] = useState(\"\");\r\n    useEffect(() => {\r\n    }, [text])\r\n\r\n    const [editorState, setEditorState] = useState()\r\n\r\n\r\n    return (\r\n            <div className={classes.divClass} >\r\n                <FormControl  className={classes.text}>\r\n                <MuiThemeProvider theme={formFont}><h3  style={{margin:\"5%\",}} > Create a post!</h3></MuiThemeProvider>\r\n\r\n                    <MuiThemeProvider theme={defaultTheme}>\r\n                        <Divider/>\r\n                    <MUIRichTextEditor \r\n                    label=\"Type your requirements here...\"\r\n                    \r\n                    text={text}\r\n                    onChange={(editorState)=>{\r\n                        let contentState = editorState.getCurrentContent();\r\n                        \r\n                        setText(JSON.stringify(convertToRaw(contentState)))\r\n\r\n                    }}\r\n                    \r\n\t\t\t\t            required\r\n                            className={classes.rte}\r\n                    />\r\n                        <Divider/>\r\n\r\n                    </MuiThemeProvider>\r\n                \r\n                </FormControl>\r\n                <Button\r\n                    className={classes.buttonSend}\r\n                    onClick={e => {\r\n                        e.preventDefault();\r\n                        if(text==null||text==\"\"){\r\n                            setAlert('Please enter something!')\r\n                        }\r\n                        else\r\n                        addPost({ text });\r\n                        setText(\"\");       \r\n                        \r\n                    }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    disabled={text=== ''}\r\n\r\n                    >Post!</Button>\r\n            </div>\r\n            \r\n\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm)\r\n","E:\\Apsit-Hub\\client\\src\\components\\posts\\PostItem.js",["436","437","438","439","440","441","442","443","444","445"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post'\r\nimport {Divider, CardContent, CardHeader,Avatar, makeStyles,Grid, CardActions, IconButton, Icon} from '@material-ui/core'\r\nimport {Fieldset,Badge,Button,Spacer} from '@geist-ui/react'\r\nimport {ThumbsUp , ThumbsDown,MessageSquare,XSquare   } from '@geist-ui/react-icons'\r\n\r\n\r\nimport { convertFromRaw } from 'draft-js'\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\n\r\nconst styles ={\r\n    Card:{\r\n        color:'black',\r\n        marginBottom:'1em',\r\n        width:'100%',\r\n        boxShadow:' 3px 3px 5px 5px #ccc',\r\n        backgroundColor:\"#3AAFA9\",color:\"#17252A\",border:'0.5px dashed  #17252A',\r\n        \r\n    },\r\n    separate:{\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n        alignItems:'center'\r\n    },\r\n    nameanddate:{\r\n        marginLeft:'20px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        marginBottom:'0'\r\n\r\n    },\r\n    Date:{\r\n        fontSize:'13px'\r\n    },\r\n    colorcorrect:{\r\n        color:'black',\r\n        backgroundColor:'#3AAFA9'\r\n    },\r\n        fieldset:{\r\n        \r\n    },\r\n    btnclass:{\r\n        marginRight:'5px'\r\n    },\r\n    likesnum:{\r\n        padding:'3.5px',\r\n        fontSize:'18px',\r\n        border:'2px solid #2B7A78',\r\n        borderRadius:'4px',\r\n        marginRight:'5px',\r\n        paddingRight:'9px',\r\n        paddingLeft:'9px',\r\n        backgroundColor:'white'\r\n        \r\n    },\r\n}\r\nconst useStyles = makeStyles(styles)\r\nconst PostItem = ({ addLike, deletePost, removeLike, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) =>{\r\n    const classes = useStyles()\r\n\r\n\r\n    let styled_text = stateToHTML((convertFromRaw(JSON.parse(text))))\r\n    console.log(_id)\r\n\r\n\r\nreturn(\r\n    <Fragment >\r\n        {showActions&&\r\n            \r\n            <Fieldset className={classes.Card}   \r\n            >\r\n                \r\n                <div className={classes.separate}>\r\n                    <Avatar src={avatar} size=\"medium\" />\r\n\r\n                <div className={classes.nameanddate}>\r\n                <h4 style={{marginBottom:'0'}}>{name}</h4>\r\n                <span><Moment className={classes.Date} format='YYYY/MM/DD'>{date}</Moment></span>\r\n                </div>\r\n                </div>\r\n                \r\n                <Fieldset.Subtitle style={{fontSize:'17px'}}>\r\n                <div className=\"content\" dangerouslySetInnerHTML={{__html:styled_text}}></div>\r\n                </Fieldset.Subtitle>\r\n                \r\n                <Fieldset.Footer style={{backgroundColor:\"#17242A\",color:\"#17252A\",border:'0.5px dashed  #17252A',marginTop:'-20px',border:\"2px solid #17242A\"}} >\r\n                    <Fieldset.Footer.Actions>\r\n                        <span >{likes.length > 0 && <div className={classes.likesnum}>{likes.length}</div> } </span>\r\n                        <Button className={classes.btnclass} iconRight={<ThumbsUp/>} onClick={() => addLike(_id)} type=\"success\" ghost auto size=\"small\" >\r\n                        </Button>\r\n\r\n                        <Button className={classes.btnclass} iconRight={<ThumbsDown/>} onClick={() => removeLike(_id)} type=\"secondary\" ghost auto size=\"small\" >\r\n                        </Button>\r\n\r\n                        <Link className={classes.btnclass}  to={`/posts/${_id}`}>\r\n                        <Button iconRight={<MessageSquare/>} type=\"secondary\" ghost auto size=\"small\" >\r\n                        </Button>\r\n                    </Link>\r\n\r\n\r\n                    \r\n                    {!auth.loading && user === auth.user._id && (\r\n\t\t\t\t    <Button iconRight={<XSquare/>} onClick={() => deletePost(_id)} type=\"error\" ghost auto size=\"small\"/>\r\n\t\t\t)}\r\n                    </Fieldset.Footer.Actions>\r\n                </Fieldset.Footer>\r\n                <Divider y={0} />\r\n            </Fieldset>\r\n            \r\n        }\r\n    \r\n    </Fragment>\r\n\r\n)\r\n}\r\n\r\nPostItem.defaultProps = { showActions: true };\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    delete: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { deletePost, addLike, removeLike })(PostItem)\r\n","E:\\Apsit-Hub\\client\\src\\actions\\post.js",["446","447"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { ADD_COMMENT, REMOVE_COMMENT, GET_POST, GET_POSTS, ADD_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST } from './types';\r\n\r\n//Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.get('/api/posts');\r\n\r\n        console.log(res)\r\n        dispatch({ type: GET_POSTS, payload: res.data });\r\n    } catch (err) {\r\n        console.log(err)\r\n        if(err.response)\r\n        { dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });}\r\n        else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n//Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        if(err.response)\r\n       { dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });}\r\n        else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        if(err.response)\r\n       { dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });}\r\n        else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n//Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: DELETE_POST, payload: id });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n\r\n    } catch (err) {\r\n        if(err.response)\r\n       { dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });}\r\n        else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//add post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n        dispatch({ type: ADD_POST, payload: res.data });\r\n\r\n        dispatch(setAlert('Post created', 'success'));\r\n\r\n    } catch (err) {\r\n        if(err.response)\r\n       { dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });}\r\n        else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Get Post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: GET_POST, payload: res.data });\r\n    } catch (err) {\r\n        if(err.response)\r\n       { dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });}\r\n        else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n//add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({ type: ADD_COMMENT, payload: res.data });\r\n\r\n        dispatch(setAlert('comment added', 'success'));\r\n\r\n    } catch (err) {\r\n        if(err.response)\r\n        { dispatch({\r\n             type: POST_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n         });}\r\n         else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};\r\n\r\n//delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n\r\n    try {\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n\r\n        dispatch(setAlert('comment removed', 'success'));\r\n\r\n    } catch (err) {\r\n        if(err.response)\r\n        { dispatch({\r\n             type: POST_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n         });}\r\n         else { dispatch({ type:POST_ERROR})}\r\n    }\r\n\r\n\r\n};","E:\\Apsit-Hub\\client\\src\\components\\profiles\\ProfileItem.js",["448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"\r\n//ui imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\n\r\n//normal \r\nimport React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//Geist\r\nimport {Fieldset,Badge} from '@geist-ui/react'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white',\r\n        backgroundColor: \"grey\"\r\n    },\r\n    paper: {\r\n        width: '20%',\r\n        height: '20%',\r\n        margin: \"50px\",\r\n        padding: \"20px\"\r\n    },\r\n    gridImage: {\r\n\r\n        backgroundColor: \"green\",\r\n        width: \"20%\"\r\n    },\r\n    img: {\r\n        height: \"70%\",\r\n        width: \"70%\",\r\n        borderRadius: \"50%\"\r\n    },\r\n    profileCard:{\r\n        padding:'1em',\r\n        \r\n       \r\n    },\r\n    fieldset:{\r\n        color:'black',\r\n        border:\"1px solid pink\"\r\n    },\r\n    NameAndAvatar:{\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n    },\r\n    StatusAndSkills:{\r\n        display:'flex',flexDirection:'column',\r\n        fontWeight:'900'\r\n    },\r\n    links:{\r\n       color:'black',\r\n       fontWeight:'900' \r\n    }\r\n\r\n\r\n}));\r\n\r\nconst Profileitem = ({\r\n    profile: {\r\n        \r\n        avatar,\r\n        status,\r\n        user,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n}) => {\r\n\r\n    console.log(user)\r\n    const name = user.name;\r\n    const _id = user._id\r\n    const classes = useStyles();\r\n    var array = skills.toString().split(/[\\s,]+/);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Grid item sm={6} lg={3} xs={12}  className ={classes.profileCard}>\r\n            <Fieldset hoverable='true' style={{color:\"black\"}}>\r\n                <div className={classes.NameAndAvatar}>\r\n                    <Avatar src={avatar} size=\"medium\" />\r\n                <Fieldset.Title style={{padding:'15px',marginTop:'-0.5em',}}>{name}</Fieldset.Title>\r\n                </div>\r\n                \r\n                <Fieldset.Subtitle className={classes.StatusAndSkills}>\r\n                    \r\n                        <span>{status}</span>\r\n                        <span>Skills:{array.map(x=> x!==\"\"&&<Badge type=\"secondary\" style={{margin:'0.1em'}}>{x}</Badge>)}</span>\r\n                \r\n                </Fieldset.Subtitle>\r\n                \r\n                <Fieldset.Footer style={{backgroundColor:\"#75C7C3\",color:\"white\"}}>\r\n                    <Fieldset.Footer.Actions>\r\n                    <Button style={{backgroundColor:\"#75C7C3\",color:\"white\"}} auto size=\"mini\"><Link className={classes.links} to={`/profile/${_id}`}> View</Link></Button>\r\n                    </Fieldset.Footer.Actions>\r\n                </Fieldset.Footer>\r\n            </Fieldset>\r\n        \r\n            {/* <Paper className={classes.paper} elevation={3}>\r\n\r\n                <img src={avatar} className={classes.img} />\r\n                <h2>{name}</h2>\r\n                <h2>{status} Student</h2>\r\n                <ul>\r\n                    {skills.slice(0, 4).map((skill, index) => (\r\n                        <li key={index} className='text-primary'>\r\n                            <i className=\"fas fa-check\"></i>{skill}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\r\n\r\n\r\n            </Paper> */}\r\n    \r\n        </Grid >\r\n    )\r\n};\r\n\r\nProfileitem.propTypes = {\r\n\r\n}\r\n\r\nexport default Profileitem\r\n\r\n",["466","467"],"E:\\Apsit-Hub\\client\\src\\reducers\\index.js",[],"E:\\Apsit-Hub\\client\\src\\components\\post\\CommentForm.js",["468","469","470","471","472"],"import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\nimport {Textarea,Card} from '@geist-ui/react'\r\nimport { Grid, makeStyles,Button } from '@material-ui/core'\r\n\r\n\r\nconst styles = {\r\n    containerRoot: {\r\n        marginTop: \"80px\",\r\n        border: 'gray solid 5px',\r\n        borderTop: 'none',\r\n        marginLeft: '20%',\r\n        marginRight: '20%',\r\n        backgroundColor:\"#DED5CB\",\r\n        ['@media (max-width:1000px)']: {\r\n\r\n            margin: '0',\r\n            padding: '0'\r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            margin: '0',\r\n            padding: '0'\r\n        },\r\n        },\r\n        textarea:{\r\n            marginBottom:'30px',\r\n            height: '170px',\r\n            ['@media (max-width:1000px)']: {\r\n                height: '170px',\r\n            margin: '0',\r\n            padding: '0',\r\n            \r\n        },\r\n        ['@media (max-width:600px)']: {\r\n            margin: '0',\r\n            padding: '0',\r\n            width:'100%',\r\n            height: '170px',\r\n\r\n        },\r\n        },\r\n        submitbtn:{\r\n            backgroundColor:'black',\r\n            padding:'10',\r\n            color:'white',\r\n            border:'none',\r\n            borderRadius:\"4px\",\r\n            margin:'5px',\r\n            // marginLeft:'95%',\r\n            float: 'right',\r\n            '&:hover':{\r\n                color:'black',\r\n            }\r\n\r\n        \r\n\r\n        },\r\n        postForm:{\r\n            marginBottom:\"10px\",\r\n            \r\n        }\r\n}\r\nconst useStyles = makeStyles(styles)\r\n\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [text, setText] = useState('')\r\n        const classes = useStyles()\r\n    return (\r\n        <div className={classes.postForm}>\r\n            <Card type='lite' className={classes.textarea}>\r\n                <form class=\"form my-1\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addComment(postId, { text });\r\n                setText('');\r\n            }}>\r\n                <Textarea width=\"100%\" \r\n                value={text}\r\n\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\trequired\r\n                placeholder=\"You are here! Leave a comment ?\" />\r\n                <Button  type=\"submit\"className={classes.submitbtn} value=\"Submit\" >Comment</Button>\r\n            </form>\r\n            </Card>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addComment })(CommentForm);","E:\\Apsit-Hub\\client\\src\\components\\post\\CommentItem.js",["473","474","475","476","477","478","479","480"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\nimport { CardContent, CardHeader,Avatar, makeStyles,Grid, CardActions, IconButton, Icon} from '@material-ui/core'\r\nimport {Fieldset,Badge,Button} from '@geist-ui/react'\r\nimport { XSquare } from '@geist-ui/react-icons'\r\n\r\n\r\n\r\n\r\n\r\nconst styles ={\r\n    separate:{\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n        alignItems:'center'\r\n        \r\n    },\r\n    textanddelete:{\r\n        display:'flex',\r\n        justifyContent:'space-between',\r\n        alignItems:'center'\r\n    },\r\n    nameanddate:{\r\n        marginLeft:'20px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        marginBottom:'0'\r\n\r\n    },\r\n    Date:{\r\n        fontSize:'13px'\r\n    },\r\n    colorcorrect:{\r\n        color:'black'\r\n    },\r\n        fieldset:{\r\n        color:'black',\r\n        marginBottom:'1em',\r\n        width:'100%'\r\n    },\r\n    crossbtn:{\r\n        \r\n        border:'none'\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst CommentItem = ({ postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\r\n    const classes = useStyles()\r\n    return (\r\n         <Fragment className={classes.colorcorrect}>\r\n        \r\n            \r\n            <Fieldset className={classes.fieldset}>\r\n                <div className={classes.separate}>\r\n                    <Avatar src={avatar} size=\"medium\" />\r\n\r\n                <div className={classes.nameanddate}>\r\n                <h4 style={{marginBottom:'0'}}>{name}</h4>\r\n                <span><Moment className={classes.Date} format='YYYY/MM/DD'>{date}</Moment></span>\r\n                </div>\r\n                </div>\r\n                \r\n                <Fieldset.Subtitle style={{fontSize:'17px'}} >\r\n                    <div className={classes.textanddelete}>\r\n                            {text}\r\n                {!auth.loading && user === auth.user._id && (\r\n                        \r\n                            <Button iconRight={<XSquare />} onClick={e => deleteComment(postId, _id)} type=\"error\" ghost auto size=\"small\" />\r\n                        \r\n                    )}\r\n                    </div>\r\n                </Fieldset.Subtitle>\r\n\r\n            </Fieldset>\r\n            \r\n        \r\n    \r\n    </Fragment>\r\n       \r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","E:\\Apsit-Hub\\client\\src\\reducers\\auth.js",["481","482"],"import { \r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  DELETE_ACCOUNT\r\n} from '../actions/types'\r\n\r\nconst initalState = {\r\n  token : localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n}\r\n\r\nexport default function(state = initalState,action){\r\n  const{ type,payload}= action;\r\n\r\n  switch(type){\r\n    case USER_LOADED :\r\n      return{\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading:false,\r\n        user: payload\r\n      }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token',payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated:true,\r\n        loading: false\r\n      }\r\n      \r\n    case LOGOUT:\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem('token')\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated:false,\r\n        loading: false\r\n      }\r\n\r\n    \r\n    \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","E:\\Apsit-Hub\\client\\src\\reducers\\profile.js",["483"],"import { CLEAR_PROFILE, GET_PROFILES, GET_PROFILE, UPDATE_PROFILE, GET_REPOS, PROFILE_ERROR, } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        default: return state;\r\n    }\r\n}","E:\\Apsit-Hub\\client\\src\\reducers\\alert.js",["484"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","E:\\Apsit-Hub\\client\\src\\reducers\\post.js",["485"],"import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST: return {\r\n            ...state,\r\n            post: payload,\r\n            loading: false\r\n        }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post), loading: false\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload), loading: false\r\n            }\r\n\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: payload },\r\n            loading: false\r\n        };\r\n\r\n        case REMOVE_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\Apsit-Hub\\client\\src\\components\\layout\\Footer.js",[],"E:\\Apsit-Hub\\client\\src\\components\\profiles\\searchbar.js",["486","487","488","489","490"],"  \r\n  \r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { searcher } from \"../../actions/profile\";\r\nimport { connect } from \"react-redux\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Search } from '@geist-ui/react-icons'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\ncardSearch:{\r\n\tmargin:\"50px\",\r\n\twidth:'320px',\r\n\tmarginBottom:0,\r\n\tdisplay:'flex'\r\n\r\n\r\n},\r\nsearchInput:{\r\n\tborder:'none',\r\n\twidth:'90%',\r\n\tpadding:'10px',\r\n},\r\nsearchbtn:{\r\n\r\n\tbackgroundColor:'#2B7A78',\r\n\twidth:'10%',\r\n\tfloat:'right'\r\n}\r\n\r\n}));\r\n\r\n\r\nconst SearchBar = ({ setAlert, searcher }) => {\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst classes = useStyles();\r\n\r\n\tconst OnChange = (e) => setText(e.target.value);\r\n\r\n\tconst OnClick = async (e) => {\r\n\t\tconsole.log(\"im here\");\r\n\t\te.preventDefault();\r\n\t\tif (text == \"\") {\r\n\t\t\tsetAlert(\"Please Enter Something\", \"danger\");\r\n\t\t} else {\r\n\t\t\tsearcher(text);\r\n\t\t\tconsole.log(text);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t<Card className={classes.cardSearch}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={classes.searchInput}\r\n\t\t\t\t\tonChange={(e) => OnChange(e)}\r\n\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"search users...\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button variant=\"contained\" color=\"black\"  className={classes.searchbtn}\r\n\t\t\t\tonClick={e => OnClick(e)}\r\n                                type=\"submit\">\r\n\t\t\t\t\t<Search/>\r\n\t\t\t\t</Button>\r\n\t\t\t\t</Card>\r\n\t\t</Fragment>\r\n\r\n\r\n\t\r\n\t);\r\n};\r\nSearchBar.propTypes = {\r\n\tsearcher: PropTypes.func.isRequired,\r\n\tsetAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { setAlert, searcher })(SearchBar);","E:\\Apsit-Hub\\client\\src\\components\\layout\\Navbar2.js",["491","492","493"],"import React, { Fragment } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nimport {AppBar,CssBaseline,Divider,Drawer,Hidden,IconButton,List,ListItem,ListItemIcon,ListItemText,Toolbar,Typography} from '@material-ui/core'\r\n\r\n\r\n\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport {MailIcon} from '@material-ui/icons';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport {Link} from 'react-router-dom';\r\nimport { logout } from '../../actions/auth';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { connect } from 'react-redux';\r\nimport {createMuiTheme } from '@material-ui/core/styles'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst navFont = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      'Share Tech', 'san-serif',\r\n    ].join(','),\r\n    \r\n},});\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    ['@media (min-width:600px)']: {\r\n      display:\"none\"     }\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      backgroundColor:\"#2B7A78\",\r\n      height:\"80px\"\r\n    }\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  links: {\r\n    color: 'black',\r\n    textDecoration: 'none'\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer({ auth: { isAuthenticated, loading ,user}, logout }) {\r\n//   const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n    let param = window.location.href;\r\n  const Guestdrawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider  />\r\n      <List>\r\n               <Link  to={`/login`} className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <EditIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Sign In\"} />\r\n          </ListItem></Link>\r\n        \r\n        <Link  to={`/register`} className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n              <RateReviewIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Register\"} />\r\n          </ListItem></Link>\r\n\r\n      </List>\r\n      <Divider />\r\n\r\n\r\n      <List>\r\n\r\n\r\n          <Link  to={`/profiles`} className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Students\"} />\r\n          </ListItem></Link>\r\n         \r\n         \r\n          \r\n          <a  href=\"https://www.apsit.edu.in/home\" className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n            <SchoolIcon/>\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"APSIT\"} />\r\n          </ListItem></a>\r\n          <a  href=\"https://github.com/devkcodes\" className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <ContactMailIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"FeedBack\"} />\r\n          </ListItem></a>\r\n          \r\n       \r\n      </List>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const Authdrawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider  />\r\n      <List>\r\n        <Link  to={`/profiles`} className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Students\"} />\r\n          </ListItem></Link>\r\n        \r\n        <Link  to={`/posts`} className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <RateReviewIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Posts\"} />\r\n          </ListItem></Link>\r\n          {user&&\r\n           <Link to={`/profile/${user._id}`}  className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <DashboardIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Dashboard\"} />\r\n          </ListItem></Link>\r\n          }\r\n         \r\n       \r\n      </List>\r\n      <Divider />\r\n\r\n\r\n      <List>\r\n       <Link  to={`/edit-profile`} className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <EditIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Edit Profile\"} />\r\n          </ListItem></Link>\r\n         \r\n         <Link  to={`/`} onClick={logout}  className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <ExitToAppIcon /> \r\n            </ListItemIcon> \r\n            <ListItemText primary={\"Logout\"} />\r\n          </ListItem></Link>\r\n          \r\n          <a  href=\"https://github.com/devkcodes\" className={classes.links}> <ListItem button >\r\n            <ListItemIcon>\r\n               <ContactMailIcon />\r\n            </ListItemIcon> \r\n            <ListItemText primary={\"FeedBack\"} />\r\n          </ListItem></a>\r\n       \r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    \r\n  <Fragment >\r\n    <MuiThemeProvider theme={navFont}>\r\n    \r\n\r\n      {(!loading && !isAuthenticated &&!(param === 'http://localhost:3000/')) ?\r\n          <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" style={{ backgroundColor:\"#2B7A78\",\r\n      height:\"83px\",padding:\"3%\"}} className={classes.appBar}>\r\n        <Toolbar>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" >\r\n        <Grid item>\r\n          <IconButton\r\n            color=\"#2B7A78\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link to=\"/\">\r\n          <h5 noWrap>\r\n            APSIT HUB\r\n          </h5>\r\n          </Link>\r\n          </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {Guestdrawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {Guestdrawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      </div>\r\n      : isAuthenticated&&!loading&&\r\n      <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" style={{ backgroundColor:\"#2B7A78\",\r\n      height:\"83px\",padding:\"3%\"}} className={classes.appBar}>\r\n        <Toolbar>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" >\r\n        <Grid item>\r\n          <IconButton\r\n            color=\"#2B7A78\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link to=\"/posts\">\r\n          <Typography variant=\"h5\" noWrap>\r\n            APSIT HUB\r\n          </Typography>\r\n          </Link>\r\n          </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {Authdrawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {Authdrawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      </div>\r\n      }\r\n      \r\n      </MuiThemeProvider>\r\n          </Fragment>\r\n   );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func\r\n};\r\n\r\n\r\nResponsiveDrawer.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStatetoprops = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapStatetoprops, { logout })(ResponsiveDrawer);\r\n\r\n\r\n\r\n","E:\\Apsit-Hub\\client\\src\\components\\layout\\Landing.js",["494","495"],"import React from 'react'\r\nimport './Landing.css'\r\nimport wave from '../../img/wave.png'\r\nimport blobs from '../../img/blobs-01.svg'\r\nimport hero from '../../img/hero.svg'\r\nimport logo from '../../img/APSIT-HUB.svg'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../auth/Login\";\r\nimport PropTypes from \"prop-types\";\r\nimport './footer.css'\r\n\r\nfunction Landing({ isAuthenticated }) {\r\n  \tif (isAuthenticated) {\r\n\t\treturn <Redirect to=\"/posts\" />;\r\n\t}\r\n  return (\r\n    <div>\r\n\r\n\r\n\r\n  <main class=\"section-wrapper\">\r\n\r\n    <img src={blobs} alt=\"blobs\" class=\"svelte-1p7dm5a\"/>\r\n\r\n      <section class=\"section-content hero svelte-1424rrd\">\r\n        <div class=\"content svelte-1424rrd\">\r\n          <h1 class =\"heading\">\r\n            <span class=\"grey\">\r\n\t\t\t\t\tConnecting\r\n\t\t\t\t\t<br/>\r\n        </span>\r\n\t\t\t\tAPSIT peers\r\n\t\t\t</h1> \r\n\r\n     \r\n\r\n      <img class=\"mob  svelte-1424rrd\"  src={hero} alt=\"hero\"/>\r\n      <br/>\r\n  \r\n      <h1 class =\"h1mob\">\r\n        <span>Apsit Hub</span><span> </span>\r\n            <span class=\"grey\">\r\n\t\t\t\t\tConnecting\r\n\t\t\t\t\r\n        </span><span> </span>\r\n\t\t\t\t  APSIT peers\r\n\t\t\t</h1> \r\n      <p class=\"para svelte-1424rrd\">A platform for anybody who has knack for programming apsit hub apsit hub apsit hub apsit hub apsit hub apsit hub  </p>\r\n          <button className=\" btn-land\"><a href='login'>Sign In</a></button>\r\n         \r\n          <button className=\"btn-land\"><a href='register'>Sign Up</a></button>\r\n          <span class=\"spans\">Not a member yet? Join Us!</span>\r\n        </div> \r\n        \r\n\r\n        \r\n        <img class=\"image-wrapper svelte-1424rrd\"  src={hero} alt=\"hero\"/>\r\n     \r\n      </section>\r\n\r\n      <div class=\"menu section-wrapper svelte-yoh1v8 show\">\r\n        <div class=\"section-content svelte-yoh1v8\">\r\n          <div class=\"logo svelte-yoh1v8\">\r\n            <img src={logo} alt=\"serio verify logo\" class=\"svelte-yoh1v8\"/>\r\n          </div>\r\n            <div class=\"links svelte-yoh1v8\"><a href=\"profiles\" class=\"link svelte-yoh1v8\">Students</a> \r\n\t\t\t\t<a href=\"https://www.apsit.edu.in/home\" target=\"_blank\" class=\"link svelte-yoh1v8\">APSIT</a> \r\n\t\t\t\t<a href=\"https://www.github.com/devkcodes\" class=\"link svelte-yoh1v8\">Feedback</a> \r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </main>\r\n\r\n\r\n    \r\n    <img src={wave} class=\"waves\" alt=\"wave\"/>\r\n   \r\n    \r\n    </div>\r\n  )\r\n}\r\nLanding.propTypes = {\r\n\tisAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","E:\\Apsit-Hub\\client\\src\\components\\profile\\ProfileLeft.js",["496","497","498","499","500","501"],"import React, { Fragment } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Geist UI\r\nimport {Card, Text, Divider,Avatar,Fieldset,Badge,Tooltip } from '@geist-ui/react' \r\nimport { Globe,Smile,Code,Facebook,Twitter,Linkedin,Instagram,Youtube,MessageCircle   } from '@geist-ui/react-icons'\r\n\r\n\r\n//Material UI\r\nimport { makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport {Grid,Button,Typography} from '@material-ui/core'\r\n\r\n\r\n//icons\r\nimport g4glogo from '../../img/gfgicon.png'\r\nimport leetcodelogo from '../../img/leetcode-logo.png'\r\nimport codeforceslogo from '../../img/codeforces-logo.jpg'\r\nimport codecheflogo from '../../img/codechef-logo.png'\r\nimport kagglelogo from '../../img/kaggle.png'\r\nimport auth from '../../reducers/auth';\r\n\r\n\r\nconst light = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main:\"#fff\",\r\n    }},\r\n  typography: {\r\n    fontFamily: [\r\n      'Share Tech', 'san-serif',\r\n    ].join(','),\r\n    fontSize:\"1px\",\r\n    Fontcolor:\"white\"\r\n}});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        color: 'white'\r\n    },\r\n    containerRoot: {\r\n        marginTop:'10em',\r\n\t\t\t\tdisplay:'flex',\r\n\r\n    },\r\n    CardOneText:{\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      marginTop:'',\r\n      marginLeft:'1rem',\r\n      lineHeight:'1.5rem'\r\n    },\r\n    CardOneTextTwo:{\r\n      display:'flex',\r\n      justifyContent:'space-between'\r\n    }\r\n    ,overflowText:{\r\n      marginRight:'3rem'\r\n    },\r\n    Bio:{\r\n      display:'flex',\r\n      justifyContent:'space-between',\r\n      width:'30rem'\r\n    },\r\n    logo:{\r\n      maxWidth:'25px',\r\n      marginRight:'20px',\r\n      textDecoration:'none',\r\n      color:'black'\r\n    },\r\n    icons:{\r\n      marginRight:'20px',\r\n    },\r\n    spanBio:{\r\n      margin:'10px',\r\n      marginRight:'50px',\r\n    },\r\n    name:{\r\n      marginBottom:\"0px\",\r\n      fontSize:'2rem',\r\n      marginTop:\"0\"\r\n    },\r\n    BasicProfile:{\r\n      display:'flex',\r\n      justifyContent:'space-between',\r\n      width:'92.5%',\r\n      height:'5px'\r\n    },\r\n    editBtn:{\r\n      backgroundColor:'#2B7A78',\r\n      marginRight:'3rem',\r\n      marginTop:'-15px',\r\n      textDecoration: 'none',\r\n      \r\n      \r\n    }\r\n\r\n}));\r\n\r\nfunction ProfileLeft({ profile: {\r\n    status,\r\n    avatar,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    coding,\r\n    user,\r\n    skills,\r\n    bio,\r\n},auth}) {\r\n\r\n  const classes = useStyles();\r\n  let _id;\r\n\r\n  if(auth.user!=null){\r\n    _id = user._id\r\n  }\r\n  else _id = -1;\r\n\r\n\r\n\r\n  const name = user.name;\r\n  const user_id = user._id;\r\n  const skillarray = skills.toString().split(/[\\s,]+/);\r\n  console.log(`id: ${_id}`)\r\n  console.log(user_id)\r\n  return (\r\n    <MuiThemeProvider theme={light}>\r\n       <Typography>\r\n    <Grid item  >\r\n      <Card  style={{width:\"100%\"}}>\r\n                        <Card.Content className={classes.BasicProfile}>\r\n                          <span>Basic Profile</span>\r\n                          <span>\r\n                            {_id===user_id&&\r\n                            <span><Button size='small' className={classes.editBtn} ><Link to={`/edit-profile`} >Edit Profile</Link></Button></span>}\r\n                          </span>\r\n                        </Card.Content>\r\n                        <Divider y={0} />\r\n                        <Card.Content style={{display:'flex',justifyContent:'flext-start'}}>\r\n                            <Avatar src={avatar} size=\"large\" isSquare=\"true\"/>\r\n                            \r\n                            <div className={classes.CardOneText}>\r\n                            <span>\r\n                            <Typography className={classes.name} variant=\"h6\" >{name}</Typography>\r\n                            </span>\r\n                            \r\n                            <span>\r\n                              {status} Student\r\n                            </span>\r\n                            {company&& <span>Intern at {company}</span>}\r\n                            </div>\r\n                        </Card.Content>\r\n                        <Divider y={0} />\r\n                        <Card.Content className={classes.CardOneTextTwo}>\r\n                          \r\n                            <span style={{display:'flex',alignItems:'flex-end'}}>\r\n                              <span ><Typography>Location</Typography></span>\r\n                            </span>\r\n                            <Typography><span className={classes.overflowText}>{location}</span> </Typography>\r\n                        </Card.Content>\r\n      </Card>\r\n\r\n            <Card  width=\"100%\" style={{width:\"100%\",marginTop:'2rem'}}>\r\n                        <Card.Content style={{display:'flex',justifyContent:'space-between',flexDirection:'row'}}>\r\n                          <div className={classes.Bio}>\r\n                            <span  style={{display:'flex',alignItems:'flex-end',flexDirection:'column'}} ><Text b fontWeight=\"fontWeightBold\" justify=\"\" className={classes.spanBio}>Bio</Text></span>\r\n                            <span className={classes.overflowText}>\r\n                              <Typography   align=\"justify\">{bio}</Typography>\r\n                            </span>\r\n                          </div>\r\n                        </Card.Content>\r\n                        <Divider y={0} />\r\n                        <Card.Content style={{display:'flex',justifyContent:'flext-start'}}>\r\n\r\n                            <div>\r\n                            <span>\r\n                            <Text b>Skills : </Text>\r\n                            <span>{skillarray.map(x=> x!==\"\"&&<Badge type=\"secondary\" style={{margin:'0.1em'}}>{x}</Badge>)}</span>\r\n                            </span>\r\n                            </div>\r\n                        </Card.Content>\r\n                        \r\n      </Card >\r\n\r\n      <Card style={{width:\"100%\",marginTop:'2rem'}} >\r\n        <Card.Content className={classes.CardOneTextTwo} >\r\n          \r\n                              <span style={{display:'flex',alignItems:'flex-end'}}><Code/><span ><Text b>Coding Profiles</Text></span></span>\r\n                            <span className={classes.overflowText}>\r\n                              {coding && coding.codechef && (\r\n                                // <Tooltip text={'codechef'}>\r\n                                <span>\r\n                                <a href={coding.codechef} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t                        <img className={classes.logo} src={codecheflogo} alt=\"\"/>\r\n                                </a>\r\n                                </span>\r\n                              // </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {coding && coding.codeforces && (\r\n                                <Tooltip text={'codeforces'}>\r\n\t\t\t\t\t                    <a href={coding.codeforces} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t                        <img className={classes.logo} src={codeforceslogo} alt=\"\"/>\r\n                                </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {coding && coding.leetcode && (\r\n                                <Tooltip text={'leetcode'}>\r\n\t\t\t\t\t                    <a href={coding.leetcode} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t                        <img className={classes.logo} src={leetcodelogo} alt=\"\"/>\r\n                                </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {coding && coding.geeksforgeeks && (\r\n                                <Tooltip text={'geeksforgeeks'}>\r\n\t\t\t\t\t                    <a href={coding.geeksforgeeks} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t                        <img className={classes.logo} src={g4glogo} alt=\"\"/>\r\n                                </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {coding && coding.kaggle && (\r\n                                <Tooltip text={'Kaggle'}>\r\n\t\t\t\t\t                    <a href={coding.kaggle} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t                        <img className={classes.logo} src={kagglelogo} alt=\"\"/>\r\n                                </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n\r\n                            </span>\r\n        </Card.Content>\r\n        <Divider y={0} />\r\n        <Card.Content className={classes.CardOneTextTwo} >\r\n                              <span style={{display:'flex',alignItems:'flex-end'}}><MessageCircle />  <span ><Text b>    Social Profiles</Text></span></span>\r\n                            <span className={classes.overflowText}>\r\n                              {social && social.linkedin && (\r\n                                <Tooltip text={'linkedin'}>\r\n                              <a className={classes.logo} href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Linkedin/>\r\n                              </a>\r\n\t\t\t\t\t                    \r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {social && social.instagram && (\r\n                                <Tooltip text={'Instagram'}>\r\n\t\t\t\t\t                    <a className={classes.logo} href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Instagram/>\r\n                              </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {social && social.facebook && (\r\n                                <Tooltip text={'facebook'}>\r\n\t\t\t\t\t                    <a className={classes.logo} href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Facebook/>\r\n                              </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {social && social.twitter && (\r\n                                <Tooltip text={'twitter'}>\r\n\t\t\t\t\t                    <a className={classes.logo} href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Twitter/>\r\n                              </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n                              {social && social.youtube && (\r\n                                <Tooltip text={'youtube'}>\r\n                                <a className={classes.logo} href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Youtube/>\r\n                              </a>\r\n                              </Tooltip>\r\n\t\t\t\t                      )}\r\n\r\n                            </span>\r\n        </Card.Content>\r\n\r\n        \r\n      </Card>\r\n\r\n\r\n\r\n\r\n      </Grid>\r\n      </Typography>\r\n      </MuiThemeProvider>\r\n   \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProfileLeft);\r\n","E:\\Apsit-Hub\\client\\src\\utils\\api.js",[],"E:\\Apsit-Hub\\client\\src\\components\\layout\\footer.js",["502","503","504"],"import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nfunction Footer() {\r\n\treturn (\r\n\t\t<div id=\"footer\">\r\n\t\t\t<div id=\"footer-title\">\r\n\t\t\t\t<span className=\"outlined\">Apsit</span> Hub\r\n\t\t\t</div>\r\n\t\t\t<div id=\"footer-links\">\r\n      <a href=\".\">Home</a>\r\n\t\t\t\t<a href=\"/login\">Sign In</a>\r\n\t\t\t\t<a href=\"/register\">Create Account</a>\r\n        <a href=\"https://www.apsit.edu.in/home\" target=\"_blank\">\r\n\t\t\t\t\tAPSIT\r\n\t\t\t\t</a>\r\n\t\t\t\r\n\t\t\t\t<a href=\"https://github.com/devkcodes/\" target='_blank'>Feedback</a>\r\n\t\t\t\t<a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\">\r\n\t\t\t\t\tLICENCE\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n      \r\n\t\t\t<div className=\"made__by\">\r\n\t\t\t\tCreated and maintained by <a href=\"https://github.com/reeticodes\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"made__by_name\">Reeti</span></a>{\" and  \"}\r\n\t\t\t\t<a href=\"https://github.com/devkcodes/\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"made__by_name\">Devansh Katheria</span></a> \r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Footer;",{"ruleId":"505","replacedBy":"506"},{"ruleId":"507","replacedBy":"508"},{"ruleId":"509","severity":1,"message":"510","line":14,"column":8,"nodeType":"511","messageId":"512","endLine":14,"endColumn":21},{"ruleId":"509","severity":1,"message":"513","line":29,"column":5,"nodeType":"511","messageId":"512","endLine":29,"endColumn":15},{"ruleId":"509","severity":1,"message":"514","line":71,"column":9,"nodeType":"511","messageId":"512","endLine":71,"endColumn":15},{"ruleId":"509","severity":1,"message":"515","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":24},{"ruleId":"509","severity":1,"message":"516","line":8,"column":8,"nodeType":"511","messageId":"512","endLine":8,"endColumn":16},{"ruleId":"509","severity":1,"message":"517","line":15,"column":16,"nodeType":"511","messageId":"512","endLine":15,"endColumn":23},{"ruleId":"509","severity":1,"message":"518","line":15,"column":24,"nodeType":"511","messageId":"512","endLine":15,"endColumn":32},{"ruleId":"509","severity":1,"message":"519","line":15,"column":33,"nodeType":"511","messageId":"512","endLine":15,"endColumn":38},{"ruleId":"509","severity":1,"message":"520","line":15,"column":39,"nodeType":"511","messageId":"512","endLine":15,"endColumn":46},{"ruleId":"509","severity":1,"message":"521","line":16,"column":10,"nodeType":"511","messageId":"512","endLine":16,"endColumn":19},{"ruleId":"509","severity":1,"message":"522","line":22,"column":8,"nodeType":"511","messageId":"512","endLine":22,"endColumn":13},{"ruleId":"509","severity":1,"message":"523","line":27,"column":8,"nodeType":"511","messageId":"512","endLine":27,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":47,"column":9,"nodeType":"526","messageId":"527","endLine":54,"endColumn":10,"fix":"528"},{"ruleId":"524","severity":1,"message":"529","line":55,"column":9,"nodeType":"526","messageId":"527","endLine":61,"endColumn":31,"fix":"530"},{"ruleId":"524","severity":1,"message":"525","line":67,"column":9,"nodeType":"526","messageId":"527","endLine":70,"endColumn":10,"fix":"531"},{"ruleId":"524","severity":1,"message":"529","line":71,"column":9,"nodeType":"526","messageId":"527","endLine":75,"endColumn":10,"fix":"532"},{"ruleId":"524","severity":1,"message":"525","line":94,"column":5,"nodeType":"526","messageId":"527","endLine":97,"endColumn":18,"fix":"533"},{"ruleId":"524","severity":1,"message":"529","line":98,"column":17,"nodeType":"526","messageId":"527","endLine":102,"endColumn":18,"fix":"534"},{"ruleId":"509","severity":1,"message":"535","line":2,"column":8,"nodeType":"511","messageId":"512","endLine":2,"endColumn":14},{"ruleId":"509","severity":1,"message":"536","line":3,"column":8,"nodeType":"511","messageId":"512","endLine":3,"endColumn":14},{"ruleId":"509","severity":1,"message":"537","line":4,"column":8,"nodeType":"511","messageId":"512","endLine":4,"endColumn":19},{"ruleId":"509","severity":1,"message":"538","line":5,"column":8,"nodeType":"511","messageId":"512","endLine":5,"endColumn":17},{"ruleId":"509","severity":1,"message":"515","line":6,"column":8,"nodeType":"511","messageId":"512","endLine":6,"endColumn":24},{"ruleId":"509","severity":1,"message":"516","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":16},{"ruleId":"509","severity":1,"message":"539","line":9,"column":8,"nodeType":"511","messageId":"512","endLine":9,"endColumn":13},{"ruleId":"509","severity":1,"message":"540","line":10,"column":8,"nodeType":"511","messageId":"512","endLine":10,"endColumn":11},{"ruleId":"509","severity":1,"message":"541","line":11,"column":8,"nodeType":"511","messageId":"512","endLine":11,"endColumn":12},{"ruleId":"509","severity":1,"message":"542","line":12,"column":8,"nodeType":"511","messageId":"512","endLine":12,"endColumn":24},{"ruleId":"509","severity":1,"message":"543","line":13,"column":8,"nodeType":"511","messageId":"512","endLine":13,"endColumn":18},{"ruleId":"509","severity":1,"message":"544","line":19,"column":10,"nodeType":"511","messageId":"512","endLine":19,"endColumn":14},{"ruleId":"509","severity":1,"message":"545","line":19,"column":16,"nodeType":"511","messageId":"512","endLine":19,"endColumn":24},{"ruleId":"509","severity":1,"message":"546","line":21,"column":44,"nodeType":"511","messageId":"512","endLine":21,"endColumn":57},{"ruleId":"509","severity":1,"message":"547","line":23,"column":8,"nodeType":"511","messageId":"512","endLine":23,"endColumn":24},{"ruleId":"509","severity":1,"message":"548","line":25,"column":8,"nodeType":"511","messageId":"512","endLine":25,"endColumn":21},{"ruleId":"509","severity":1,"message":"549","line":1,"column":17,"nodeType":"511","messageId":"512","endLine":1,"endColumn":25},{"ruleId":"509","severity":1,"message":"543","line":6,"column":48,"nodeType":"511","messageId":"512","endLine":6,"endColumn":58},{"ruleId":"509","severity":1,"message":"550","line":6,"column":60,"nodeType":"511","messageId":"512","endLine":6,"endColumn":68},{"ruleId":"509","severity":1,"message":"551","line":6,"column":70,"nodeType":"511","messageId":"512","endLine":6,"endColumn":74},{"ruleId":"509","severity":1,"message":"535","line":6,"column":76,"nodeType":"511","messageId":"512","endLine":6,"endColumn":82},{"ruleId":"524","severity":1,"message":"529","line":39,"column":5,"nodeType":"526","messageId":"527","endLine":40,"endColumn":23,"fix":"552"},{"ruleId":"524","severity":1,"message":"529","line":55,"column":3,"nodeType":"526","messageId":"527","endLine":57,"endColumn":6,"fix":"553"},{"ruleId":"554","severity":1,"message":"555","line":114,"column":74,"nodeType":"556","endLine":114,"endColumn":156},{"ruleId":"509","severity":1,"message":"541","line":11,"column":10,"nodeType":"511","messageId":"512","endLine":11,"endColumn":14},{"ruleId":"509","severity":1,"message":"557","line":13,"column":10,"nodeType":"511","messageId":"512","endLine":13,"endColumn":19},{"ruleId":"524","severity":1,"message":"529","line":25,"column":9,"nodeType":"526","messageId":"527","endLine":28,"endColumn":10,"fix":"558"},{"ruleId":"559","severity":1,"message":"560","line":49,"column":8,"nodeType":"561","endLine":49,"endColumn":17,"suggestions":"562"},{"ruleId":"509","severity":1,"message":"563","line":1,"column":15,"nodeType":"511","messageId":"512","endLine":1,"endColumn":23},{"ruleId":"509","severity":1,"message":"549","line":1,"column":24,"nodeType":"511","messageId":"512","endLine":1,"endColumn":32},{"ruleId":"509","severity":1,"message":"564","line":5,"column":8,"nodeType":"511","messageId":"512","endLine":5,"endColumn":12},{"ruleId":"509","severity":1,"message":"543","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":18},{"ruleId":"509","severity":1,"message":"517","line":8,"column":16,"nodeType":"511","messageId":"512","endLine":8,"endColumn":23},{"ruleId":"509","severity":1,"message":"536","line":8,"column":24,"nodeType":"511","messageId":"512","endLine":8,"endColumn":30},{"ruleId":"509","severity":1,"message":"535","line":8,"column":31,"nodeType":"511","messageId":"512","endLine":8,"endColumn":37},{"ruleId":"509","severity":1,"message":"518","line":8,"column":38,"nodeType":"511","messageId":"512","endLine":8,"endColumn":46},{"ruleId":"509","severity":1,"message":"519","line":8,"column":47,"nodeType":"511","messageId":"512","endLine":8,"endColumn":52},{"ruleId":"509","severity":1,"message":"520","line":8,"column":53,"nodeType":"511","messageId":"512","endLine":8,"endColumn":60},{"ruleId":"509","severity":1,"message":"515","line":5,"column":8,"nodeType":"511","messageId":"512","endLine":5,"endColumn":24},{"ruleId":"509","severity":1,"message":"565","line":6,"column":8,"nodeType":"511","messageId":"512","endLine":6,"endColumn":18},{"ruleId":"509","severity":1,"message":"516","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":16},{"ruleId":"509","severity":1,"message":"517","line":18,"column":16,"nodeType":"511","messageId":"512","endLine":18,"endColumn":23},{"ruleId":"509","severity":1,"message":"518","line":18,"column":24,"nodeType":"511","messageId":"512","endLine":18,"endColumn":32},{"ruleId":"509","severity":1,"message":"519","line":18,"column":33,"nodeType":"511","messageId":"512","endLine":18,"endColumn":38},{"ruleId":"509","severity":1,"message":"520","line":18,"column":39,"nodeType":"511","messageId":"512","endLine":18,"endColumn":46},{"ruleId":"509","severity":1,"message":"522","line":25,"column":8,"nodeType":"511","messageId":"512","endLine":25,"endColumn":13},{"ruleId":"509","severity":1,"message":"523","line":30,"column":8,"nodeType":"511","messageId":"512","endLine":30,"endColumn":14},{"ruleId":"566","severity":1,"message":"567","line":40,"column":9,"nodeType":"568","messageId":"569","endLine":40,"endColumn":15},{"ruleId":"524","severity":1,"message":"570","line":42,"column":9,"nodeType":"526","messageId":"527","endLine":46,"endColumn":10,"fix":"571"},{"ruleId":"524","severity":1,"message":"529","line":47,"column":9,"nodeType":"526","messageId":"527","endLine":51,"endColumn":10,"fix":"572"},{"ruleId":"524","severity":1,"message":"570","line":75,"column":9,"nodeType":"526","messageId":"527","endLine":82,"endColumn":10,"fix":"573"},{"ruleId":"524","severity":1,"message":"529","line":83,"column":9,"nodeType":"526","messageId":"527","endLine":89,"endColumn":31,"fix":"574"},{"ruleId":"524","severity":1,"message":"570","line":113,"column":1,"nodeType":"526","messageId":"527","endLine":120,"endColumn":2,"fix":"575"},{"ruleId":"524","severity":1,"message":"529","line":121,"column":1,"nodeType":"526","messageId":"527","endLine":127,"endColumn":23,"fix":"576"},{"ruleId":"524","severity":1,"message":"525","line":145,"column":5,"nodeType":"526","messageId":"527","endLine":148,"endColumn":6,"fix":"577"},{"ruleId":"524","severity":1,"message":"529","line":149,"column":5,"nodeType":"526","messageId":"527","endLine":153,"endColumn":6,"fix":"578"},{"ruleId":"579","severity":1,"message":"580","line":232,"column":33,"nodeType":"581","endLine":236,"endColumn":35},{"ruleId":"509","severity":1,"message":"535","line":2,"column":8,"nodeType":"511","messageId":"512","endLine":2,"endColumn":14},{"ruleId":"509","severity":1,"message":"537","line":4,"column":8,"nodeType":"511","messageId":"512","endLine":4,"endColumn":19},{"ruleId":"509","severity":1,"message":"515","line":6,"column":8,"nodeType":"511","messageId":"512","endLine":6,"endColumn":24},{"ruleId":"509","severity":1,"message":"516","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":16},{"ruleId":"509","severity":1,"message":"542","line":12,"column":8,"nodeType":"511","messageId":"512","endLine":12,"endColumn":24},{"ruleId":"509","severity":1,"message":"582","line":23,"column":8,"nodeType":"511","messageId":"512","endLine":23,"endColumn":19},{"ruleId":"509","severity":1,"message":"583","line":24,"column":10,"nodeType":"511","messageId":"512","endLine":24,"endColumn":23},{"ruleId":"559","severity":1,"message":"584","line":91,"column":8,"nodeType":"561","endLine":91,"endColumn":36,"suggestions":"585"},{"ruleId":"509","severity":1,"message":"586","line":96,"column":9,"nodeType":"511","messageId":"512","endLine":96,"endColumn":15},{"ruleId":"524","severity":1,"message":"529","line":141,"column":13,"nodeType":"526","messageId":"527","endLine":147,"endColumn":22,"fix":"587"},{"ruleId":"524","severity":1,"message":"529","line":154,"column":13,"nodeType":"526","messageId":"527","endLine":155,"endColumn":14,"fix":"588"},{"ruleId":"524","severity":1,"message":"529","line":166,"column":13,"nodeType":"526","messageId":"527","endLine":171,"endColumn":14,"fix":"589"},{"ruleId":"524","severity":1,"message":"570","line":172,"column":13,"nodeType":"526","messageId":"527","endLine":175,"endColumn":14,"fix":"590"},{"ruleId":"524","severity":1,"message":"529","line":183,"column":13,"nodeType":"526","messageId":"527","endLine":187,"endColumn":14,"fix":"591"},{"ruleId":"524","severity":1,"message":"529","line":195,"column":13,"nodeType":"526","messageId":"527","endLine":197,"endColumn":14,"fix":"592"},{"ruleId":"524","severity":1,"message":"593","line":198,"column":13,"nodeType":"526","messageId":"527","endLine":200,"endColumn":14,"fix":"594"},{"ruleId":"524","severity":1,"message":"529","line":206,"column":13,"nodeType":"526","messageId":"527","endLine":208,"endColumn":14,"fix":"595"},{"ruleId":"524","severity":1,"message":"593","line":209,"column":13,"nodeType":"526","messageId":"527","endLine":211,"endColumn":14,"fix":"596"},{"ruleId":"524","severity":1,"message":"529","line":218,"column":13,"nodeType":"526","messageId":"527","endLine":220,"endColumn":14,"fix":"597"},{"ruleId":"524","severity":1,"message":"593","line":221,"column":13,"nodeType":"526","messageId":"527","endLine":223,"endColumn":14,"fix":"598"},{"ruleId":"524","severity":1,"message":"529","line":232,"column":13,"nodeType":"526","messageId":"527","endLine":234,"endColumn":14,"fix":"599"},{"ruleId":"524","severity":1,"message":"593","line":235,"column":13,"nodeType":"526","messageId":"527","endLine":237,"endColumn":14,"fix":"600"},{"ruleId":"524","severity":1,"message":"529","line":273,"column":13,"nodeType":"526","messageId":"527","endLine":276,"endColumn":14,"fix":"601"},{"ruleId":"524","severity":1,"message":"529","line":293,"column":13,"nodeType":"526","messageId":"527","endLine":295,"endColumn":18,"fix":"602"},{"ruleId":"524","severity":1,"message":"529","line":302,"column":13,"nodeType":"526","messageId":"527","endLine":304,"endColumn":18,"fix":"603"},{"ruleId":"566","severity":1,"message":"604","line":308,"column":9,"nodeType":"568","messageId":"569","endLine":308,"endColumn":14},{"ruleId":"524","severity":1,"message":"529","line":312,"column":9,"nodeType":"526","messageId":"527","endLine":316,"endColumn":10,"fix":"605"},{"ruleId":"524","severity":1,"message":"529","line":325,"column":5,"nodeType":"526","messageId":"527","endLine":328,"endColumn":6,"fix":"606"},{"ruleId":"524","severity":1,"message":"529","line":333,"column":9,"nodeType":"526","messageId":"527","endLine":335,"endColumn":8,"fix":"607"},{"ruleId":"579","severity":1,"message":"580","line":428,"column":41,"nodeType":"581","endLine":428,"endColumn":70},{"ruleId":"579","severity":1,"message":"580","line":436,"column":50,"nodeType":"581","endLine":436,"endColumn":61},{"ruleId":"509","severity":1,"message":"523","line":8,"column":8,"nodeType":"511","messageId":"512","endLine":8,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":26,"column":9,"nodeType":"526","messageId":"527","endLine":32,"endColumn":10,"fix":"608"},{"ruleId":"524","severity":1,"message":"529","line":33,"column":9,"nodeType":"526","messageId":"527","endLine":38,"endColumn":10,"fix":"609"},{"ruleId":"524","severity":1,"message":"529","line":44,"column":9,"nodeType":"526","messageId":"527","endLine":49,"endColumn":10,"fix":"610"},{"ruleId":"509","severity":1,"message":"544","line":2,"column":10,"nodeType":"511","messageId":"512","endLine":2,"endColumn":14},{"ruleId":"509","severity":1,"message":"611","line":8,"column":8,"nodeType":"511","messageId":"512","endLine":8,"endColumn":20},{"ruleId":"509","severity":1,"message":"612","line":11,"column":8,"nodeType":"511","messageId":"512","endLine":11,"endColumn":13},{"ruleId":"509","severity":1,"message":"564","line":15,"column":9,"nodeType":"511","messageId":"512","endLine":15,"endColumn":13},{"ruleId":"509","severity":1,"message":"613","line":15,"column":15,"nodeType":"511","messageId":"512","endLine":15,"endColumn":19},{"ruleId":"509","severity":1,"message":"517","line":15,"column":21,"nodeType":"511","messageId":"512","endLine":15,"endColumn":28},{"ruleId":"509","severity":1,"message":"614","line":15,"column":29,"nodeType":"511","messageId":"512","endLine":15,"endColumn":33},{"ruleId":"509","severity":1,"message":"615","line":21,"column":8,"nodeType":"511","messageId":"512","endLine":21,"endColumn":17},{"ruleId":"559","severity":1,"message":"560","line":48,"column":5,"nodeType":"561","endLine":48,"endColumn":21,"suggestions":"616"},{"ruleId":"509","severity":1,"message":"617","line":52,"column":7,"nodeType":"511","messageId":"512","endLine":52,"endColumn":14},{"ruleId":"509","severity":1,"message":"535","line":3,"column":9,"nodeType":"511","messageId":"512","endLine":3,"endColumn":15},{"ruleId":"509","severity":1,"message":"537","line":3,"column":23,"nodeType":"511","messageId":"512","endLine":3,"endColumn":34},{"ruleId":"509","severity":1,"message":"544","line":22,"column":10,"nodeType":"511","messageId":"512","endLine":22,"endColumn":14},{"ruleId":"509","severity":1,"message":"583","line":26,"column":10,"nodeType":"511","messageId":"512","endLine":26,"endColumn":23},{"ruleId":"524","severity":1,"message":"529","line":104,"column":13,"nodeType":"526","messageId":"527","endLine":110,"endColumn":22,"fix":"618"},{"ruleId":"524","severity":1,"message":"529","line":117,"column":13,"nodeType":"526","messageId":"527","endLine":118,"endColumn":14,"fix":"619"},{"ruleId":"524","severity":1,"message":"529","line":129,"column":13,"nodeType":"526","messageId":"527","endLine":134,"endColumn":14,"fix":"620"},{"ruleId":"524","severity":1,"message":"570","line":135,"column":13,"nodeType":"526","messageId":"527","endLine":138,"endColumn":14,"fix":"621"},{"ruleId":"524","severity":1,"message":"529","line":145,"column":13,"nodeType":"526","messageId":"527","endLine":149,"endColumn":14,"fix":"622"},{"ruleId":"524","severity":1,"message":"529","line":157,"column":13,"nodeType":"526","messageId":"527","endLine":159,"endColumn":14,"fix":"623"},{"ruleId":"524","severity":1,"message":"593","line":160,"column":13,"nodeType":"526","messageId":"527","endLine":162,"endColumn":14,"fix":"624"},{"ruleId":"524","severity":1,"message":"529","line":168,"column":13,"nodeType":"526","messageId":"527","endLine":170,"endColumn":14,"fix":"625"},{"ruleId":"524","severity":1,"message":"593","line":171,"column":13,"nodeType":"526","messageId":"527","endLine":173,"endColumn":14,"fix":"626"},{"ruleId":"524","severity":1,"message":"529","line":180,"column":13,"nodeType":"526","messageId":"527","endLine":182,"endColumn":14,"fix":"627"},{"ruleId":"524","severity":1,"message":"593","line":183,"column":13,"nodeType":"526","messageId":"527","endLine":185,"endColumn":14,"fix":"628"},{"ruleId":"524","severity":1,"message":"529","line":194,"column":13,"nodeType":"526","messageId":"527","endLine":196,"endColumn":14,"fix":"629"},{"ruleId":"524","severity":1,"message":"593","line":197,"column":13,"nodeType":"526","messageId":"527","endLine":199,"endColumn":14,"fix":"630"},{"ruleId":"524","severity":1,"message":"529","line":232,"column":13,"nodeType":"526","messageId":"527","endLine":235,"endColumn":14,"fix":"631"},{"ruleId":"524","severity":1,"message":"529","line":252,"column":13,"nodeType":"526","messageId":"527","endLine":254,"endColumn":18,"fix":"632"},{"ruleId":"524","severity":1,"message":"529","line":261,"column":13,"nodeType":"526","messageId":"527","endLine":263,"endColumn":18,"fix":"633"},{"ruleId":"566","severity":1,"message":"604","line":267,"column":9,"nodeType":"568","messageId":"569","endLine":267,"endColumn":14},{"ruleId":"524","severity":1,"message":"529","line":272,"column":9,"nodeType":"526","messageId":"527","endLine":276,"endColumn":10,"fix":"634"},{"ruleId":"524","severity":1,"message":"529","line":280,"column":10,"nodeType":"526","messageId":"527","endLine":282,"endColumn":11,"fix":"635"},{"ruleId":"524","severity":1,"message":"529","line":290,"column":5,"nodeType":"526","messageId":"527","endLine":293,"endColumn":6,"fix":"636"},{"ruleId":"524","severity":1,"message":"529","line":298,"column":9,"nodeType":"526","messageId":"527","endLine":300,"endColumn":8,"fix":"637"},{"ruleId":"524","severity":1,"message":"529","line":304,"column":9,"nodeType":"526","messageId":"527","endLine":306,"endColumn":8,"fix":"638"},{"ruleId":"509","severity":1,"message":"639","line":332,"column":11,"nodeType":"511","messageId":"512","endLine":332,"endColumn":20},{"ruleId":"524","severity":1,"message":"529","line":369,"column":133,"nodeType":"526","messageId":"527","endLine":372,"endColumn":8,"fix":"640"},{"ruleId":"566","severity":1,"message":"641","line":371,"column":13,"nodeType":"568","messageId":"569","endLine":371,"endColumn":18},{"ruleId":"579","severity":1,"message":"580","line":447,"column":45,"nodeType":"581","endLine":447,"endColumn":74},{"ruleId":"579","severity":1,"message":"580","line":455,"column":54,"nodeType":"581","endLine":455,"endColumn":65},{"ruleId":"509","severity":1,"message":"535","line":3,"column":8,"nodeType":"511","messageId":"512","endLine":3,"endColumn":14},{"ruleId":"509","severity":1,"message":"536","line":4,"column":8,"nodeType":"511","messageId":"512","endLine":4,"endColumn":14},{"ruleId":"509","severity":1,"message":"537","line":5,"column":8,"nodeType":"511","messageId":"512","endLine":5,"endColumn":19},{"ruleId":"509","severity":1,"message":"538","line":6,"column":8,"nodeType":"511","messageId":"512","endLine":6,"endColumn":17},{"ruleId":"509","severity":1,"message":"515","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":24},{"ruleId":"509","severity":1,"message":"516","line":8,"column":8,"nodeType":"511","messageId":"512","endLine":8,"endColumn":16},{"ruleId":"509","severity":1,"message":"539","line":10,"column":8,"nodeType":"511","messageId":"512","endLine":10,"endColumn":13},{"ruleId":"509","severity":1,"message":"615","line":11,"column":8,"nodeType":"511","messageId":"512","endLine":11,"endColumn":17},{"ruleId":"509","severity":1,"message":"540","line":12,"column":8,"nodeType":"511","messageId":"512","endLine":12,"endColumn":11},{"ruleId":"509","severity":1,"message":"542","line":14,"column":8,"nodeType":"511","messageId":"512","endLine":14,"endColumn":24},{"ruleId":"509","severity":1,"message":"543","line":15,"column":8,"nodeType":"511","messageId":"512","endLine":15,"endColumn":18},{"ruleId":"509","severity":1,"message":"550","line":17,"column":8,"nodeType":"511","messageId":"512","endLine":17,"endColumn":16},{"ruleId":"509","severity":1,"message":"642","line":18,"column":8,"nodeType":"511","messageId":"512","endLine":18,"endColumn":25},{"ruleId":"509","severity":1,"message":"643","line":19,"column":8,"nodeType":"511","messageId":"512","endLine":19,"endColumn":21},{"ruleId":"509","severity":1,"message":"644","line":20,"column":8,"nodeType":"511","messageId":"512","endLine":20,"endColumn":20},{"ruleId":"509","severity":1,"message":"645","line":21,"column":8,"nodeType":"511","messageId":"512","endLine":21,"endColumn":20},{"ruleId":"509","severity":1,"message":"646","line":22,"column":8,"nodeType":"511","messageId":"512","endLine":22,"endColumn":19},{"ruleId":"509","severity":1,"message":"647","line":23,"column":8,"nodeType":"511","messageId":"512","endLine":23,"endColumn":19},{"ruleId":"509","severity":1,"message":"648","line":24,"column":8,"nodeType":"511","messageId":"512","endLine":24,"endColumn":16},{"ruleId":"509","severity":1,"message":"612","line":25,"column":8,"nodeType":"511","messageId":"512","endLine":25,"endColumn":13},{"ruleId":"509","severity":1,"message":"649","line":28,"column":9,"nodeType":"511","messageId":"512","endLine":28,"endColumn":21},{"ruleId":"566","severity":1,"message":"650","line":62,"column":9,"nodeType":"568","messageId":"569","endLine":62,"endColumn":16},{"ruleId":"509","severity":1,"message":"651","line":6,"column":5,"nodeType":"511","messageId":"512","endLine":6,"endColumn":19},{"ruleId":"652","severity":1,"message":"653","line":33,"column":13,"nodeType":"654","messageId":"655","endLine":38,"endColumn":12},{"ruleId":"652","severity":1,"message":"653","line":64,"column":13,"nodeType":"654","messageId":"655","endLine":69,"endColumn":12},{"ruleId":"652","severity":1,"message":"653","line":90,"column":13,"nodeType":"654","messageId":"655","endLine":95,"endColumn":12},{"ruleId":"652","severity":1,"message":"653","line":139,"column":13,"nodeType":"654","messageId":"655","endLine":144,"endColumn":12},{"ruleId":"652","severity":1,"message":"653","line":183,"column":13,"nodeType":"654","messageId":"655","endLine":188,"endColumn":12},{"ruleId":"652","severity":1,"message":"653","line":219,"column":9,"nodeType":"654","messageId":"655","endLine":224,"endColumn":8},{"ruleId":"656","severity":1,"message":"657","line":5,"column":1,"nodeType":"658","endLine":13,"endColumn":3},{"ruleId":"505","replacedBy":"659"},{"ruleId":"507","replacedBy":"660"},{"ruleId":"509","severity":1,"message":"544","line":2,"column":9,"nodeType":"511","messageId":"512","endLine":2,"endColumn":13},{"ruleId":"509","severity":1,"message":"536","line":11,"column":28,"nodeType":"511","messageId":"512","endLine":11,"endColumn":34},{"ruleId":"509","severity":1,"message":"535","line":11,"column":35,"nodeType":"511","messageId":"512","endLine":11,"endColumn":41},{"ruleId":"509","severity":1,"message":"518","line":11,"column":42,"nodeType":"511","messageId":"512","endLine":11,"endColumn":50},{"ruleId":"509","severity":1,"message":"519","line":11,"column":51,"nodeType":"511","messageId":"512","endLine":11,"endColumn":56},{"ruleId":"509","severity":1,"message":"520","line":11,"column":57,"nodeType":"511","messageId":"512","endLine":11,"endColumn":64},{"ruleId":"509","severity":1,"message":"661","line":12,"column":10,"nodeType":"511","messageId":"512","endLine":12,"endColumn":15},{"ruleId":"509","severity":1,"message":"662","line":12,"column":16,"nodeType":"511","messageId":"512","endLine":12,"endColumn":21},{"ruleId":"509","severity":1,"message":"614","line":12,"column":22,"nodeType":"511","messageId":"512","endLine":12,"endColumn":26},{"ruleId":"509","severity":1,"message":"663","line":12,"column":27,"nodeType":"511","messageId":"512","endLine":12,"endColumn":35},{"ruleId":"509","severity":1,"message":"664","line":12,"column":36,"nodeType":"511","messageId":"512","endLine":12,"endColumn":43},{"ruleId":"509","severity":1,"message":"665","line":12,"column":44,"nodeType":"511","messageId":"512","endLine":12,"endColumn":52},{"ruleId":"509","severity":1,"message":"666","line":12,"column":53,"nodeType":"511","messageId":"512","endLine":12,"endColumn":62},{"ruleId":"509","severity":1,"message":"667","line":12,"column":63,"nodeType":"511","messageId":"512","endLine":12,"endColumn":70},{"ruleId":"509","severity":1,"message":"668","line":12,"column":71,"nodeType":"511","messageId":"512","endLine":12,"endColumn":84},{"ruleId":"509","severity":1,"message":"669","line":13,"column":8,"nodeType":"511","messageId":"512","endLine":13,"endColumn":21},{"ruleId":"509","severity":1,"message":"583","line":21,"column":10,"nodeType":"511","messageId":"512","endLine":21,"endColumn":23},{"ruleId":"524","severity":1,"message":"529","line":56,"column":9,"nodeType":"526","messageId":"527","endLine":59,"endColumn":10,"fix":"670"},{"ruleId":"524","severity":1,"message":"529","line":81,"column":9,"nodeType":"526","messageId":"527","endLine":83,"endColumn":10,"fix":"671"},{"ruleId":"524","severity":1,"message":"525","line":98,"column":10,"nodeType":"526","messageId":"527","endLine":100,"endColumn":18,"fix":"672"},{"ruleId":"524","severity":1,"message":"529","line":102,"column":17,"nodeType":"526","messageId":"527","endLine":105,"endColumn":18,"fix":"673"},{"ruleId":"524","severity":1,"message":"529","line":108,"column":9,"nodeType":"526","messageId":"527","endLine":112,"endColumn":11,"fix":"674"},{"ruleId":"524","severity":1,"message":"529","line":117,"column":9,"nodeType":"526","messageId":"527","endLine":119,"endColumn":10,"fix":"675"},{"ruleId":"524","severity":1,"message":"529","line":123,"column":9,"nodeType":"526","messageId":"527","endLine":126,"endColumn":10,"fix":"676"},{"ruleId":"559","severity":1,"message":"677","line":138,"column":9,"nodeType":"561","endLine":138,"endColumn":25,"suggestions":"678"},{"ruleId":"509","severity":1,"message":"679","line":9,"column":10,"nodeType":"511","messageId":"512","endLine":9,"endColumn":24},{"ruleId":"509","severity":1,"message":"680","line":10,"column":10,"nodeType":"511","messageId":"512","endLine":10,"endColumn":21},{"ruleId":"509","severity":1,"message":"681","line":10,"column":23,"nodeType":"511","messageId":"512","endLine":10,"endColumn":35},{"ruleId":"509","severity":1,"message":"564","line":14,"column":9,"nodeType":"511","messageId":"512","endLine":14,"endColumn":13},{"ruleId":"509","severity":1,"message":"682","line":14,"column":22,"nodeType":"511","messageId":"512","endLine":14,"endColumn":26},{"ruleId":"509","severity":1,"message":"538","line":14,"column":27,"nodeType":"511","messageId":"512","endLine":14,"endColumn":36},{"ruleId":"509","severity":1,"message":"543","line":14,"column":50,"nodeType":"511","messageId":"512","endLine":14,"endColumn":60},{"ruleId":"524","severity":1,"message":"525","line":48,"column":5,"nodeType":"526","messageId":"527","endLine":51,"endColumn":6,"fix":"683"},{"ruleId":"524","severity":1,"message":"529","line":52,"column":5,"nodeType":"526","messageId":"527","endLine":54,"endColumn":6,"fix":"684"},{"ruleId":"524","severity":1,"message":"525","line":63,"column":1,"nodeType":"526","messageId":"527","endLine":66,"endColumn":2,"fix":"685"},{"ruleId":"524","severity":1,"message":"529","line":67,"column":1,"nodeType":"526","messageId":"527","endLine":69,"endColumn":2,"fix":"686"},{"ruleId":"509","severity":1,"message":"687","line":114,"column":12,"nodeType":"511","messageId":"512","endLine":114,"endColumn":23},{"ruleId":"509","severity":1,"message":"688","line":114,"column":25,"nodeType":"511","messageId":"512","endLine":114,"endColumn":39},{"ruleId":"689","severity":1,"message":"690","line":147,"column":44,"nodeType":"691","messageId":"569","endLine":147,"endColumn":46},{"ruleId":"509","severity":1,"message":"692","line":7,"column":18,"nodeType":"511","messageId":"512","endLine":7,"endColumn":29},{"ruleId":"509","severity":1,"message":"693","line":7,"column":31,"nodeType":"511","messageId":"512","endLine":7,"endColumn":41},{"ruleId":"509","severity":1,"message":"541","line":7,"column":61,"nodeType":"511","messageId":"512","endLine":7,"endColumn":65},{"ruleId":"509","severity":1,"message":"694","line":7,"column":67,"nodeType":"511","messageId":"512","endLine":7,"endColumn":78},{"ruleId":"509","severity":1,"message":"695","line":7,"column":80,"nodeType":"511","messageId":"512","endLine":7,"endColumn":90},{"ruleId":"509","severity":1,"message":"682","line":7,"column":92,"nodeType":"511","messageId":"512","endLine":7,"endColumn":96},{"ruleId":"509","severity":1,"message":"519","line":8,"column":18,"nodeType":"511","messageId":"512","endLine":8,"endColumn":23},{"ruleId":"509","severity":1,"message":"696","line":8,"column":31,"nodeType":"511","messageId":"512","endLine":8,"endColumn":37},{"ruleId":"566","severity":1,"message":"697","line":21,"column":35,"nodeType":"568","messageId":"569","endLine":21,"endColumn":40},{"ruleId":"566","severity":1,"message":"698","line":91,"column":133,"nodeType":"568","messageId":"569","endLine":91,"endColumn":139},{"ruleId":"509","severity":1,"message":"699","line":66,"column":15,"nodeType":"511","messageId":"512","endLine":66,"endColumn":18},{"ruleId":"509","severity":1,"message":"699","line":159,"column":15,"nodeType":"511","messageId":"512","endLine":159,"endColumn":18},{"ruleId":"509","severity":1,"message":"537","line":5,"column":8,"nodeType":"511","messageId":"512","endLine":5,"endColumn":19},{"ruleId":"509","severity":1,"message":"538","line":6,"column":8,"nodeType":"511","messageId":"512","endLine":6,"endColumn":17},{"ruleId":"509","severity":1,"message":"515","line":7,"column":8,"nodeType":"511","messageId":"512","endLine":7,"endColumn":24},{"ruleId":"509","severity":1,"message":"516","line":8,"column":8,"nodeType":"511","messageId":"512","endLine":8,"endColumn":16},{"ruleId":"509","severity":1,"message":"539","line":10,"column":8,"nodeType":"511","messageId":"512","endLine":10,"endColumn":13},{"ruleId":"509","severity":1,"message":"540","line":11,"column":8,"nodeType":"511","messageId":"512","endLine":11,"endColumn":11},{"ruleId":"509","severity":1,"message":"542","line":13,"column":8,"nodeType":"511","messageId":"512","endLine":13,"endColumn":24},{"ruleId":"509","severity":1,"message":"543","line":14,"column":8,"nodeType":"511","messageId":"512","endLine":14,"endColumn":18},{"ruleId":"509","severity":1,"message":"550","line":16,"column":8,"nodeType":"511","messageId":"512","endLine":16,"endColumn":16},{"ruleId":"509","severity":1,"message":"642","line":17,"column":8,"nodeType":"511","messageId":"512","endLine":17,"endColumn":25},{"ruleId":"509","severity":1,"message":"643","line":18,"column":8,"nodeType":"511","messageId":"512","endLine":18,"endColumn":21},{"ruleId":"509","severity":1,"message":"644","line":19,"column":8,"nodeType":"511","messageId":"512","endLine":19,"endColumn":20},{"ruleId":"509","severity":1,"message":"645","line":20,"column":8,"nodeType":"511","messageId":"512","endLine":20,"endColumn":20},{"ruleId":"509","severity":1,"message":"646","line":21,"column":8,"nodeType":"511","messageId":"512","endLine":21,"endColumn":19},{"ruleId":"509","severity":1,"message":"647","line":22,"column":8,"nodeType":"511","messageId":"512","endLine":22,"endColumn":19},{"ruleId":"509","severity":1,"message":"700","line":23,"column":8,"nodeType":"511","messageId":"512","endLine":23,"endColumn":20},{"ruleId":"509","severity":1,"message":"563","line":26,"column":17,"nodeType":"511","messageId":"512","endLine":26,"endColumn":25},{"ruleId":"509","severity":1,"message":"701","line":28,"column":8,"nodeType":"511","messageId":"512","endLine":28,"endColumn":17},{"ruleId":"505","replacedBy":"702"},{"ruleId":"507","replacedBy":"703"},{"ruleId":"509","severity":1,"message":"541","line":6,"column":10,"nodeType":"511","messageId":"512","endLine":6,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":17,"column":9,"nodeType":"526","messageId":"527","endLine":21,"endColumn":10,"fix":"704"},{"ruleId":"524","severity":1,"message":"529","line":22,"column":9,"nodeType":"526","messageId":"527","endLine":25,"endColumn":10,"fix":"705"},{"ruleId":"524","severity":1,"message":"525","line":30,"column":13,"nodeType":"526","messageId":"527","endLine":35,"endColumn":10,"fix":"706"},{"ruleId":"524","severity":1,"message":"529","line":36,"column":9,"nodeType":"526","messageId":"527","endLine":42,"endColumn":10,"fix":"707"},{"ruleId":"509","severity":1,"message":"544","line":3,"column":10,"nodeType":"511","messageId":"512","endLine":3,"endColumn":14},{"ruleId":"509","severity":1,"message":"692","line":7,"column":10,"nodeType":"511","messageId":"512","endLine":7,"endColumn":21},{"ruleId":"509","severity":1,"message":"693","line":7,"column":23,"nodeType":"511","messageId":"512","endLine":7,"endColumn":33},{"ruleId":"509","severity":1,"message":"541","line":7,"column":53,"nodeType":"511","messageId":"512","endLine":7,"endColumn":57},{"ruleId":"509","severity":1,"message":"694","line":7,"column":59,"nodeType":"511","messageId":"512","endLine":7,"endColumn":70},{"ruleId":"509","severity":1,"message":"695","line":7,"column":72,"nodeType":"511","messageId":"512","endLine":7,"endColumn":82},{"ruleId":"509","severity":1,"message":"682","line":7,"column":84,"nodeType":"511","messageId":"512","endLine":7,"endColumn":88},{"ruleId":"509","severity":1,"message":"519","line":8,"column":18,"nodeType":"511","messageId":"512","endLine":8,"endColumn":23},{"ruleId":"509","severity":1,"message":"708","line":9,"column":3,"nodeType":"511","messageId":"512","endLine":9,"endColumn":17},{"ruleId":"656","severity":1,"message":"709","line":19,"column":1,"nodeType":"658","endLine":58,"endColumn":2},{"ruleId":"656","severity":1,"message":"709","line":12,"column":1,"nodeType":"658","endLine":50,"endColumn":2},{"ruleId":"656","severity":1,"message":"709","line":5,"column":1,"nodeType":"658","endLine":18,"endColumn":2},{"ruleId":"656","severity":1,"message":"709","line":19,"column":1,"nodeType":"658","endLine":71,"endColumn":2},{"ruleId":"509","severity":1,"message":"710","line":3,"column":27,"nodeType":"511","messageId":"512","endLine":3,"endColumn":36},{"ruleId":"509","severity":1,"message":"711","line":5,"column":8,"nodeType":"511","messageId":"512","endLine":5,"endColumn":15},{"ruleId":"509","severity":1,"message":"582","line":9,"column":8,"nodeType":"511","messageId":"512","endLine":9,"endColumn":19},{"ruleId":"509","severity":1,"message":"538","line":10,"column":8,"nodeType":"511","messageId":"512","endLine":10,"endColumn":17},{"ruleId":"689","severity":1,"message":"690","line":51,"column":12,"nodeType":"691","messageId":"569","endLine":51,"endColumn":14},{"ruleId":"509","severity":1,"message":"712","line":9,"column":8,"nodeType":"511","messageId":"512","endLine":9,"endColumn":17},{"ruleId":"509","severity":1,"message":"713","line":10,"column":9,"nodeType":"511","messageId":"512","endLine":10,"endColumn":17},{"ruleId":"524","severity":1,"message":"714","line":41,"column":5,"nodeType":"526","messageId":"527","endLine":42,"endColumn":27,"fix":"715"},{"ruleId":"509","severity":1,"message":"716","line":9,"column":8,"nodeType":"511","messageId":"512","endLine":9,"endColumn":13},{"ruleId":"554","severity":1,"message":"555","line":68,"column":5,"nodeType":"556","endLine":68,"endColumn":88},{"ruleId":"509","severity":1,"message":"563","line":1,"column":17,"nodeType":"511","messageId":"512","endLine":1,"endColumn":25},{"ruleId":"509","severity":1,"message":"518","line":6,"column":36,"nodeType":"511","messageId":"512","endLine":6,"endColumn":44},{"ruleId":"509","severity":1,"message":"661","line":7,"column":10,"nodeType":"511","messageId":"512","endLine":7,"endColumn":15},{"ruleId":"509","severity":1,"message":"662","line":7,"column":16,"nodeType":"511","messageId":"512","endLine":7,"endColumn":21},{"ruleId":"509","severity":1,"message":"583","line":13,"column":10,"nodeType":"511","messageId":"512","endLine":13,"endColumn":23},{"ruleId":"509","severity":1,"message":"717","line":24,"column":8,"nodeType":"511","messageId":"512","endLine":24,"endColumn":12},{"ruleId":"554","severity":1,"message":"555","line":14,"column":9,"nodeType":"556","endLine":14,"endColumn":65},{"ruleId":"554","severity":1,"message":"555","line":18,"column":5,"nodeType":"556","endLine":18,"endColumn":61},{"ruleId":"554","severity":1,"message":"555","line":19,"column":5,"nodeType":"556","endLine":19,"endColumn":67},"no-native-reassign",["718"],"no-negated-in-lhs",["719"],"no-unused-vars","'AddExperience' is defined but never used.","Identifier","unusedVar","'bodyParser' is assigned a value but never used.","'config' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Fieldset' is defined but never used.","'Badge' is defined but never used.","'Tooltip' is defined but never used.","'InputBase' is defined but never used.","'axios' is defined but never used.","'Navbar' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:1000px)'] found.","Property","unnecessarilyComputedProperty",{"range":"720","text":"721"},"Unnecessarily computed property ['@media (max-width:600px)'] found.",{"range":"722","text":"723"},{"range":"724","text":"721"},{"range":"725","text":"723"},{"range":"726","text":"721"},{"range":"727","text":"723"},"'Avatar' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'createProfile' is defined but never used.","'DashboardActions' is defined but never used.","'CreateProfile' is defined but never used.","'useState' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.",{"range":"728","text":"723"},{"range":"729","text":"723"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'ArrowLeft' is defined but never used.",{"range":"730","text":"723"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["731"],"'Fragment' is defined but never used.","'Card' is defined but never used.","'InputLabel' is defined but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","Unnecessarily computed property ['@media (max-width:1024px)'] found.",{"range":"732","text":"733"},{"range":"734","text":"723"},{"range":"735","text":"733"},{"range":"736","text":"723"},{"range":"737","text":"733"},{"range":"738","text":"723"},{"range":"739","text":"721"},{"range":"740","text":"723"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'FormControl' is defined but never used.","'ThemeProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["741"],"'gender' is assigned a value but never used.",{"range":"742","text":"723"},{"range":"743","text":"723"},{"range":"744","text":"723"},{"range":"745","text":"733"},{"range":"746","text":"723"},{"range":"747","text":"723"},"Unnecessarily computed property ['@media (max-width:1024)'] found.",{"range":"748","text":"749"},{"range":"750","text":"723"},{"range":"751","text":"749"},{"range":"752","text":"723"},{"range":"753","text":"749"},{"range":"754","text":"723"},{"range":"755","text":"749"},{"range":"756","text":"723"},{"range":"757","text":"723"},{"range":"758","text":"723"},"Duplicate key 'Icons'.",{"range":"759","text":"723"},{"range":"760","text":"723"},{"range":"761","text":"723"},{"range":"762","text":"721"},{"range":"763","text":"723"},{"range":"764","text":"723"},"'ProfileAbout' is defined but never used.","'Alert' is defined but never used.","'Text' is defined but never used.","'Code' is defined but never used.","'Container' is defined but never used.",["765"],"'user_id' is assigned a value but never used.",{"range":"766","text":"723"},{"range":"767","text":"723"},{"range":"768","text":"723"},{"range":"769","text":"733"},{"range":"770","text":"723"},{"range":"771","text":"723"},{"range":"772","text":"749"},{"range":"773","text":"723"},{"range":"774","text":"749"},{"range":"775","text":"723"},{"range":"776","text":"749"},{"range":"777","text":"723"},{"range":"778","text":"749"},{"range":"779","text":"723"},{"range":"780","text":"723"},{"range":"781","text":"723"},{"range":"782","text":"723"},{"range":"783","text":"723"},{"range":"784","text":"723"},{"range":"785","text":"723"},{"range":"786","text":"723"},"'genderOpt' is assigned a value but never used.",{"range":"787","text":"723"},"Duplicate key 'width'.","'LanguageSharpIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'YouTubeIcon' is defined but never used.","'GridList' is defined but never used.","'AutoComplete' is defined but never used.","Duplicate key 'padding'.","'UPDATE_PROFILE' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["718"],["719"],"'Globe' is defined but never used.","'Smile' is defined but never used.","'Facebook' is defined but never used.","'Twitter' is defined but never used.","'Linkedin' is defined but never used.","'Instagram' is defined but never used.","'Youtube' is defined but never used.","'MessageCircle' is defined but never used.","'useMediaQuery' is defined but never used.",{"range":"788","text":"723"},{"range":"789","text":"723"},{"range":"790","text":"721"},{"range":"791","text":"723"},{"range":"792","text":"723"},{"range":"793","text":"723"},{"range":"794","text":"723"},"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["795"],"'convertFromRaw' is defined but never used.","'EditorState' is defined but never used.","'ContentState' is defined but never used.","'Icon' is defined but never used.",{"range":"796","text":"721"},{"range":"797","text":"723"},{"range":"798","text":"721"},{"range":"799","text":"723"},"'editorState' is assigned a value but never used.","'setEditorState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'Spacer' is defined but never used.","Duplicate key 'color'.","Duplicate key 'border'.","'res' is assigned a value but never used.","'GridListTile' is defined but never used.","'PropTypes' is defined but never used.",["718"],["719"],{"range":"800","text":"721"},{"range":"801","text":"723"},{"range":"802","text":"721"},{"range":"803","text":"723"},"'DELETE_ACCOUNT' is defined but never used.","Unexpected default export of anonymous function","'useEffect' is defined but never used.","'Spinner' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","Unnecessarily computed property ['@media (min-width:600px)'] found.",{"range":"804","text":"805"},"'Login' is defined but never used.","'auth' is defined but never used.","no-global-assign","no-unsafe-negation",[1673,1702],"'@media (max-width:1000px)'",[1870,1898],"'@media (max-width:600px)'",[2285,2314],[2403,2431],[2936,2965],[3051,3079],[904,932],[1302,1330],[765,793],{"desc":"806","fix":"807"},[1578,1607],"'@media (max-width:1024px)'",[1718,1746],[2629,2658],[2825,2853],[3631,3660],[3766,3794],[4326,4355],[4432,4460],{"desc":"808","fix":"809"},[5295,5323],[5632,5660],[5904,5932],[6092,6121],[6371,6399],[6666,6694],[6758,6785],"'@media (max-width:1024)'",[6933,6961],[7007,7034],[7210,7238],[7285,7312],[7559,7587],[7634,7661],[8506,8534],[8973,9001],[9195,9223],[9392,9420],[9685,9713],[9843,9871],[781,810],[955,983],[1185,1213],{"desc":"810","fix":"811"},[2971,2999],[3308,3336],[3580,3608],[3768,3797],[4008,4036],[4303,4331],[4395,4422],[4570,4598],[4644,4671],[4847,4875],[4922,4949],[5196,5224],[5271,5298],[6037,6065],[6504,6532],[6726,6754],[6952,6980],[7149,7177],[7357,7385],[7515,7543],[7663,7691],[9556,9584],[1574,1602],[2138,2166],[2544,2573],[2629,2657],[2764,2792],[2999,3027],[3129,3157],{"desc":"812","fix":"813"},[1307,1336],[1378,1406],[1559,1588],[1623,1651],[511,540],[619,647],[824,853],[979,1007],[1387,1415],"'@media (min-width:600px)'","Update the dependencies array to be: [getPost, match.params.id]",{"range":"814","text":"815"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"816","text":"817"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"818","text":"819"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"820","text":"821"},[1303,1312],"[getPost, match.params.id]",[4252,4280],"[loading, getCurrentProfile, profile]",[1192,1208],"[getProfileById, match.params.id]",[3439,3455],"[getGithubRepos, username]"]