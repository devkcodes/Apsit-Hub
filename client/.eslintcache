[{"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\index.jsx":"1","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\App.js":"2","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\storee.js":"3","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\auth.js":"4","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Alert.js":"6","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\routing\\PrivateRoute.js":"7","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\AddExperience.js":"8","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Landing.js":"9","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Navbar.js":"10","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Register.js":"11","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Dashboard.js":"12","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\posts\\Posts.js":"13","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Login.js":"14","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\EditProfile.js":"15","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profiles\\Profiles.js":"16","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\Profile.js":"17","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\post\\Post.js":"18","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\alert.js":"19","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\types.js":"20","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\profile.js":"23","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\DashboardActions.js":"24","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Education.js":"25","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\post.js":"26","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\posts\\PostItem.js":"27","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\posts\\PostForm.js":"28","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profiles\\ProfileItem.js":"29","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\ProfileAbout.js":"30","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\ProfileTop.js":"31","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\ProfileGithub.js":"32","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\post\\CommentItem.js":"33","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\post\\CommentForm.js":"34","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\index.js":"35","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\alert.js":"36","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\auth.js":"37","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\profile.js":"38","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\post.js":"39"},{"size":205,"mtime":1615151431738,"results":"40","hashOfConfig":"41"},{"size":2604,"mtime":1615219175893,"results":"42","hashOfConfig":"41"},{"size":407,"mtime":1614238951624,"results":"43","hashOfConfig":"41"},{"size":2302,"mtime":1614238951604,"results":"44","hashOfConfig":"41"},{"size":272,"mtime":1615144306287,"results":"45","hashOfConfig":"41"},{"size":568,"mtime":1614238951608,"results":"46","hashOfConfig":"41"},{"size":588,"mtime":1614238951608,"results":"47","hashOfConfig":"41"},{"size":3525,"mtime":1614238951608,"results":"48","hashOfConfig":"41"},{"size":958,"mtime":1615219175898,"results":"49","hashOfConfig":"41"},{"size":3609,"mtime":1615219199408,"results":"50","hashOfConfig":"41"},{"size":11998,"mtime":1615219175897,"results":"51","hashOfConfig":"41"},{"size":2625,"mtime":1615141425599,"results":"52","hashOfConfig":"41"},{"size":2040,"mtime":1615191288030,"results":"53","hashOfConfig":"41"},{"size":8792,"mtime":1615219544977,"results":"54","hashOfConfig":"41"},{"size":8753,"mtime":1615141425612,"results":"55","hashOfConfig":"41"},{"size":1261,"mtime":1615141425617,"results":"56","hashOfConfig":"41"},{"size":1837,"mtime":1615141425613,"results":"57","hashOfConfig":"41"},{"size":1234,"mtime":1615141425607,"results":"58","hashOfConfig":"41"},{"size":407,"mtime":1614238951603,"results":"59","hashOfConfig":"41"},{"size":1042,"mtime":1615141425595,"results":"60","hashOfConfig":"41"},{"size":300,"mtime":1615149983863,"results":"61","hashOfConfig":"41"},{"size":7049,"mtime":1614238951608,"results":"62","hashOfConfig":"41"},{"size":5305,"mtime":1615141425593,"results":"63","hashOfConfig":"41"},{"size":364,"mtime":1615141425600,"results":"64","hashOfConfig":"41"},{"size":1488,"mtime":1615141425601,"results":"65","hashOfConfig":"41"},{"size":3965,"mtime":1615143135291,"results":"66","hashOfConfig":"41"},{"size":3713,"mtime":1615193379873,"results":"67","hashOfConfig":"41"},{"size":1343,"mtime":1615189483264,"results":"68","hashOfConfig":"41"},{"size":1013,"mtime":1615141425616,"results":"69","hashOfConfig":"41"},{"size":980,"mtime":1615141425613,"results":"70","hashOfConfig":"41"},{"size":2810,"mtime":1615141425615,"results":"71","hashOfConfig":"41"},{"size":1844,"mtime":1615141425614,"results":"72","hashOfConfig":"41"},{"size":1791,"mtime":1615141425606,"results":"73","hashOfConfig":"41"},{"size":1160,"mtime":1615141425605,"results":"74","hashOfConfig":"41"},{"size":280,"mtime":1615141425619,"results":"75","hashOfConfig":"41"},{"size":530,"mtime":1614238951608,"results":"76","hashOfConfig":"41"},{"size":1129,"mtime":1615141425618,"results":"77","hashOfConfig":"41"},{"size":1223,"mtime":1615141425621,"results":"78","hashOfConfig":"41"},{"size":1838,"mtime":1615141425620,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"fxp381",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"82"},"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\index.jsx",[],["176","177"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\App.js",["178"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\storee.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\auth.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Landing.js",["179","180"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Navbar.js",["181","182","183","184","185","186"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Register.js",["187","188","189","190"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Dashboard.js",["191","192","193","194"],"import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentProfile, deleteAccount, createProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Education from './Education';\r\nimport CreateProfile from '../profile-forms/CreateProfile'\r\n\r\n\r\nconst Dashboard = ({ deleteAccount, getCurrentProfile, auth: { user }, profile: { profile, loading } }) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n\r\n\r\n\r\n\r\n    // return loading && profile === null ? <Spinner /> : <Fragment>\r\n\r\n    //     {profile !== null ? (\r\n    //         <Fragment>\r\n    //             <Redirect to={`/profile/${user._id}`} />\r\n    //         </Fragment>) :\r\n    //         (<Fragment>\r\n    //             <CreateProfile />\r\n    //         </Fragment>)}\r\n    // </Fragment>;\r\n\r\n    return loading && profile === null ? (\r\n        <Spinner />) : (\r\n            <Fragment>\r\n                <h1 className='large text-primary'>Dashboard</h1>\r\n                <p className='lead' >\r\n                    <i className='fas fa-user' />Welcome {user && user.name}\r\n                </p>\r\n                {profile !== null ? (\r\n                    <Fragment>\r\n                        <DashboardActions />\r\n                        {/* <Education education={profile.education} /> */}\r\n                        <div className='my-2'></div>\r\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                            <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>                    </Fragment>\r\n                ) : (\r\n                        <Fragment>\r\n                            {/* <p>You have not setup your profile yet, please add some info</p>\r\n                            <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link> */}\r\n                            <CreateProfile />\r\n                        </Fragment>\r\n                    )}\r\n            </Fragment>\r\n        );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\posts\\Posts.js",["195","196","197","198"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport Navbar from '../layout/Navbar'\r\nimport {Grid,makeStyles} from '@material-ui/core'\r\n\r\nconst styles ={\r\n    containerRoot:{\r\n        \r\n        border:'gray solid 0.01px',\r\n        borderTop:'none',\r\n        marginLeft:'20%',\r\n        marginRight:'20%',\r\n        ['@media (max-width:1000px)']:{\r\n            \r\n            margin:'0',\r\n            padding:'0'\r\n        },\r\n        ['@media (max-width:600px)']:{\r\n            margin:'0',\r\n            padding:'0'\r\n        }\r\n\r\n    },\r\n    gridItem:{\r\n        width:'65%',\r\n        ['@media (max-width:600px)']:{\r\n            width:'80%',\r\n            margin:'0',\r\n            \r\n        }\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts]);\r\n\r\n\r\n    return (\r\n\r\n        loading ? <Spinner /> : (\r\n            <Fragment>\r\n\r\n                <Grid\r\n    container\r\n    direction=\"column\"\r\n    justify=\"flex-start\"\r\n    alignItems=\"center\"\r\n    className={classes.containerRoot}\r\n>\r\n    <Grid item xs={12} >\r\n        <p>Recent Activity</p>\r\n    </Grid>\r\n    <Grid item className={classes.gridItem}>\r\n            <PostForm />\r\n    </Grid>\r\n            \r\n    \r\n                    {posts.map(post => (<Grid item xs className={classes.gridItem}><PostItem key={post._id} post={post} /></Grid>\r\n                    ))}\r\n\r\n\r\n</Grid>\r\n\r\n                \r\n                \r\n            </Fragment>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ post: state.post });\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\auth\\Login.js",["199","200","201","202"],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\EditProfile.js",["203"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAccount } from '../../actions/profile';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, deleteAccount, createProfile, getCurrentProfile, history }) => {\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            company: 'yay',\r\n            website: '',\r\n            location: '',\r\n            status: '',\r\n            skills: '',\r\n            githubusername: '',\r\n            bio: '',\r\n            twitter: '',\r\n            facebook: '',\r\n            linkedin: '',\r\n            youtube: '',\r\n            instagram: ''\r\n        });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        console.log(profile)\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading, getCurrentProfile]);\r\n\r\n\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Edit Your Profile\r\n      </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\" value={githubusername} onChange={e => onChange(e)} />\r\n\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n            username</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)} ></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button type=\"button\" onClick={() => toggleSocialInputs(!displaySocialInputs)} className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n          </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && <Fragment>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)} />\r\n                    </div>\r\n\r\n                </Fragment>}\r\n\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n\r\n                <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                    <i className='fas fa-user-minus'></i> Delete My Account\r\n                        </button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { deleteAccount, createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\Profile.js",["204"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileGithub from './ProfileGithub';\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nfunction Profile({ match, getProfileById, auth, profile: { profile, loading } }) {\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfileById(match.params.id)\r\n\t}, [getProfileById])\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Fragment>\r\n\t\t\t\t{profile === null || loading ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t{/* <h1 className=\"large text-primary\"> Dashboard </h1>\r\n\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-user\"></i> Welcome {auth.user && auth.user.name}\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/edit-profile\">\r\n\t\t\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/profiles\" className=\"btn btn-light\">Back To Profiles</Link>\r\n\t\t\t\t\t\t\t{auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\r\n\t\t\t\t\t\t\t\t<Link to=\"/edit-profile\" className=\"btn btn-light\">Edit Profile</Link>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"profile-grid my-1\">\r\n\t\t\t\t\t\t\t\t<ProfileTop profile={profile} />\r\n\t\t\t\t\t\t\t\t<ProfileAbout profile={profile} />\r\n\t\t\t\t\t\t\t\t{profile.githubusername && (<ProfileGithub username={profile.githubusername} />)}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nProfile.propTypes = {\r\n\tgetProfileById: PropTypes.func.isRequired,\r\n\tprofile: PropTypes.object.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profile,\r\n\tauth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\post\\Post.js",["205","206"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPost } from '../../actions/post';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost]);\r\n\r\n\r\n    return loading || post === null ? <Spinner /> : <Fragment>\r\n        {/* <Link to='/posts' className='btn'>Back to Posts</Link> */}\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n        <div className='comments'>\r\n            {post.comments.map(comment => (\r\n                <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n            ))}\r\n        </div>\r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\alert.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\types.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\layout\\Spinner.js",["207"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt=\"Loading...\"\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\profile.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\dashboard\\Education.js",["208","209"],"import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Education = ({ education }) => {\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td>{edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment>- {' '}\r\n                {\r\n                    edu.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                            <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n\r\n                        )\r\n                }\r\n            </td>\r\n            <td>\r\n                <button className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thread>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thread>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Education;\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\actions\\post.js",["210","211"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { ADD_COMMENT, REMOVE_COMMENT, GET_POST, GET_POSTS, ADD_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST } from './types';\r\n\r\n//Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n         console.log('i worked okkkkkkkk ')\r\n        const res = await axios.get('/api/posts');\r\n        console.log('i worked ok ')\r\n        console.log(res)\r\n        dispatch({ type: GET_POSTS, payload: res.data });\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({ type: UPDATE_LIKES, payload: { id, likes: res.data } });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: DELETE_POST, payload: id });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//add post\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts`, formData, config);\r\n\r\n        dispatch({ type: ADD_POST, payload: res.data });\r\n\r\n        dispatch(setAlert('Post created', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//Get Post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({ type: GET_POST, payload: res.data });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({ type: ADD_COMMENT, payload: res.data });\r\n\r\n        dispatch(setAlert('comment added', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};\r\n\r\n//delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n\r\n\r\n    try {\r\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n\r\n        dispatch(setAlert('comment removed', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n\r\n\r\n};","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\posts\\PostItem.js",["212","213","214","215"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post'\r\nimport {Card, CardContent, CardHeader,Avatar, makeStyles, CardActions, IconButton, Icon} from '@material-ui/core'\r\nconst styles ={\r\n    cardRoot:{\r\n        \r\n        backgroundColor:'rgb(22, 27, 34,0.5)',\r\n        border:'gray solid 0.01px',\r\n        marginBottom:'1.5rem',\r\n        color:'rgb(201, 209, 217)',\r\n        textDecoration:'none',\r\n        ['@media (max-width:600px)']:{\r\n            height:'9rem'\r\n        }\r\n    },\r\n    cardHeader:{\r\n        color:'rgb(201, 209, 217)',\r\n        ['@media (max-width:600px)']:{\r\n            height:'1em'\r\n        }\r\n    },\r\n    cardActions:{\r\n        borderTop:'gray solid 0.01px',\r\n        fontSize:'1rem',\r\n        ['@media (max-width:600px)']:{\r\n            fontSize:'11px',\r\n        }\r\n    },\r\n    actionButton:{\r\n        fontSize:'1rem',\r\n        color:'white',\r\n        textDecoration:'none'\r\n    },\r\n    Date:{\r\n        color:'rgb(201, 209, 217)',\r\n        fontSize:'0.7rem'\r\n    }\r\n    ,\r\nroot: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor:'red',\r\n    color:'rgb(201, 209, 217)',\r\n  },\r\n}\r\nconst useStyles = makeStyles(styles)\r\nconst PostItem = ({ addLike, deletePost, removeLike, auth, post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) =>{\r\n    const classes = useStyles()\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <Fragment>\r\n    {showActions&& <Card className={classes.cardRoot}>\r\n        <Link to={`/profile/${user}`}>\r\n        <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n            <Avatar src ={avatar} aria-label=\"recipe\" className={classes.avatar}>\r\n            </Avatar>\r\n        }\r\n        title={name}\r\n        subheader={\r\n        <Moment className={classes.Date} format='YYYY/MM/DD'>{date}</Moment>\r\n        }\r\n        />\r\n        </Link>\r\n        <CardContent>{text}</CardContent>\r\n        <CardActions  className={classes.cardActions}>\r\n            <IconButton className={classes.actionButton}  onClick={e => addLike(_id)}><i class=\"fas fa-thumbs-up\"></i>{\" \"}\r\n                <span>{likes.length > 0 &&\r\n                    <span >{likes.length}</span>\r\n                }</span>\r\n            </IconButton>\r\n            <IconButton className={classes.actionButton} onClick={e => removeLike(_id)}>\r\n                    <i class=\"fas fa-thumbs-down\"></i>\r\n            </IconButton>\r\n            <IconButton className={classes.actionButton}>\r\n                <Link to={`/posts/${_id}`} >\r\n                <i class=\"fas fa-comment\"></i>\r\n                {\"  \"}{comments.length > 0 && (\r\n                    <span class='comment-count'>{comments.length}</span>\r\n                )}\r\n            </Link>\r\n            </IconButton>\r\n            <IconButton className={classes.actionButton} onClick={e => deletePost(_id)}>\r\n                    <i class=\"fas fa-times\"></i>\r\n            </IconButton>\r\n        </CardActions>\r\n    </Card>}\r\n    </Fragment>\r\n\r\n)\r\n}\r\n\r\nPostItem.defaultProps = { showActions: true };\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    delete: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { deletePost, addLike, removeLike })(PostItem)\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\posts\\PostForm.js",["216"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\nimport \"../../styles/PostForm.css\"\r\nimport Card from '@material-ui/core/Card'\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div class=\"post-form-container\">\r\n           \r\n            <div class=\"bg-primary p\">\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <div className=\"post-form\">\r\n            <form class=\"form my-1\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addPost({ text });\r\n                setText(' ');\r\n            }}>\r\n                <textarea\r\n                    className=\"post-text\"\r\n                    name=\"text\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Create a post\"\r\n                    value={text} onChange={e => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type=\"submit\" class=\"inputbtn\" value=\"Submit\" />\r\n            </form>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm)\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profiles\\ProfileItem.js",["217"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profileitem = ({\r\n    profile: {\r\n        user: { _id, name, avatar },\r\n        status,\r\n        company,\r\n        location,\r\n        skills\r\n    }\r\n}) => {\r\n    return <div className=\"profile bg-light\" >\r\n        <img src={avatar} alt=\" \" className=\"round-img\" />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{status} {company && <span> at {company}</span>}</p>\r\n            <p className=\"my-1\" >{location && <span> at {location}</span>}</p>\r\n            <Link to={`/profile/${_id}`} className=\"btn btn-primary\">View Profile</Link>\r\n\r\n\r\n        </div>\r\n        <ul>\r\n            {skills.slice(0, 4).map((skill, index) => (\r\n                <li key={index} className='text-primary'>\r\n                    <i className=\"fas fa-check\"></i>{skill}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n\r\n    </div >\r\n};\r\n\r\nProfileitem.propTypes = {\r\n\r\n}\r\n\r\nexport default Profileitem\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\profile\\ProfileGithub.js",["218"],"import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    },\r\n        [getGithubRepos]\r\n\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\"> Github Repos</h2>\r\n            {\r\n                repos === null ? <Spinner /> : (\r\n                    repos.map(repo => (\r\n                        <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                            <div>\r\n                                <h4><a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a></h4>\r\n                                <p>{repo.description}</p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ul>\r\n                                    <li className=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                                    <li className=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                                    <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                        </div>)\r\n                    )\r\n\r\n                )}\r\n        </div >\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({ repos: state.profile.repos });\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\post\\CommentItem.js",["219"],"import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\n\r\nconst CommentItem = ({ postId, comment: { _id, text, name, avatar, user, date }, auth, deleteComment }) => {\r\n    return (\r\n        <div class=\"comments\">\r\n            <div class=\"post bg-white p-1 my-1\">\r\n                <div>\r\n                    <Link to={`/profile/${user}`}>\r\n                        <img\r\n                            class=\"round-img\"\r\n                            src={avatar}\r\n                            alt=\"\"\r\n                        />\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p class=\"my-1\">\r\n                        {text}\r\n                    </p>\r\n                    <p class=\"post-date\">\r\n                        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                    </p>\r\n                    {!auth.loading && user === auth.user._id && (\r\n                        <button onClick={e => deleteComment(postId, _id)} type='button' className=\"btn btn-danger\">\r\n                            <i class=\"fas fa-times\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\index.js",[],"C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\alert.js",["220"],"import { REMOVE_ALERT, SET_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//reducer is the accounting officer. It takes info and adds it to existing record and sends to alert component","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\auth.js",["221"],"import {\r\n    REGISTER_SUCCESS, ACCOUNT_DELETED,\r\n    REGISTER_FAIL, LOGOUT, LOGIN_FAIL, LOGIN_SUCCESS, USER_LOADED, AUTH_ERROR\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n\r\n            localStorage.setItem('token', payload.token);\r\n            return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n\r\n            localStorage.removeItem('token')\r\n            return { ...state, token: null, isAuthenticated: false, loading: false };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\profile.js",["222"],"import { CLEAR_PROFILE, GET_PROFILES, GET_PROFILE, UPDATE_PROFILE, GET_REPOS, PROFILE_ERROR, } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE: return {\r\n            ...state,\r\n            profile: null,\r\n            repos: [],\r\n            loading: false\r\n        };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Reeti\\Desktop\\REETI\\WEB DEVELOPMENT\\PROJECTS\\Apsit-Hub\\Apsit-Hub-Private-\\client\\src\\reducers\\post.js",["223"],"import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            };\r\n        case GET_POST: return {\r\n            ...state,\r\n            post: payload,\r\n            loading: false\r\n        }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post), loading: false\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload), loading: false\r\n            }\r\n\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case ADD_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: payload },\r\n            loading: false\r\n        };\r\n\r\n        case REMOVE_COMMENT: return {\r\n            ...state,\r\n            post: { ...state.post, comments: state.post.comments.filter(comment => comment._id !== payload) },\r\n            loading: false\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":13,"column":8,"nodeType":"230","messageId":"231","endLine":13,"endColumn":21},{"ruleId":"228","severity":1,"message":"232","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"233","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"234","line":6,"column":41,"nodeType":"230","messageId":"231","endLine":6,"endColumn":51},{"ruleId":"228","severity":1,"message":"235","line":6,"column":53,"nodeType":"230","messageId":"231","endLine":6,"endColumn":61},{"ruleId":"228","severity":1,"message":"236","line":6,"column":63,"nodeType":"230","messageId":"231","endLine":6,"endColumn":67},{"ruleId":"228","severity":1,"message":"237","line":6,"column":69,"nodeType":"230","messageId":"231","endLine":6,"endColumn":75},{"ruleId":"228","severity":1,"message":"238","line":66,"column":9,"nodeType":"230","messageId":"231","endLine":66,"endColumn":18},{"ruleId":"228","severity":1,"message":"239","line":85,"column":9,"nodeType":"230","messageId":"231","endLine":85,"endColumn":19},{"ruleId":"228","severity":1,"message":"240","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},{"ruleId":"228","severity":1,"message":"241","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":16},{"ruleId":"228","severity":1,"message":"242","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":13},{"ruleId":"228","severity":1,"message":"243","line":24,"column":8,"nodeType":"230","messageId":"231","endLine":24,"endColumn":14},{"ruleId":"228","severity":1,"message":"233","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":14},{"ruleId":"228","severity":1,"message":"244","line":3,"column":16,"nodeType":"230","messageId":"231","endLine":3,"endColumn":24},{"ruleId":"228","severity":1,"message":"245","line":5,"column":44,"nodeType":"230","messageId":"231","endLine":5,"endColumn":57},{"ruleId":"228","severity":1,"message":"246","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":17},{"ruleId":"228","severity":1,"message":"243","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":18,"column":9,"nodeType":"249","messageId":"250","endLine":22,"endColumn":10,"fix":"251"},{"ruleId":"247","severity":1,"message":"252","line":23,"column":9,"nodeType":"249","messageId":"250","endLine":26,"endColumn":10,"fix":"253"},{"ruleId":"247","severity":1,"message":"252","line":31,"column":9,"nodeType":"249","messageId":"250","endLine":35,"endColumn":10,"fix":"254"},{"ruleId":"228","severity":1,"message":"240","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":24},{"ruleId":"228","severity":1,"message":"241","line":15,"column":8,"nodeType":"230","messageId":"231","endLine":15,"endColumn":16},{"ruleId":"228","severity":1,"message":"242","line":32,"column":8,"nodeType":"230","messageId":"231","endLine":32,"endColumn":13},{"ruleId":"228","severity":1,"message":"243","line":37,"column":8,"nodeType":"230","messageId":"231","endLine":37,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":44,"column":8,"nodeType":"257","endLine":44,"endColumn":36,"suggestions":"258"},{"ruleId":"255","severity":1,"message":"259","line":15,"column":5,"nodeType":"257","endLine":15,"endColumn":21,"suggestions":"260"},{"ruleId":"228","severity":1,"message":"233","line":7,"column":10,"nodeType":"230","messageId":"231","endLine":7,"endColumn":14},{"ruleId":"255","severity":1,"message":"259","line":14,"column":8,"nodeType":"257","endLine":14,"endColumn":17,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":5,"column":1,"nodeType":"264","endLine":13,"endColumn":3},{"ruleId":"228","severity":1,"message":"265","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":35},{"ruleId":"228","severity":1,"message":"266","line":5,"column":10,"nodeType":"230","messageId":"231","endLine":5,"endColumn":17},{"ruleId":"228","severity":1,"message":"267","line":60,"column":15,"nodeType":"230","messageId":"231","endLine":60,"endColumn":18},{"ruleId":"228","severity":1,"message":"267","line":145,"column":15,"nodeType":"230","messageId":"231","endLine":145,"endColumn":18},{"ruleId":"228","severity":1,"message":"268","line":7,"column":84,"nodeType":"230","messageId":"231","endLine":7,"endColumn":88},{"ruleId":"247","severity":1,"message":"252","line":16,"column":9,"nodeType":"249","messageId":"250","endLine":18,"endColumn":10,"fix":"269"},{"ruleId":"247","severity":1,"message":"252","line":22,"column":9,"nodeType":"249","messageId":"250","endLine":24,"endColumn":10,"fix":"270"},{"ruleId":"247","severity":1,"message":"252","line":29,"column":9,"nodeType":"249","messageId":"250","endLine":31,"endColumn":10,"fix":"271"},{"ruleId":"228","severity":1,"message":"272","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"228","severity":1,"message":"273","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":17},{"ruleId":"255","severity":1,"message":"274","line":12,"column":9,"nodeType":"257","endLine":12,"endColumn":25,"suggestions":"275"},{"ruleId":"228","severity":1,"message":"232","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"262","severity":1,"message":"276","line":5,"column":1,"nodeType":"264","endLine":18,"endColumn":2},{"ruleId":"262","severity":1,"message":"276","line":14,"column":1,"nodeType":"264","endLine":40,"endColumn":2},{"ruleId":"262","severity":1,"message":"276","line":12,"column":1,"nodeType":"264","endLine":50,"endColumn":2},{"ruleId":"262","severity":1,"message":"276","line":19,"column":1,"nodeType":"264","endLine":71,"endColumn":2},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'AddExperience' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Avatar' is defined but never used.","'authLinks' is assigned a value but never used.","'guestLinks' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'axios' is defined but never used.","'Navbar' is defined but never used.","'Redirect' is defined but never used.","'createProfile' is defined but never used.","'Education' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['@media (max-width:1000px)'] found.","Property","unnecessarilyComputedProperty",{"range":"279","text":"280"},"Unnecessarily computed property ['@media (max-width:600px)'] found.",{"range":"281","text":"282"},{"range":"283","text":"282"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.","ArrayExpression",["284"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["285"],["286"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'connect' is defined but never used.","'res' is assigned a value but never used.","'Icon' is defined but never used.",{"range":"287","text":"282"},{"range":"288","text":"282"},{"range":"289","text":"282"},"'Card' is defined but never used.","'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["290"],"Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation",[558,587],"'@media (max-width:1000px)'",[675,703],"'@media (max-width:600px)'",[824,852],{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},[617,645],[758,786],[928,956],{"desc":"297","fix":"298"},"Update the dependencies array to be: [loading, getCurrentProfile, profile]",{"range":"299","text":"300"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"301","text":"302"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"303","text":"304"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"305","text":"306"},[1970,1998],"[loading, getCurrentProfile, profile]",[548,564],"[getProfileById, match.params.id]",[531,540],"[getPost, match.params.id]",[361,377],"[getGithubRepos, username]"]